1.并行(pthread是一种内核级线程，确实可以利用多核来并行运行)put的时候，对insert的处理，这里有不变量每个桶的头指针都应该指向头结点，但是这里暂时违背了，所以需要加锁保证在暂时违背的时候都只有一个线程正在运行。
2.注意的是在调用函数insert()前后加锁和在函数体{}内加锁不同，因为参数的问题，比如这里的参数指针struct entry *n的指针在并发进入insert时是同一个，导致了n并不是指向头结点(所以说如果非必要，那就直接在调用函数()的时候加锁，不要进入函数体内加锁，这样不用分析；除非你是为了更好的细粒度，这样的话不要忘记要分析参数的具体情况是否违背了不变量原则，具体分析)
