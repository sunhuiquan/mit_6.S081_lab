!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	./Makefile	/^	git archive --format=tar HEAD | gzip > lab-$(LAB)-handin.tar.gz$/;"	m
AS	./Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	./user/umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	./user/sh.c	12;"	d	file:
BACKSPACE	./kernel/console.c	25;"	d	file:
BBLOCK	./kernel/fs.h	51;"	d
BPB	./kernel/fs.h	48;"	d
BSIZE	./kernel/fs.h	6;"	d
BUFSZ	./user/usertests.c	20;"	d	file:
C	./kernel/console.c	26;"	d	file:
CC	./Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	./Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb$/;"	m
CLINT	./kernel/memlayout.h	29;"	d
CLINT_MTIME	./kernel/memlayout.h	31;"	d
CLINT_MTIMECMP	./kernel/memlayout.h	30;"	d
COLORS	./gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CONSOLE	./kernel/file.h	40;"	d
CPUS	./Makefile	/^CPUS := 3$/;"	m
CURRENT_TEST	./gradelib.py	/^CURRENT_TEST = None$/;"	v
DIRSIZ	./kernel/fs.h	54;"	d
Disassembly	./kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/prime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	./kernel/elf.h	3;"	d
ELF_PROG_FLAG_EXEC	./kernel/elf.h	40;"	d
ELF_PROG_FLAG_READ	./kernel/elf.h	42;"	d
ELF_PROG_FLAG_WRITE	./kernel/elf.h	41;"	d
ELF_PROG_LOAD	./kernel/elf.h	37;"	d
EXEC	./user/sh.c	8;"	d	file:
FCR	./kernel/uart.c	27;"	d	file:
FCR_FIFO_CLEAR	./kernel/uart.c	29;"	d	file:
FCR_FIFO_ENABLE	./kernel/uart.c	28;"	d	file:
FD_DEVICE	./kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon7
FD_INODE	./kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon7
FD_NONE	./kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon7
FD_PIPE	./kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon7
FSMAGIC	./kernel/fs.h	25;"	d
FSSIZE	./kernel/param.h	12;"	d
GDBClient	./gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	./Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
Header	./user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	./kernel/fs.h	45;"	d
IER	./kernel/uart.c	24;"	d	file:
IER_RX_ENABLE	./kernel/uart.c	26;"	d	file:
IER_TX_ENABLE	./kernel/uart.c	25;"	d	file:
INPUT_BUF	./kernel/console.c	48;"	d	file:
IPB	./kernel/fs.h	42;"	d
ISR	./kernel/uart.c	30;"	d	file:
K	./Makefile	/^K=kernel$/;"	m
KERNBASE	./kernel/memlayout.h	47;"	d
KSTACK	./kernel/memlayout.h	56;"	d
LAB	./conf/lab.mk	/^LAB=util$/;"	m
LABUPPER	./Makefile	/^LABUPPER = $(shell echo $(LAB) | tr a-z A-Z)$/;"	m
LCR	./kernel/uart.c	31;"	d	file:
LCR_BAUD_LATCH	./kernel/uart.c	33;"	d	file:
LCR_EIGHT_BITS	./kernel/uart.c	32;"	d	file:
LD	./Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	./Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	./user/sh.c	11;"	d	file:
LOGSIZE	./kernel/param.h	10;"	d
LSR	./kernel/uart.c	34;"	d	file:
LSR_RX_READY	./kernel/uart.c	35;"	d	file:
LSR_TX_IDLE	./kernel/uart.c	36;"	d	file:
MAKE_SATP	./kernel/riscv.h	187;"	d
MAKE_TIMESTAMP	./gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAXARG	./kernel/param.h	8;"	d
MAXARGS	./user/sh.c	14;"	d	file:
MAXFILE	./kernel/fs.h	29;"	d
MAXOPBLOCKS	./kernel/param.h	9;"	d
MAXPATH	./kernel/param.h	13;"	d
MAXVA	./kernel/riscv.h	351;"	d
MIE_MEIE	./kernel/riscv.h	97;"	d
MIE_MSIE	./kernel/riscv.h	99;"	d
MIE_MTIE	./kernel/riscv.h	98;"	d
MSTATUS_MIE	./kernel/riscv.h	16;"	d
MSTATUS_MPP_M	./kernel/riscv.h	13;"	d
MSTATUS_MPP_MASK	./kernel/riscv.h	12;"	d
MSTATUS_MPP_S	./kernel/riscv.h	14;"	d
MSTATUS_MPP_U	./kernel/riscv.h	15;"	d
N	./user/forktest.asm	/^#define N  1000$/;"	d
N	./user/forktest.c	8;"	d	file:
NBUF	./kernel/param.h	11;"	d
NCPU	./kernel/param.h	2;"	d
NDEV	./kernel/param.h	6;"	d
NDIRECT	./kernel/fs.h	27;"	d
NELEM	./kernel/defs.h	187;"	d
NFILE	./kernel/param.h	4;"	d
NINDIRECT	./kernel/fs.h	28;"	d
NINODE	./kernel/param.h	5;"	d
NINODES	./mkfs/mkfs.c	18;"	d	file:
NOFILE	./kernel/param.h	3;"	d
NPROC	./kernel/param.h	1;"	d
NUM	./kernel/virtio.h	48;"	d
OBJCOPY	./Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	./Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	./Makefile	/^OBJS = \\$/;"	m
O_CREATE	./kernel/fcntl.h	4;"	d
O_RDONLY	./kernel/fcntl.h	1;"	d
O_RDWR	./kernel/fcntl.h	3;"	d
O_TRUNC	./kernel/fcntl.h	5;"	d
O_WRONLY	./kernel/fcntl.h	2;"	d
PA2PTE	./kernel/riscv.h	336;"	d
PGROUNDDOWN	./kernel/riscv.h	327;"	d
PGROUNDUP	./kernel/riscv.h	326;"	d
PGSHIFT	./kernel/riscv.h	324;"	d
PGSIZE	./kernel/riscv.h	323;"	d
PHYSTOP	./kernel/memlayout.h	48;"	d
PIPE	./user/sh.c	10;"	d	file:
PIPESIZE	./kernel/pipe.c	11;"	d	file:
PLIC	./kernel/memlayout.h	34;"	d
PLIC_MCLAIM	./kernel/memlayout.h	41;"	d
PLIC_MENABLE	./kernel/memlayout.h	37;"	d
PLIC_MPRIORITY	./kernel/memlayout.h	39;"	d
PLIC_PENDING	./kernel/memlayout.h	36;"	d
PLIC_PRIORITY	./kernel/memlayout.h	35;"	d
PLIC_SCLAIM	./kernel/memlayout.h	42;"	d
PLIC_SENABLE	./kernel/memlayout.h	38;"	d
PLIC_SPRIORITY	./kernel/memlayout.h	40;"	d
PTE2PA	./kernel/riscv.h	338;"	d
PTE_FLAGS	./kernel/riscv.h	340;"	d
PTE_R	./kernel/riscv.h	330;"	d
PTE_U	./kernel/riscv.h	333;"	d
PTE_V	./kernel/riscv.h	329;"	d
PTE_W	./kernel/riscv.h	331;"	d
PTE_X	./kernel/riscv.h	332;"	d
PX	./kernel/riscv.h	345;"	d
PXMASK	./kernel/riscv.h	343;"	d
PXSHIFT	./kernel/riscv.h	344;"	d
QEMU	./Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMU	./gradelib.py	/^class QEMU(object):$/;"	c
QEMUGDB	./Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	./Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 128M -smp $(CPUS) -nographic$/;"	m
R	./kernel/virtio_disk.c	21;"	d	file:
REDIR	./user/sh.c	9;"	d	file:
RHR	./kernel/uart.c	22;"	d	file:
ROOTDEV	./kernel/param.h	7;"	d
ROOTINO	./kernel/fs.h	5;"	d
RUNNABLE	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	./kernel/uart.c	38;"	d	file:
Reg	./kernel/uart.c	16;"	d	file:
Runner	./gradelib.py	/^class Runner():$/;"	c
SATP_SV39	./kernel/riscv.h	185;"	d
SIE_SEIE	./kernel/riscv.h	79;"	d
SIE_SSIE	./kernel/riscv.h	81;"	d
SIE_STIE	./kernel/riscv.h	80;"	d
SLEEPING	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	./kernel/riscv.h	46;"	d
SSTATUS_SPIE	./kernel/riscv.h	44;"	d
SSTATUS_SPP	./kernel/riscv.h	43;"	d
SSTATUS_UIE	./kernel/riscv.h	47;"	d
SSTATUS_UPIE	./kernel/riscv.h	45;"	d
SYS_chdir	./kernel/syscall.h	10;"	d
SYS_close	./kernel/syscall.h	22;"	d
SYS_dup	./kernel/syscall.h	11;"	d
SYS_exec	./kernel/syscall.h	8;"	d
SYS_exit	./kernel/syscall.h	3;"	d
SYS_fork	./kernel/syscall.h	2;"	d
SYS_fstat	./kernel/syscall.h	9;"	d
SYS_getpid	./kernel/syscall.h	12;"	d
SYS_kill	./kernel/syscall.h	7;"	d
SYS_link	./kernel/syscall.h	20;"	d
SYS_mkdir	./kernel/syscall.h	21;"	d
SYS_mknod	./kernel/syscall.h	18;"	d
SYS_open	./kernel/syscall.h	16;"	d
SYS_pipe	./kernel/syscall.h	5;"	d
SYS_read	./kernel/syscall.h	6;"	d
SYS_sbrk	./kernel/syscall.h	13;"	d
SYS_sleep	./kernel/syscall.h	14;"	d
SYS_unlink	./kernel/syscall.h	19;"	d
SYS_uptime	./kernel/syscall.h	15;"	d
SYS_wait	./kernel/syscall.h	4;"	d
SYS_write	./kernel/syscall.h	17;"	d
TESTS	./gradelib.py	/^TESTS = []$/;"	v
THR	./kernel/uart.c	23;"	d	file:
TOOLPREFIX	./Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&1; \\$/;"	m
TRAMPOLINE	./kernel/memlayout.h	52;"	d
TRAPFRAME	./kernel/memlayout.h	67;"	d
T_DEVICE	./kernel/stat.h	3;"	d
T_DIR	./kernel/stat.h	1;"	d
T_FILE	./kernel/stat.h	2;"	d
TerminateTest	./gradelib.py	/^class TerminateTest(Exception):$/;"	c
U	./Makefile	/^U=user$/;"	m
UART0	./kernel/memlayout.h	21;"	d
UART0_IRQ	./kernel/memlayout.h	22;"	d
UART_TX_BUF_SIZE	./kernel/uart.c	43;"	d	file:
UEXTRA	./Makefile	/^UEXTRA=$/;"	m
ULIB	./Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	./Makefile	/^UPROGS=\\$/;"	m
UPSTREAM	./Makefile	/^UPSTREAM := $(shell git remote -v | grep -m 1 "xv6-labs-2020" | awk '{split($$0,a," "); print a[1]}')$/;"	m
UsedArea	./kernel/virtio.h	/^struct UsedArea {$/;"	s
VIRTIO0	./kernel/memlayout.h	25;"	d
VIRTIO0_IRQ	./kernel/memlayout.h	26;"	d
VIRTIO_BLK_F_CONFIG_WCE	./kernel/virtio.h	40;"	d
VIRTIO_BLK_F_MQ	./kernel/virtio.h	41;"	d
VIRTIO_BLK_F_RO	./kernel/virtio.h	38;"	d
VIRTIO_BLK_F_SCSI	./kernel/virtio.h	39;"	d
VIRTIO_BLK_T_IN	./kernel/virtio.h	65;"	d
VIRTIO_BLK_T_OUT	./kernel/virtio.h	66;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	./kernel/virtio.h	32;"	d
VIRTIO_CONFIG_S_DRIVER	./kernel/virtio.h	33;"	d
VIRTIO_CONFIG_S_DRIVER_OK	./kernel/virtio.h	34;"	d
VIRTIO_CONFIG_S_FEATURES_OK	./kernel/virtio.h	35;"	d
VIRTIO_F_ANY_LAYOUT	./kernel/virtio.h	42;"	d
VIRTIO_MMIO_DEVICE_FEATURES	./kernel/virtio.h	17;"	d
VIRTIO_MMIO_DEVICE_ID	./kernel/virtio.h	15;"	d
VIRTIO_MMIO_DRIVER_FEATURES	./kernel/virtio.h	18;"	d
VIRTIO_MMIO_GUEST_PAGE_SIZE	./kernel/virtio.h	19;"	d
VIRTIO_MMIO_INTERRUPT_ACK	./kernel/virtio.h	28;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	./kernel/virtio.h	27;"	d
VIRTIO_MMIO_MAGIC_VALUE	./kernel/virtio.h	13;"	d
VIRTIO_MMIO_QUEUE_ALIGN	./kernel/virtio.h	23;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	./kernel/virtio.h	26;"	d
VIRTIO_MMIO_QUEUE_NUM	./kernel/virtio.h	22;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	./kernel/virtio.h	21;"	d
VIRTIO_MMIO_QUEUE_PFN	./kernel/virtio.h	24;"	d
VIRTIO_MMIO_QUEUE_READY	./kernel/virtio.h	25;"	d
VIRTIO_MMIO_QUEUE_SEL	./kernel/virtio.h	20;"	d
VIRTIO_MMIO_STATUS	./kernel/virtio.h	29;"	d
VIRTIO_MMIO_VENDOR_ID	./kernel/virtio.h	16;"	d
VIRTIO_MMIO_VERSION	./kernel/virtio.h	14;"	d
VIRTIO_RING_F_EVENT_IDX	./kernel/virtio.h	44;"	d
VIRTIO_RING_F_INDIRECT_DESC	./kernel/virtio.h	43;"	d
VRING_DESC_F_NEXT	./kernel/virtio.h	56;"	d
VRING_DESC_F_WRITE	./kernel/virtio.h	57;"	d
VRingDesc	./kernel/virtio.h	/^struct VRingDesc {$/;"	s
VRingUsedElem	./kernel/virtio.h	/^struct VRingUsedElem {$/;"	s
WEBSUB	./Makefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2020\/handin.py$/;"	m
WriteReg	./kernel/uart.c	39;"	d	file:
ZOMBIE	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_GDBPORT	./gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	./gradelib.py	/^__all__ = []$/;"	v
__init__	./gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	./gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	./gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	./gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	./gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	./gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	./gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_entry	./kernel/entry.S	/^_entry:$/;"	l
a	./a.c	/^int a = DIRSIZ;$/;"	v
a	./kernel/kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	./kernel/kernel.asm	/^  a = PGROUNDDOWN(va);$/;"	d
a	./user/cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/find.c	/^int a = DIRSIZ;$/;"	v
a	./user/forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	./user/grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	./user/kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	./user/ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	./user/ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/prime.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	./user/primes.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	./user/rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	./user/sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	./user/sleep.asm	/^   a:	02a7d063          	bge	a5,a0,2a <main+0x2a>$/;"	l
a	./user/usertests.asm	/^    a = b + 1;$/;"	d
a	./user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	./user/usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	./user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	./user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	./user/wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	./kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe
a0	./user/cat.asm	/^  a0:	00858913          	addi	s2,a1,8$/;"	l
a0	./user/echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	./user/forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	./user/grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	./user/ls.asm	/^  a0:	02000593          	li	a1,32$/;"	l
a0	./user/mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	./user/prime.asm	/^  a0:	4501                	li	a0,0$/;"	l
a0	./user/primes.asm	/^  a0:	4501                	li	a0,0$/;"	l
a0	./user/rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	./user/sh.asm	/^      a0:	00000097          	auipc	ra,0x0$/;"	l
a0	./user/sleep.asm	/^  a0:	4685                	li	a3,1$/;"	l
a0	./user/stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	./user/usertests.asm	/^      a0:	e426                	sd	s1,8(sp)$/;"	l
a0	./user/wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	./user/zombie.asm	/^  a0:	0800                	addi	s0,sp,16$/;"	l
a00	./user/grep.asm	/^ a00:	6398                	ld	a4,0(a5)$/;"	l
a00	./user/ls.asm	/^ a00:	97ba                	add	a5,a5,a4$/;"	l
a00	./user/usertests.asm	/^     a00:	854e                	mv	a0,s3$/;"	l
a02	./user/grep.asm	/^ a02:	e118                	sd	a4,0(a0)$/;"	l
a02	./user/grind.asm	/^     a02:	7aa080e7          	jalr	1962(ra) # 11a8 <fprintf>$/;"	l
a02	./user/ls.asm	/^ a02:	0137a423          	sw	s3,8(a5)$/;"	l
a02	./user/sh.asm	/^     a02:	df6080e7          	jalr	-522(ra) # 7f4 <parseline>$/;"	l
a02	./user/usertests.asm	/^     a02:	00005097          	auipc	ra,0x5$/;"	l
a04	./user/grep.asm	/^ a04:	bff1                	j	9e0 <malloc+0x86>$/;"	l
a06	./user/grep.asm	/^ a06:	01652423          	sw	s6,8(a0)$/;"	l
a06	./user/grind.asm	/^     a06:	4511                	li	a0,4$/;"	l
a06	./user/ls.asm	/^ a06:	00000717          	auipc	a4,0x0$/;"	l
a06	./user/sh.asm	/^     a06:	892a                	mv	s2,a0$/;"	l
a06	./user/usertests.asm	/^     a06:	996080e7          	jalr	-1642(ra) # 5398 <write>$/;"	l
a08	./user/grind.asm	/^     a08:	00000097          	auipc	ra,0x0$/;"	l
a08	./user/sh.asm	/^     a08:	00001617          	auipc	a2,0x1$/;"	l
a0a	./user/grep.asm	/^ a0a:	0541                	addi	a0,a0,16$/;"	l
a0a	./user/ls.asm	/^ a0a:	0ea73923          	sd	a0,242(a4) # af8 <freep>$/;"	l
a0a	./user/usertests.asm	/^     a0a:	40000793          	li	a5,1024$/;"	l
a0c	./user/grep.asm	/^ a0c:	00000097          	auipc	ra,0x0$/;"	l
a0c	./user/grind.asm	/^     a0c:	456080e7          	jalr	1110(ra) # e5e <exit>$/;"	l
a0c	./user/sh.asm	/^     a0c:	9c060613          	addi	a2,a2,-1600 # 13c8 <malloc+0x1c8>$/;"	l
a0e	./user/ls.asm	/^ a0e:	01078513          	addi	a0,a5,16$/;"	l
a0e	./user/usertests.asm	/^     a0e:	06f51c63          	bne	a0,a5,a86 <writebig+0xcc>$/;"	l
a1	./kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe
a10	./user/grep.asm	/^ a10:	ec6080e7          	jalr	-314(ra) # 8d2 <free>$/;"	l
a10	./user/grind.asm	/^     a10:	f9842503          	lw	a0,-104(s0)$/;"	l
a10	./user/sh.asm	/^     a10:	85a6                	mv	a1,s1$/;"	l
a12	./user/ls.asm	/^ a12:	70e2                	ld	ra,56(sp)$/;"	l
a12	./user/sh.asm	/^     a12:	fd840513          	addi	a0,s0,-40$/;"	l
a12	./user/usertests.asm	/^     a12:	2485                	addiw	s1,s1,1$/;"	l
a14	./user/grep.asm	/^ a14:	00093503          	ld	a0,0(s2)$/;"	l
a14	./user/grind.asm	/^     a14:	00000097          	auipc	ra,0x0$/;"	l
a14	./user/ls.asm	/^ a14:	7442                	ld	s0,48(sp)$/;"	l
a14	./user/usertests.asm	/^     a14:	ff4491e3          	bne	s1,s4,9f6 <writebig+0x3c>$/;"	l
a16	./user/ls.asm	/^ a16:	74a2                	ld	s1,40(sp)$/;"	l
a16	./user/sh.asm	/^     a16:	00000097          	auipc	ra,0x0$/;"	l
a18	./user/grep.asm	/^ a18:	d971                	beqz	a0,9ec <malloc+0x92>$/;"	l
a18	./user/grind.asm	/^     a18:	472080e7          	jalr	1138(ra) # e86 <close>$/;"	l
a18	./user/ls.asm	/^ a18:	7902                	ld	s2,32(sp)$/;"	l
a18	./user/usertests.asm	/^     a18:	854e                	mv	a0,s3$/;"	l
a1a	./user/grep.asm	/^ a1a:	611c                	ld	a5,0(a0)$/;"	l
a1a	./user/ls.asm	/^ a1a:	69e2                	ld	s3,24(sp)$/;"	l
a1a	./user/sh.asm	/^     a1a:	b02080e7          	jalr	-1278(ra) # 518 <peek>$/;"	l
a1a	./user/usertests.asm	/^     a1a:	00005097          	auipc	ra,0x5$/;"	l
a1c	./user/grep.asm	/^ a1c:	4798                	lw	a4,8(a5)$/;"	l
a1c	./user/grind.asm	/^     a1c:	4505                	li	a0,1$/;"	l
a1c	./user/ls.asm	/^ a1c:	6a42                	ld	s4,16(sp)$/;"	l
a1e	./user/grep.asm	/^ a1e:	fa9776e3          	bgeu	a4,s1,9ca <malloc+0x70>$/;"	l
a1e	./user/grind.asm	/^     a1e:	00000097          	auipc	ra,0x0$/;"	l
a1e	./user/ls.asm	/^ a1e:	6aa2                	ld	s5,8(sp)$/;"	l
a1e	./user/sh.asm	/^     a1e:	fd843603          	ld	a2,-40(s0)$/;"	l
a1e	./user/usertests.asm	/^     a1e:	986080e7          	jalr	-1658(ra) # 53a0 <close>$/;"	l
a2	./kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe
a2	./user/echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	./user/forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	./user/grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	./user/grind.asm	/^      a2:	00001097          	auipc	ra,0x1$/;"	l
a2	./user/init.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	./user/kill.asm	/^  a2:	40a7853b          	subw	a0,a5,a0$/;"	l
a2	./user/ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	./user/pingpong.asm	/^  a2:	312080e7          	jalr	786(ra) # 3b0 <getpid>$/;"	l
a2	./user/prime.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	./user/primes.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	./user/sleep.asm	/^  a2:	9e89                	subw	a3,a3,a0$/;"	l
a2	./user/usertests.asm	/^      a2:	1000                	addi	s0,sp,32$/;"	l
a2	./user/zombie.asm	/^  a2:	ce09                	beqz	a2,bc <memset+0x20>$/;"	l
a20	./user/ls.asm	/^ a20:	6b02                	ld	s6,0(sp)$/;"	l
a22	./user/grep.asm	/^ a22:	00093703          	ld	a4,0(s2)$/;"	l
a22	./user/grind.asm	/^     a22:	468080e7          	jalr	1128(ra) # e86 <close>$/;"	l
a22	./user/ls.asm	/^ a22:	6121                	addi	sp,sp,64$/;"	l
a22	./user/sh.asm	/^     a22:	00961e63          	bne	a2,s1,a3e <parsecmd+0x66>$/;"	l
a22	./user/usertests.asm	/^     a22:	4581                	li	a1,0$/;"	l
a24	./user/ls.asm	/^ a24:	8082                	ret$/;"	l
a24	./user/usertests.asm	/^     a24:	00005517          	auipc	a0,0x5$/;"	l
a26	./user/grep.asm	/^ a26:	853e                	mv	a0,a5$/;"	l
a26	./user/grind.asm	/^     a26:	fa442503          	lw	a0,-92(s0)$/;"	l
a26	./user/ls.asm	/^ a26:	6398                	ld	a4,0(a5)$/;"	l
a26	./user/sh.asm	/^     a26:	854a                	mv	a0,s2$/;"	l
a28	./user/grep.asm	/^ a28:	fef719e3          	bne	a4,a5,a1a <malloc+0xc0>$/;"	l
a28	./user/ls.asm	/^ a28:	e118                	sd	a4,0(a0)$/;"	l
a28	./user/sh.asm	/^     a28:	00000097          	auipc	ra,0x0$/;"	l
a28	./user/usertests.asm	/^     a28:	57450513          	addi	a0,a0,1396 # 5f98 <malloc+0x7ea>$/;"	l
a2a	./user/grind.asm	/^     a2a:	00000097          	auipc	ra,0x0$/;"	l
a2a	./user/ls.asm	/^ a2a:	bff1                	j	a06 <malloc+0x86>$/;"	l
a2c	./user/grep.asm	/^ a2c:	8552                	mv	a0,s4$/;"	l
a2c	./user/ls.asm	/^ a2c:	01652423          	sw	s6,8(a0)$/;"	l
a2c	./user/sh.asm	/^     a2c:	f18080e7          	jalr	-232(ra) # 940 <nulterminate>$/;"	l
a2c	./user/usertests.asm	/^     a2c:	00005097          	auipc	ra,0x5$/;"	l
a2e	./user/grep.asm	/^ a2e:	00000097          	auipc	ra,0x0$/;"	l
a2e	./user/grind.asm	/^     a2e:	4ac080e7          	jalr	1196(ra) # ed6 <dup>$/;"	l
a3	./kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe
a30	./user/ls.asm	/^ a30:	0541                	addi	a0,a0,16$/;"	l
a30	./user/sh.asm	/^     a30:	854a                	mv	a0,s2$/;"	l
a30	./user/usertests.asm	/^     a30:	98c080e7          	jalr	-1652(ra) # 53b8 <open>$/;"	l
a32	./user/grep.asm	/^ a32:	b7e080e7          	jalr	-1154(ra) # 5ac <sbrk>$/;"	l
a32	./user/grind.asm	/^     a32:	4785                	li	a5,1$/;"	l
a32	./user/ls.asm	/^ a32:	00000097          	auipc	ra,0x0$/;"	l
a32	./user/sh.asm	/^     a32:	70a2                	ld	ra,40(sp)$/;"	l
a34	./user/grind.asm	/^     a34:	02f50063          	beq	a0,a5,a54 <go+0x9dc>$/;"	l
a34	./user/sh.asm	/^     a34:	7402                	ld	s0,32(sp)$/;"	l
a34	./user/usertests.asm	/^     a34:	89aa                	mv	s3,a0$/;"	l
a36	./user/grep.asm	/^ a36:	fd5518e3          	bne	a0,s5,a06 <malloc+0xac>$/;"	l
a36	./user/ls.asm	/^ a36:	ec6080e7          	jalr	-314(ra) # 8f8 <free>$/;"	l
a36	./user/sh.asm	/^     a36:	64e2                	ld	s1,24(sp)$/;"	l
a36	./user/usertests.asm	/^     a36:	4481                	li	s1,0$/;"	l
a38	./user/grind.asm	/^     a38:	00001597          	auipc	a1,0x1$/;"	l
a38	./user/sh.asm	/^     a38:	6942                	ld	s2,16(sp)$/;"	l
a38	./user/usertests.asm	/^     a38:	0000b917          	auipc	s2,0xb$/;"	l
a3a	./user/grep.asm	/^ a3a:	4501                	li	a0,0$/;"	l
a3a	./user/ls.asm	/^ a3a:	00093503          	ld	a0,0(s2)$/;"	l
a3a	./user/sh.asm	/^     a3a:	6145                	addi	sp,sp,48$/;"	l
a3c	./user/grep.asm	/^ a3c:	bf45                	j	9ec <malloc+0x92>$/;"	l
a3c	./user/grind.asm	/^     a3c:	b7858593          	addi	a1,a1,-1160 # 15b0 <malloc+0x31c>$/;"	l
a3c	./user/sh.asm	/^     a3c:	8082                	ret$/;"	l
a3c	./user/usertests.asm	/^     a3c:	d0090913          	addi	s2,s2,-768 # b738 <buf>$/;"	l
a3e	./user/ls.asm	/^ a3e:	d971                	beqz	a0,a12 <malloc+0x92>$/;"	l
a3e	./user/sh.asm	/^     a3e:	00001597          	auipc	a1,0x1$/;"	l
a4	./kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe
a4	./user/cat.asm	/^  a4:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a4	./user/echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	./user/forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	./user/grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	./user/ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	./user/ls.asm	/^  a4:	01298533          	add	a0,s3,s2$/;"	l
a4	./user/mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	./user/rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	./user/sh.asm	/^      a4:	fb4080e7          	jalr	-76(ra) # 54 <panic>$/;"	l
a4	./user/sleep.asm	/^  a4:	00f6853b          	addw	a0,a3,a5$/;"	l
a4	./user/stressfs.asm	/^  a4:	302080e7          	jalr	770(ra) # 3a2 <write>$/;"	l
a4	./user/usertests.asm	/^      a4:	84aa                	mv	s1,a0$/;"	l
a4	./user/wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	./user/zombie.asm	/^  a4:	87aa                	mv	a5,a0$/;"	l
a40	./user/grind.asm	/^     a40:	4509                	li	a0,2$/;"	l
a40	./user/ls.asm	/^ a40:	611c                	ld	a5,0(a0)$/;"	l
a40	./user/usertests.asm	/^     a40:	06054163          	bltz	a0,aa2 <writebig+0xe8>$/;"	l
a42	./user/grind.asm	/^     a42:	00000097          	auipc	ra,0x0$/;"	l
a42	./user/ls.asm	/^ a42:	4798                	lw	a4,8(a5)$/;"	l
a42	./user/sh.asm	/^     a42:	99258593          	addi	a1,a1,-1646 # 13d0 <malloc+0x1d0>$/;"	l
a44	./user/ls.asm	/^ a44:	fa9776e3          	bgeu	a4,s1,9f0 <malloc+0x70>$/;"	l
a44	./user/usertests.asm	/^     a44:	40000613          	li	a2,1024$/;"	l
a46	./user/grind.asm	/^     a46:	766080e7          	jalr	1894(ra) # 11a8 <fprintf>$/;"	l
a46	./user/sh.asm	/^     a46:	4509                	li	a0,2$/;"	l
a48	./user/ls.asm	/^ a48:	00093703          	ld	a4,0(s2)$/;"	l
a48	./user/sh.asm	/^     a48:	00000097          	auipc	ra,0x0$/;"	l
a48	./user/usertests.asm	/^     a48:	85ca                	mv	a1,s2$/;"	l
a4a	./user/grind.asm	/^     a4a:	4515                	li	a0,5$/;"	l
a4a	./user/usertests.asm	/^     a4a:	854e                	mv	a0,s3$/;"	l
a4c	./user/grind.asm	/^     a4c:	00000097          	auipc	ra,0x0$/;"	l
a4c	./user/ls.asm	/^ a4c:	853e                	mv	a0,a5$/;"	l
a4c	./user/sh.asm	/^     a4c:	6cc080e7          	jalr	1740(ra) # 1114 <fprintf>$/;"	l
a4c	./user/usertests.asm	/^     a4c:	00005097          	auipc	ra,0x5$/;"	l
a4e	./user/ls.asm	/^ a4e:	fef719e3          	bne	a4,a5,a40 <malloc+0xc0>$/;"	l
a5	./kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe
a50	./user/grind.asm	/^     a50:	412080e7          	jalr	1042(ra) # e5e <exit>$/;"	l
a50	./user/sh.asm	/^     a50:	00001517          	auipc	a0,0x1$/;"	l
a50	./user/usertests.asm	/^     a50:	944080e7          	jalr	-1724(ra) # 5390 <read>$/;"	l
a52	./user/ls.asm	/^ a52:	8552                	mv	a0,s4$/;"	l
a54	./user/grind.asm	/^     a54:	fa442503          	lw	a0,-92(s0)$/;"	l
a54	./user/ls.asm	/^ a54:	00000097          	auipc	ra,0x0$/;"	l
a54	./user/sh.asm	/^     a54:	91050513          	addi	a0,a0,-1776 # 1360 <malloc+0x160>$/;"	l
a54	./user/usertests.asm	/^     a54:	c52d                	beqz	a0,abe <writebig+0x104>$/;"	l
a56	./user/usertests.asm	/^     a56:	40000793          	li	a5,1024$/;"	l
a58	./user/grind.asm	/^     a58:	00000097          	auipc	ra,0x0$/;"	l
a58	./user/ls.asm	/^ a58:	b7e080e7          	jalr	-1154(ra) # 5d2 <sbrk>$/;"	l
a58	./user/sh.asm	/^     a58:	fffff097          	auipc	ra,0xfffff$/;"	l
a5a	./user/usertests.asm	/^     a5a:	0af51d63          	bne	a0,a5,b14 <writebig+0x15a>$/;"	l
a5c	./user/grind.asm	/^     a5c:	42e080e7          	jalr	1070(ra) # e86 <close>$/;"	l
a5c	./user/ls.asm	/^ a5c:	fd5518e3          	bne	a0,s5,a2c <malloc+0xac>$/;"	l
a5c	./user/sh.asm	/^     a5c:	5fc080e7          	jalr	1532(ra) # 54 <panic>$/;"	l
a5e	./user/usertests.asm	/^     a5e:	00092603          	lw	a2,0(s2)$/;"	l
a6	./kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe
a6	./user/echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	./user/forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	./user/grind.asm	/^      a6:	e24080e7          	jalr	-476(ra) # ec6 <mkdir>$/;"	l
a6	./user/init.asm	/^  a6:	30c080e7          	jalr	780(ra) # 3ae <open>$/;"	l
a6	./user/kill.asm	/^  a6:	6422                	ld	s0,8(sp)$/;"	l
a6	./user/ln.asm	/^  a6:	8082                	ret$/;"	l
a6	./user/pingpong.asm	/^  a6:	85aa                	mv	a1,a0$/;"	l
a6	./user/prime.asm	/^  a6:	394080e7          	jalr	916(ra) # 436 <exit>$/;"	l
a6	./user/primes.asm	/^  a6:	3a8080e7          	jalr	936(ra) # 44a <exit>$/;"	l
a6	./user/usertests.asm	/^      a6:	4581                	li	a1,0$/;"	l
a6	./user/wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	./user/zombie.asm	/^  a6:	fff6071b          	addiw	a4,a2,-1$/;"	l
a60	./user/grind.asm	/^     a60:	00001797          	auipc	a5,0x1$/;"	l
a60	./user/ls.asm	/^ a60:	4501                	li	a0,0$/;"	l
a60	./user/sh.asm	/^     a60:	7139                	addi	sp,sp,-64$/;"	l
a62	./user/ls.asm	/^ a62:	bf45                	j	a12 <malloc+0x92>$/;"	l
a62	./user/sh.asm	/^     a62:	fc06                	sd	ra,56(sp)$/;"	l
a62	./user/usertests.asm	/^     a62:	0c961763          	bne	a2,s1,b30 <writebig+0x176>$/;"	l
a64	./user/grind.asm	/^     a64:	b9878793          	addi	a5,a5,-1128 # 15f8 <malloc+0x364>$/;"	l
a64	./user/sh.asm	/^     a64:	f822                	sd	s0,48(sp)$/;"	l
a66	./user/sh.asm	/^     a66:	f426                	sd	s1,40(sp)$/;"	l
a66	./user/usertests.asm	/^     a66:	2485                	addiw	s1,s1,1$/;"	l
a68	./user/grind.asm	/^     a68:	faf43423          	sd	a5,-88(s0)$/;"	l
a68	./user/sh.asm	/^     a68:	f04a                	sd	s2,32(sp)$/;"	l
a68	./user/usertests.asm	/^     a68:	bff1                	j	a44 <writebig+0x8a>$/;"	l
a6a	./user/sh.asm	/^     a6a:	ec4e                	sd	s3,24(sp)$/;"	l
a6a	./user/usertests.asm	/^     a6a:	85d6                	mv	a1,s5$/;"	l
a6c	./user/grind.asm	/^     a6c:	fa043823          	sd	zero,-80(s0)$/;"	l
a6c	./user/sh.asm	/^     a6c:	e852                	sd	s4,16(sp)$/;"	l
a6c	./user/usertests.asm	/^     a6c:	00005517          	auipc	a0,0x5$/;"	l
a6e	./user/sh.asm	/^     a6e:	e456                	sd	s5,8(sp)$/;"	l
a7	./kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe
a70	./user/grind.asm	/^     a70:	fa840593          	addi	a1,s0,-88$/;"	l
a70	./user/sh.asm	/^     a70:	0080                	addi	s0,sp,64$/;"	l
a70	./user/usertests.asm	/^     a70:	53450513          	addi	a0,a0,1332 # 5fa0 <malloc+0x7f2>$/;"	l
a72	./user/sh.asm	/^     a72:	00001497          	auipc	s1,0x1$/;"	l
a74	./user/grind.asm	/^     a74:	00001517          	auipc	a0,0x1$/;"	l
a74	./user/usertests.asm	/^     a74:	00005097          	auipc	ra,0x5$/;"	l
a76	./user/sh.asm	/^     a76:	96e48493          	addi	s1,s1,-1682 # 13e0 <malloc+0x1e0>$/;"	l
a78	./user/grind.asm	/^     a78:	b8c50513          	addi	a0,a0,-1140 # 1600 <malloc+0x36c>$/;"	l
a78	./user/usertests.asm	/^     a78:	c7c080e7          	jalr	-900(ra) # 56f0 <printf>$/;"	l
a7a	./user/sh.asm	/^     a7a:	4589                	li	a1,2$/;"	l
a7c	./user/grind.asm	/^     a7c:	00000097          	auipc	ra,0x0$/;"	l
a7c	./user/sh.asm	/^     a7c:	8526                	mv	a0,s1$/;"	l
a7c	./user/usertests.asm	/^     a7c:	4505                	li	a0,1$/;"	l
a7e	./user/sh.asm	/^     a7e:	00000097          	auipc	ra,0x0$/;"	l
a7e	./user/usertests.asm	/^     a7e:	00005097          	auipc	ra,0x5$/;"	l
a8	./user/cat.asm	/^  a8:	1982                	slli	s3,s3,0x20$/;"	l
a8	./user/grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	./user/kill.asm	/^  a8:	0141                	addi	sp,sp,16$/;"	l
a8	./user/ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	./user/ls.asm	/^  a8:	00000097          	auipc	ra,0x0$/;"	l
a8	./user/mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	./user/pingpong.asm	/^  a8:	00000517          	auipc	a0,0x0$/;"	l
a8	./user/rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	./user/sh.asm	/^      a8:	7179                	addi	sp,sp,-48$/;"	l
a8	./user/sleep.asm	/^  a8:	0785                	addi	a5,a5,1$/;"	l
a8	./user/stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	./user/usertests.asm	/^      a8:	00006517          	auipc	a0,0x6$/;"	l
a8	./user/wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a80	./user/grind.asm	/^     a80:	41a080e7          	jalr	1050(ra) # e96 <exec>$/;"	l
a82	./user/sh.asm	/^     a82:	38c080e7          	jalr	908(ra) # e0a <open>$/;"	l
a82	./user/usertests.asm	/^     a82:	8fa080e7          	jalr	-1798(ra) # 5378 <exit>$/;"	l
a84	./user/grind.asm	/^     a84:	00001597          	auipc	a1,0x1$/;"	l
a86	./user/sh.asm	/^     a86:	00054963          	bltz	a0,a98 <main+0x38>$/;"	l
a86	./user/usertests.asm	/^     a86:	85a6                	mv	a1,s1$/;"	l
a88	./user/grind.asm	/^     a88:	b8458593          	addi	a1,a1,-1148 # 1608 <malloc+0x374>$/;"	l
a88	./user/usertests.asm	/^     a88:	00005517          	auipc	a0,0x5$/;"	l
a8a	./user/sh.asm	/^     a8a:	4789                	li	a5,2$/;"	l
a8c	./user/grind.asm	/^     a8c:	4509                	li	a0,2$/;"	l
a8c	./user/sh.asm	/^     a8c:	fea7d7e3          	bge	a5,a0,a7a <main+0x1a>$/;"	l
a8c	./user/usertests.asm	/^     a8c:	53850513          	addi	a0,a0,1336 # 5fc0 <malloc+0x812>$/;"	l
a8e	./user/grind.asm	/^     a8e:	00000097          	auipc	ra,0x0$/;"	l
a90	./user/sh.asm	/^     a90:	00000097          	auipc	ra,0x0$/;"	l
a90	./user/usertests.asm	/^     a90:	00005097          	auipc	ra,0x5$/;"	l
a92	./user/grind.asm	/^     a92:	71a080e7          	jalr	1818(ra) # 11a8 <fprintf>$/;"	l
a94	./user/sh.asm	/^     a94:	362080e7          	jalr	866(ra) # df2 <close>$/;"	l
a94	./user/usertests.asm	/^     a94:	c60080e7          	jalr	-928(ra) # 56f0 <printf>$/;"	l
a96	./user/grind.asm	/^     a96:	4519                	li	a0,6$/;"	l
a98	./user/grind.asm	/^     a98:	00000097          	auipc	ra,0x0$/;"	l
a98	./user/sh.asm	/^     a98:	00001497          	auipc	s1,0x1$/;"	l
a98	./user/usertests.asm	/^     a98:	4505                	li	a0,1$/;"	l
a9a	./user/usertests.asm	/^     a9a:	00005097          	auipc	ra,0x5$/;"	l
a9c	./user/grind.asm	/^     a9c:	3c6080e7          	jalr	966(ra) # e5e <exit>$/;"	l
a9c	./user/sh.asm	/^     a9c:	9c848493          	addi	s1,s1,-1592 # 1460 <buf.1133>$/;"	l
a9e	./user/usertests.asm	/^     a9e:	8de080e7          	jalr	-1826(ra) # 5378 <exit>$/;"	l
aa	./user/cat.asm	/^  aa:	0209d993          	srli	s3,s3,0x20$/;"	l
aa	./user/echo.asm	/^  aa:	cb91                	beqz	a5,be <strcmp+0x1e>$/;"	l
aa	./user/forktest.asm	/^  aa:	2f6080e7          	jalr	758(ra) # 39c <wait>$/;"	l
aa	./user/grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	./user/grind.asm	/^      aa:	00001517          	auipc	a0,0x1$/;"	l
aa	./user/init.asm	/^  aa:	bfa5                	j	22 <main+0x22>$/;"	l
aa	./user/kill.asm	/^  aa:	8082                	ret$/;"	l
aa	./user/ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	./user/mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	./user/prime.asm	/^  aa:	4505                	li	a0,1$/;"	l
aa	./user/primes.asm	/^  aa:	4505                	li	a0,1$/;"	l
aa	./user/rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	./user/sh.asm	/^      aa:	f406                	sd	ra,40(sp)$/;"	l
aa	./user/sleep.asm	/^  aa:	fff7c703          	lbu	a4,-1(a5)$/;"	l
aa	./user/stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	./user/zombie.asm	/^  aa:	1702                	slli	a4,a4,0x20$/;"	l
aa0	./user/grind.asm	/^     aa0:	00001597          	auipc	a1,0x1$/;"	l
aa0	./user/sh.asm	/^     aa0:	06300913          	li	s2,99$/;"	l
aa2	./user/usertests.asm	/^     aa2:	85d6                	mv	a1,s5$/;"	l
aa4	./user/grind.asm	/^     aa4:	a6858593          	addi	a1,a1,-1432 # 1508 <malloc+0x274>$/;"	l
aa4	./user/sh.asm	/^     aa4:	02000993          	li	s3,32$/;"	l
aa4	./user/usertests.asm	/^     aa4:	00005517          	auipc	a0,0x5$/;"	l
aa8	./user/grind.asm	/^     aa8:	4509                	li	a0,2$/;"	l
aa8	./user/sh.asm	/^     aa8:	00001a17          	auipc	s4,0x1$/;"	l
aa8	./user/usertests.asm	/^     aa8:	54450513          	addi	a0,a0,1348 # 5fe8 <malloc+0x83a>$/;"	l
aaa	./user/grind.asm	/^     aaa:	00000097          	auipc	ra,0x0$/;"	l
aac	./user/sh.asm	/^     aac:	9bba0a13          	addi	s4,s4,-1605 # 1463 <buf.1133+0x3>$/;"	l
aac	./user/usertests.asm	/^     aac:	00005097          	auipc	ra,0x5$/;"	l
aae	./user/grind.asm	/^     aae:	6fe080e7          	jalr	1790(ra) # 11a8 <fprintf>$/;"	l
ab0	./user/sh.asm	/^     ab0:	00001a97          	auipc	s5,0x1$/;"	l
ab0	./user/usertests.asm	/^     ab0:	c44080e7          	jalr	-956(ra) # 56f0 <printf>$/;"	l
ab2	./user/grind.asm	/^     ab2:	451d                	li	a0,7$/;"	l
ab4	./user/grind.asm	/^     ab4:	00000097          	auipc	ra,0x0$/;"	l
ab4	./user/sh.asm	/^     ab4:	938a8a93          	addi	s5,s5,-1736 # 13e8 <malloc+0x1e8>$/;"	l
ab4	./user/usertests.asm	/^     ab4:	4505                	li	a0,1$/;"	l
ab6	./user/usertests.asm	/^     ab6:	00005097          	auipc	ra,0x5$/;"	l
ab8	./user/grind.asm	/^     ab8:	3aa080e7          	jalr	938(ra) # e5e <exit>$/;"	l
ab8	./user/sh.asm	/^     ab8:	a819                	j	ace <main+0x6e>$/;"	l
aba	./user/sh.asm	/^     aba:	fffff097          	auipc	ra,0xfffff$/;"	l
aba	./user/usertests.asm	/^     aba:	8c2080e7          	jalr	-1854(ra) # 5378 <exit>$/;"	l
abc	./user/grind.asm	/^     abc:	7179                	addi	sp,sp,-48$/;"	l
abe	./user/grind.asm	/^     abe:	f406                	sd	ra,40(sp)$/;"	l
abe	./user/sh.asm	/^     abe:	5c0080e7          	jalr	1472(ra) # 7a <fork1>$/;"	l
abe	./user/usertests.asm	/^     abe:	10b00793          	li	a5,267$/;"	l
ac	./user/echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	./user/grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	./user/init.asm	/^  ac:	00000517          	auipc	a0,0x0$/;"	l
ac	./user/kill.asm	/^  ac:	1141                	addi	sp,sp,-16$/;"	l
ac	./user/ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	./user/ls.asm	/^  ac:	29e080e7          	jalr	670(ra) # 346 <memset>$/;"	l
ac	./user/mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	./user/pingpong.asm	/^  ac:	7c050513          	addi	a0,a0,1984 # 868 <malloc+0x102>$/;"	l
ac	./user/prime.asm	/^  ac:	00000097          	auipc	ra,0x0$/;"	l
ac	./user/primes.asm	/^  ac:	00000097          	auipc	ra,0x0$/;"	l
ac	./user/rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	./user/sh.asm	/^      ac:	f022                	sd	s0,32(sp)$/;"	l
ac	./user/stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	./user/usertests.asm	/^      ac:	b2850513          	addi	a0,a0,-1240 # 5bd0 <malloc+0x422>$/;"	l
ac	./user/wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac	./user/zombie.asm	/^  ac:	9301                	srli	a4,a4,0x20$/;"	l
ac0	./user/grind.asm	/^     ac0:	f022                	sd	s0,32(sp)$/;"	l
ac2	./user/grind.asm	/^     ac2:	ec26                	sd	s1,24(sp)$/;"	l
ac2	./user/sh.asm	/^     ac2:	c925                	beqz	a0,b32 <main+0xd2>$/;"	l
ac2	./user/usertests.asm	/^     ac2:	02f48a63          	beq	s1,a5,af6 <writebig+0x13c>$/;"	l
ac4	./user/grind.asm	/^     ac4:	e84a                	sd	s2,16(sp)$/;"	l
ac4	./user/sh.asm	/^     ac4:	4501                	li	a0,0$/;"	l
ac6	./user/grind.asm	/^     ac6:	1800                	addi	s0,sp,48$/;"	l
ac6	./user/sh.asm	/^     ac6:	00000097          	auipc	ra,0x0$/;"	l
ac6	./user/usertests.asm	/^     ac6:	854e                	mv	a0,s3$/;"	l
ac8	./user/grind.asm	/^     ac8:	00001517          	auipc	a0,0x1$/;"	l
ac8	./user/usertests.asm	/^     ac8:	00005097          	auipc	ra,0x5$/;"	l
aca	./user/sh.asm	/^     aca:	30c080e7          	jalr	780(ra) # dd2 <wait>$/;"	l
acc	./user/grind.asm	/^     acc:	98850513          	addi	a0,a0,-1656 # 1450 <malloc+0x1bc>$/;"	l
acc	./user/usertests.asm	/^     acc:	8d8080e7          	jalr	-1832(ra) # 53a0 <close>$/;"	l
ace	./user/sh.asm	/^     ace:	06400593          	li	a1,100$/;"	l
acquire	./kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	./kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad0	./user/grind.asm	/^     ad0:	00000097          	auipc	ra,0x0$/;"	l
ad0	./user/usertests.asm	/^     ad0:	00005517          	auipc	a0,0x5$/;"	l
ad2	./user/sh.asm	/^     ad2:	8526                	mv	a0,s1$/;"	l
ad4	./user/grind.asm	/^     ad4:	3de080e7          	jalr	990(ra) # eae <unlink>$/;"	l
ad4	./user/sh.asm	/^     ad4:	fffff097          	auipc	ra,0xfffff$/;"	l
ad4	./user/usertests.asm	/^     ad4:	4c850513          	addi	a0,a0,1224 # 5f98 <malloc+0x7ea>$/;"	l
ad8	./user/grind.asm	/^     ad8:	00001517          	auipc	a0,0x1$/;"	l
ad8	./user/sh.asm	/^     ad8:	52c080e7          	jalr	1324(ra) # 0 <getcmd>$/;"	l
ad8	./user/usertests.asm	/^     ad8:	00005097          	auipc	ra,0x5$/;"	l
adc	./user/grind.asm	/^     adc:	92850513          	addi	a0,a0,-1752 # 1400 <malloc+0x16c>$/;"	l
adc	./user/sh.asm	/^     adc:	06054763          	bltz	a0,b4a <main+0xea>$/;"	l
adc	./user/usertests.asm	/^     adc:	8f0080e7          	jalr	-1808(ra) # 53c8 <unlink>$/;"	l
addr	./kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	./kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:VRingDesc
addrs	./kernel/file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	./kernel/fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ae	./user/cat.asm	/^  ae:	098e                	slli	s3,s3,0x3$/;"	l
ae	./user/forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	./user/grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	./user/grind.asm	/^      ae:	2ce50513          	addi	a0,a0,718 # 1378 <malloc+0xe4>$/;"	l
ae	./user/kill.asm	/^  ae:	e422                	sd	s0,8(sp)$/;"	l
ae	./user/ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	./user/sh.asm	/^      ae:	ec26                	sd	s1,24(sp)$/;"	l
ae	./user/sleep.asm	/^  ae:	fb7d                	bnez	a4,a4 <strlen+0x14>$/;"	l
ae	./user/stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	./user/zombie.asm	/^  ae:	0705                	addi	a4,a4,1$/;"	l
ae0	./user/grind.asm	/^     ae0:	00000097          	auipc	ra,0x0$/;"	l
ae0	./user/sh.asm	/^     ae0:	0004c783          	lbu	a5,0(s1)$/;"	l
ae0	./user/usertests.asm	/^     ae0:	06054663          	bltz	a0,b4c <writebig+0x192>$/;"	l
ae4	./user/grind.asm	/^     ae4:	3ce080e7          	jalr	974(ra) # eae <unlink>$/;"	l
ae4	./user/sh.asm	/^     ae4:	fd279be3          	bne	a5,s2,aba <main+0x5a>$/;"	l
ae4	./user/usertests.asm	/^     ae4:	70e2                	ld	ra,56(sp)$/;"	l
ae6	./user/usertests.asm	/^     ae6:	7442                	ld	s0,48(sp)$/;"	l
ae8	./user/grind.asm	/^     ae8:	00000097          	auipc	ra,0x0$/;"	l
ae8	./user/sh.asm	/^     ae8:	0014c703          	lbu	a4,1(s1)$/;"	l
ae8	./user/usertests.asm	/^     ae8:	74a2                	ld	s1,40(sp)$/;"	l
aea	./user/usertests.asm	/^     aea:	7902                	ld	s2,32(sp)$/;"	l
aec	./user/grind.asm	/^     aec:	36e080e7          	jalr	878(ra) # e56 <fork>$/;"	l
aec	./user/sh.asm	/^     aec:	06400793          	li	a5,100$/;"	l
aec	./user/usertests.asm	/^     aec:	69e2                	ld	s3,24(sp)$/;"	l
aee	./user/usertests.asm	/^     aee:	6a42                	ld	s4,16(sp)$/;"	l
af0	./user/grind.asm	/^     af0:	00054e63          	bltz	a0,b0c <iter+0x50>$/;"	l
af0	./user/sh.asm	/^     af0:	fcf715e3          	bne	a4,a5,aba <main+0x5a>$/;"	l
af0	./user/usertests.asm	/^     af0:	6aa2                	ld	s5,8(sp)$/;"	l
af2	./user/usertests.asm	/^     af2:	6121                	addi	sp,sp,64$/;"	l
af4	./user/grind.asm	/^     af4:	84aa                	mv	s1,a0$/;"	l
af4	./user/sh.asm	/^     af4:	0024c783          	lbu	a5,2(s1)$/;"	l
af4	./user/usertests.asm	/^     af4:	8082                	ret$/;"	l
af6	./user/grind.asm	/^     af6:	e905                	bnez	a0,b26 <iter+0x6a>$/;"	l
af6	./user/usertests.asm	/^     af6:	10b00593          	li	a1,267$/;"	l
af8	./user/grind.asm	/^     af8:	47fd                	li	a5,31$/;"	l
af8	./user/sh.asm	/^     af8:	fd3791e3          	bne	a5,s3,aba <main+0x5a>$/;"	l
afa	./user/grind.asm	/^     afa:	00001717          	auipc	a4,0x1$/;"	l
afa	./user/usertests.asm	/^     afa:	00005517          	auipc	a0,0x5$/;"	l
afc	./user/sh.asm	/^     afc:	8526                	mv	a0,s1$/;"	l
afe	./user/grind.asm	/^     afe:	b6f73323          	sd	a5,-1178(a4) # 1660 <rand_next>$/;"	l
afe	./user/sh.asm	/^     afe:	00000097          	auipc	ra,0x0$/;"	l
afe	./user/usertests.asm	/^     afe:	50e50513          	addi	a0,a0,1294 # 6008 <malloc+0x85a>$/;"	l
align	./kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr
alloc3_desc	./kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc_desc	./kernel/virtio_disk.c	/^alloc_desc()$/;"	f	file:
allocpid	./kernel/proc.c	/^allocpid() {$/;"	f
allocproc	./kernel/proc.c	/^allocproc(void)$/;"	f	file:
argaddr	./kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f
argc	./user/sh.asm	/^  argc = 0;$/;"	d
argfd	./kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	./kernel/syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	./user/usertests.c	/^void argptest(char *s)$/;"	f
argraw	./kernel/syscall.c	/^argraw(int n)$/;"	f	file:
argstr	./kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f
argv	./user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	./user/initcode.S	/^argv:$/;"	l
argv	./user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
assert_equal	./gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	./gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	./gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
atoi	./user/ulib.c	/^atoi(const char *s)$/;"	f
avail	./kernel/virtio_disk.c	/^  uint16 *avail;$/;"	m	struct:disk	file:
b	./kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	./kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon3	typeref:struct:disk::__anon3::buf	file:
b	./user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	./user/cat.asm	/^  b0:	05c1                	addi	a1,a1,16$/;"	l
b0	./user/echo.asm	/^  b0:	00f71763          	bne	a4,a5,be <strcmp+0x1e>$/;"	l
b0	./user/forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	./user/init.asm	/^  b0:	7fc50513          	addi	a0,a0,2044 # 8a8 <malloc+0x104>$/;"	l
b0	./user/kill.asm	/^  b0:	0800                	addi	s0,sp,16$/;"	l
b0	./user/ls.asm	/^  b0:	84ce                	mv	s1,s3$/;"	l
b0	./user/mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	./user/pingpong.asm	/^  b0:	00000097          	auipc	ra,0x0$/;"	l
b0	./user/prime.asm	/^  b0:	3b2080e7          	jalr	946(ra) # 45e <close>$/;"	l
b0	./user/primes.asm	/^  b0:	3c6080e7          	jalr	966(ra) # 472 <close>$/;"	l
b0	./user/rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	./user/sh.asm	/^      b0:	1800                	addi	s0,sp,48$/;"	l
b0	./user/sleep.asm	/^  b0:	6422                	ld	s0,8(sp)$/;"	l
b0	./user/usertests.asm	/^      b0:	00005097          	auipc	ra,0x5$/;"	l
b0	./user/wc.asm	/^  b0:	86e6                	mv	a3,s9$/;"	l
b0	./user/zombie.asm	/^  b0:	972a                	add	a4,a4,a0$/;"	l
b02	./user/grind.asm	/^     b02:	4501                	li	a0,0$/;"	l
b02	./user/sh.asm	/^     b02:	09e080e7          	jalr	158(ra) # b9c <strlen>$/;"	l
b02	./user/usertests.asm	/^     b02:	00005097          	auipc	ra,0x5$/;"	l
b04	./user/grind.asm	/^     b04:	fffff097          	auipc	ra,0xfffff$/;"	l
b06	./user/sh.asm	/^     b06:	fff5079b          	addiw	a5,a0,-1$/;"	l
b06	./user/usertests.asm	/^     b06:	bee080e7          	jalr	-1042(ra) # 56f0 <printf>$/;"	l
b08	./user/grind.asm	/^     b08:	574080e7          	jalr	1396(ra) # 78 <go>$/;"	l
b0a	./user/sh.asm	/^     b0a:	1782                	slli	a5,a5,0x20$/;"	l
b0a	./user/usertests.asm	/^     b0a:	4505                	li	a0,1$/;"	l
b0c	./user/grind.asm	/^     b0c:	00001517          	auipc	a0,0x1$/;"	l
b0c	./user/sh.asm	/^     b0c:	9381                	srli	a5,a5,0x20$/;"	l
b0c	./user/usertests.asm	/^     b0c:	00005097          	auipc	ra,0x5$/;"	l
b0e	./user/sh.asm	/^     b0e:	97a6                	add	a5,a5,s1$/;"	l
b10	./user/grind.asm	/^     b10:	96450513          	addi	a0,a0,-1692 # 1470 <malloc+0x1dc>$/;"	l
b10	./user/sh.asm	/^     b10:	00078023          	sb	zero,0(a5)$/;"	l
b10	./user/usertests.asm	/^     b10:	86c080e7          	jalr	-1940(ra) # 5378 <exit>$/;"	l
b14	./user/grind.asm	/^     b14:	00000097          	auipc	ra,0x0$/;"	l
b14	./user/sh.asm	/^     b14:	8552                	mv	a0,s4$/;"	l
b14	./user/usertests.asm	/^     b14:	85aa                	mv	a1,a0$/;"	l
b16	./user/sh.asm	/^     b16:	00000097          	auipc	ra,0x0$/;"	l
b16	./user/usertests.asm	/^     b16:	00005517          	auipc	a0,0x5$/;"	l
b18	./user/grind.asm	/^     b18:	6c2080e7          	jalr	1730(ra) # 11d6 <printf>$/;"	l
b1a	./user/sh.asm	/^     b1a:	324080e7          	jalr	804(ra) # e3a <chdir>$/;"	l
b1a	./user/usertests.asm	/^     b1a:	51a50513          	addi	a0,a0,1306 # 6030 <malloc+0x882>$/;"	l
b1c	./user/grind.asm	/^     b1c:	4505                	li	a0,1$/;"	l
b1e	./user/grind.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	./user/sh.asm	/^     b1e:	fa0558e3          	bgez	a0,ace <main+0x6e>$/;"	l
b1e	./user/usertests.asm	/^     b1e:	00005097          	auipc	ra,0x5$/;"	l
b2	./user/cat.asm	/^  b2:	99ae                	add	s3,s3,a1$/;"	l
b2	./user/grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	./user/grind.asm	/^      b2:	00001097          	auipc	ra,0x1$/;"	l
b2	./user/kill.asm	/^  b2:	00054783          	lbu	a5,0(a0)$/;"	l
b2	./user/ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	./user/ls.asm	/^  b2:	bf69                	j	4c <fmtname+0x4c>$/;"	l
b2	./user/mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	./user/rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	./user/sh.asm	/^      b2:	c10d                	beqz	a0,d4 <runcmd+0x2c>$/;"	l
b2	./user/sleep.asm	/^  b2:	0141                	addi	sp,sp,16$/;"	l
b2	./user/stressfs.asm	/^  b2:	2fc080e7          	jalr	764(ra) # 3aa <close>$/;"	l
b2	./user/wc.asm	/^  b2:	8662                	mv	a2,s8$/;"	l
b2	./user/zombie.asm	/^  b2:	00b78023          	sb	a1,0(a5)$/;"	l
b22	./user/grind.asm	/^     b22:	340080e7          	jalr	832(ra) # e5e <exit>$/;"	l
b22	./user/sh.asm	/^     b22:	8652                	mv	a2,s4$/;"	l
b22	./user/usertests.asm	/^     b22:	bd2080e7          	jalr	-1070(ra) # 56f0 <printf>$/;"	l
b24	./user/sh.asm	/^     b24:	85d6                	mv	a1,s5$/;"	l
b26	./user/grind.asm	/^     b26:	00000097          	auipc	ra,0x0$/;"	l
b26	./user/sh.asm	/^     b26:	4509                	li	a0,2$/;"	l
b26	./user/usertests.asm	/^     b26:	4505                	li	a0,1$/;"	l
b28	./user/sh.asm	/^     b28:	00000097          	auipc	ra,0x0$/;"	l
b28	./user/usertests.asm	/^     b28:	00005097          	auipc	ra,0x5$/;"	l
b2a	./user/grind.asm	/^     b2a:	330080e7          	jalr	816(ra) # e56 <fork>$/;"	l
b2c	./user/sh.asm	/^     b2c:	5ec080e7          	jalr	1516(ra) # 1114 <fprintf>$/;"	l
b2c	./user/usertests.asm	/^     b2c:	850080e7          	jalr	-1968(ra) # 5378 <exit>$/;"	l
b2e	./user/grind.asm	/^     b2e:	892a                	mv	s2,a0$/;"	l
b30	./user/grind.asm	/^     b30:	00054f63          	bltz	a0,b4e <iter+0x92>$/;"	l
b30	./user/sh.asm	/^     b30:	bf79                	j	ace <main+0x6e>$/;"	l
b30	./user/usertests.asm	/^     b30:	85a6                	mv	a1,s1$/;"	l
b32	./user/sh.asm	/^     b32:	00001517          	auipc	a0,0x1$/;"	l
b32	./user/usertests.asm	/^     b32:	00005517          	auipc	a0,0x5$/;"	l
b34	./user/grind.asm	/^     b34:	e915                	bnez	a0,b68 <iter+0xac>$/;"	l
b36	./user/grind.asm	/^     b36:	6789                	lui	a5,0x2$/;"	l
b36	./user/sh.asm	/^     b36:	92e50513          	addi	a0,a0,-1746 # 1460 <buf.1133>$/;"	l
b36	./user/usertests.asm	/^     b36:	51650513          	addi	a0,a0,1302 # 6048 <malloc+0x89a>$/;"	l
b38	./user/grind.asm	/^     b38:	c0978793          	addi	a5,a5,-1015 # 1c09 <__BSS_END__+0x1a1>$/;"	l
b3a	./user/sh.asm	/^     b3a:	00000097          	auipc	ra,0x0$/;"	l
b3a	./user/usertests.asm	/^     b3a:	00005097          	auipc	ra,0x5$/;"	l
b3c	./user/grind.asm	/^     b3c:	00001717          	auipc	a4,0x1$/;"	l
b3e	./user/sh.asm	/^     b3e:	e9e080e7          	jalr	-354(ra) # 9d8 <parsecmd>$/;"	l
b3e	./user/usertests.asm	/^     b3e:	bb6080e7          	jalr	-1098(ra) # 56f0 <printf>$/;"	l
b4	./user/cat.asm	/^  b4:	4581                	li	a1,0$/;"	l
b4	./user/echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	./user/forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	./user/init.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	./user/ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	./user/ls.asm	/^  b4:	d9010113          	addi	sp,sp,-624$/;"	l
b4	./user/pingpong.asm	/^  b4:	5f8080e7          	jalr	1528(ra) # 6a8 <printf>$/;"	l
b4	./user/prime.asm	/^  b4:	fe442503          	lw	a0,-28(s0)$/;"	l
b4	./user/primes.asm	/^  b4:	fe442503          	lw	a0,-28(s0)$/;"	l
b4	./user/sh.asm	/^      b4:	84aa                	mv	s1,a0$/;"	l
b4	./user/sleep.asm	/^  b4:	8082                	ret$/;"	l
b4	./user/usertests.asm	/^      b4:	308080e7          	jalr	776(ra) # 53b8 <open>$/;"	l
b4	./user/wc.asm	/^  b4:	85de                	mv	a1,s7$/;"	l
b40	./user/grind.asm	/^     b40:	b2f73223          	sd	a5,-1244(a4) # 1660 <rand_next>$/;"	l
b42	./user/sh.asm	/^     b42:	fffff097          	auipc	ra,0xfffff$/;"	l
b42	./user/usertests.asm	/^     b42:	4505                	li	a0,1$/;"	l
b44	./user/grind.asm	/^     b44:	4505                	li	a0,1$/;"	l
b44	./user/usertests.asm	/^     b44:	00005097          	auipc	ra,0x5$/;"	l
b46	./user/grind.asm	/^     b46:	fffff097          	auipc	ra,0xfffff$/;"	l
b46	./user/sh.asm	/^     b46:	566080e7          	jalr	1382(ra) # a8 <runcmd>$/;"	l
b48	./user/usertests.asm	/^     b48:	834080e7          	jalr	-1996(ra) # 5378 <exit>$/;"	l
b4a	./user/grind.asm	/^     b4a:	532080e7          	jalr	1330(ra) # 78 <go>$/;"	l
b4a	./user/sh.asm	/^     b4a:	4501                	li	a0,0$/;"	l
b4c	./user/sh.asm	/^     b4c:	00000097          	auipc	ra,0x0$/;"	l
b4c	./user/usertests.asm	/^     b4c:	85d6                	mv	a1,s5$/;"	l
b4e	./user/grind.asm	/^     b4e:	00001517          	auipc	a0,0x1$/;"	l
b4e	./user/usertests.asm	/^     b4e:	00005517          	auipc	a0,0x5$/;"	l
b50	./user/sh.asm	/^     b50:	27e080e7          	jalr	638(ra) # dca <exit>$/;"	l
b52	./user/grind.asm	/^     b52:	92250513          	addi	a0,a0,-1758 # 1470 <malloc+0x1dc>$/;"	l
b52	./user/usertests.asm	/^     b52:	52250513          	addi	a0,a0,1314 # 6070 <malloc+0x8c2>$/;"	l
b54	./user/sh.asm	/^     b54:	1141                	addi	sp,sp,-16$/;"	l
b56	./user/grind.asm	/^     b56:	00000097          	auipc	ra,0x0$/;"	l
b56	./user/sh.asm	/^     b56:	e422                	sd	s0,8(sp)$/;"	l
b56	./user/usertests.asm	/^     b56:	00005097          	auipc	ra,0x5$/;"	l
b58	./user/sh.asm	/^     b58:	0800                	addi	s0,sp,16$/;"	l
b5a	./user/grind.asm	/^     b5a:	680080e7          	jalr	1664(ra) # 11d6 <printf>$/;"	l
b5a	./user/sh.asm	/^     b5a:	87aa                	mv	a5,a0$/;"	l
b5a	./user/usertests.asm	/^     b5a:	b9a080e7          	jalr	-1126(ra) # 56f0 <printf>$/;"	l
b5c	./user/sh.asm	/^     b5c:	0585                	addi	a1,a1,1$/;"	l
b5e	./user/grind.asm	/^     b5e:	4505                	li	a0,1$/;"	l
b5e	./user/sh.asm	/^     b5e:	0785                	addi	a5,a5,1$/;"	l
b5e	./user/usertests.asm	/^     b5e:	4505                	li	a0,1$/;"	l
b6	./user/cat.asm	/^  b6:	00093503          	ld	a0,0(s2)$/;"	l
b6	./user/echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	./user/grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	./user/grind.asm	/^      b6:	e1c080e7          	jalr	-484(ra) # ece <chdir>$/;"	l
b6	./user/kill.asm	/^  b6:	cf91                	beqz	a5,d2 <strlen+0x26>$/;"	l
b6	./user/ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	./user/mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	./user/rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	./user/sh.asm	/^      b6:	4118                	lw	a4,0(a0)$/;"	l
b6	./user/sleep.asm	/^  b6:	4501                	li	a0,0$/;"	l
b6	./user/stressfs.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	./user/wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	./user/zombie.asm	/^  b6:	0785                	addi	a5,a5,1$/;"	l
b60	./user/grind.asm	/^     b60:	00000097          	auipc	ra,0x0$/;"	l
b60	./user/sh.asm	/^     b60:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b60	./user/usertests.asm	/^     b60:	00005097          	auipc	ra,0x5$/;"	l
b64	./user/grind.asm	/^     b64:	2fe080e7          	jalr	766(ra) # e5e <exit>$/;"	l
b64	./user/sh.asm	/^     b64:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b64	./user/usertests.asm	/^     b64:	818080e7          	jalr	-2024(ra) # 5378 <exit>$/;"	l
b68	./user/grind.asm	/^     b68:	57fd                	li	a5,-1$/;"	l
b68	./user/sh.asm	/^     b68:	fb75                	bnez	a4,b5c <strcpy+0x8>$/;"	l
b68	./user/usertests.asm	/^     b68:	7179                	addi	sp,sp,-48$/;"	l
b6a	./user/grind.asm	/^     b6a:	fcf42e23          	sw	a5,-36(s0)$/;"	l
b6a	./user/sh.asm	/^     b6a:	6422                	ld	s0,8(sp)$/;"	l
b6a	./user/usertests.asm	/^     b6a:	f406                	sd	ra,40(sp)$/;"	l
b6c	./user/sh.asm	/^     b6c:	0141                	addi	sp,sp,16$/;"	l
b6c	./user/usertests.asm	/^     b6c:	f022                	sd	s0,32(sp)$/;"	l
b6e	./user/grind.asm	/^     b6e:	fdc40513          	addi	a0,s0,-36$/;"	l
b6e	./user/sh.asm	/^     b6e:	8082                	ret$/;"	l
b6e	./user/usertests.asm	/^     b6e:	ec26                	sd	s1,24(sp)$/;"	l
b70	./user/sh.asm	/^     b70:	1141                	addi	sp,sp,-16$/;"	l
b70	./user/usertests.asm	/^     b70:	e84a                	sd	s2,16(sp)$/;"	l
b72	./user/grind.asm	/^     b72:	00000097          	auipc	ra,0x0$/;"	l
b72	./user/sh.asm	/^     b72:	e422                	sd	s0,8(sp)$/;"	l
b72	./user/usertests.asm	/^     b72:	e44e                	sd	s3,8(sp)$/;"	l
b74	./user/sh.asm	/^     b74:	0800                	addi	s0,sp,16$/;"	l
b74	./user/usertests.asm	/^     b74:	1800                	addi	s0,sp,48$/;"	l
b76	./user/grind.asm	/^     b76:	2f4080e7          	jalr	756(ra) # e66 <wait>$/;"	l
b76	./user/sh.asm	/^     b76:	00054783          	lbu	a5,0(a0)$/;"	l
b76	./user/usertests.asm	/^     b76:	89aa                	mv	s3,a0$/;"	l
b78	./user/usertests.asm	/^     b78:	20200593          	li	a1,514$/;"	l
b7a	./user/grind.asm	/^     b7a:	fdc42783          	lw	a5,-36(s0)$/;"	l
b7a	./user/sh.asm	/^     b7a:	cb91                	beqz	a5,b8e <strcmp+0x1e>$/;"	l
b7c	./user/sh.asm	/^     b7c:	0005c703          	lbu	a4,0(a1)$/;"	l
b7c	./user/usertests.asm	/^     b7c:	00005517          	auipc	a0,0x5$/;"	l
b7e	./user/grind.asm	/^     b7e:	ef99                	bnez	a5,b9c <iter+0xe0>$/;"	l
b8	./user/echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	./user/forktest.asm	/^  b8:	3e450513          	addi	a0,a0,996 # 498 <uptime+0x6c>$/;"	l
b8	./user/grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	./user/init.asm	/^  b8:	632080e7          	jalr	1586(ra) # 6e6 <printf>$/;"	l
b8	./user/kill.asm	/^  b8:	0505                	addi	a0,a0,1$/;"	l
b8	./user/ln.asm	/^  b8:	4685                	li	a3,1$/;"	l
b8	./user/ls.asm	/^  b8:	26113423          	sd	ra,616(sp)$/;"	l
b8	./user/pingpong.asm	/^  b8:	bf65                	j	70 <main+0x70>$/;"	l
b8	./user/prime.asm	/^  b8:	00000097          	auipc	ra,0x0$/;"	l
b8	./user/primes.asm	/^  b8:	00000097          	auipc	ra,0x0$/;"	l
b8	./user/sh.asm	/^      b8:	4795                	li	a5,5$/;"	l
b8	./user/sleep.asm	/^  b8:	bfe5                	j	b0 <strlen+0x20>$/;"	l
b8	./user/usertests.asm	/^      b8:	02054663          	bltz	a0,e4 <opentest+0x4a>$/;"	l
b8	./user/zombie.asm	/^  b8:	fee79de3          	bne	a5,a4,b2 <memset+0x16>$/;"	l
b80	./user/grind.asm	/^     b80:	57fd                	li	a5,-1$/;"	l
b80	./user/sh.asm	/^     b80:	00f71763          	bne	a4,a5,b8e <strcmp+0x1e>$/;"	l
b80	./user/usertests.asm	/^     b80:	e6450513          	addi	a0,a0,-412 # 59e0 <malloc+0x232>$/;"	l
b82	./user/grind.asm	/^     b82:	fcf42c23          	sw	a5,-40(s0)$/;"	l
b84	./user/sh.asm	/^     b84:	0505                	addi	a0,a0,1$/;"	l
b84	./user/usertests.asm	/^     b84:	00005097          	auipc	ra,0x5$/;"	l
b86	./user/grind.asm	/^     b86:	fd840513          	addi	a0,s0,-40$/;"	l
b86	./user/sh.asm	/^     b86:	0585                	addi	a1,a1,1$/;"	l
b88	./user/sh.asm	/^     b88:	00054783          	lbu	a5,0(a0)$/;"	l
b88	./user/usertests.asm	/^     b88:	834080e7          	jalr	-1996(ra) # 53b8 <open>$/;"	l
b8a	./user/grind.asm	/^     b8a:	00000097          	auipc	ra,0x0$/;"	l
b8c	./user/sh.asm	/^     b8c:	fbe5                	bnez	a5,b7c <strcmp+0xc>$/;"	l
b8c	./user/usertests.asm	/^     b8c:	0e054563          	bltz	a0,c76 <unlinkread+0x10e>$/;"	l
b8e	./user/grind.asm	/^     b8e:	2dc080e7          	jalr	732(ra) # e66 <wait>$/;"	l
b8e	./user/sh.asm	/^     b8e:	0005c503          	lbu	a0,0(a1)$/;"	l
b90	./user/usertests.asm	/^     b90:	84aa                	mv	s1,a0$/;"	l
b92	./user/grind.asm	/^     b92:	4501                	li	a0,0$/;"	l
b92	./user/sh.asm	/^     b92:	40a7853b          	subw	a0,a5,a0$/;"	l
b92	./user/usertests.asm	/^     b92:	4615                	li	a2,5$/;"	l
b94	./user/grind.asm	/^     b94:	00000097          	auipc	ra,0x0$/;"	l
b94	./user/usertests.asm	/^     b94:	00005597          	auipc	a1,0x5$/;"	l
b96	./user/sh.asm	/^     b96:	6422                	ld	s0,8(sp)$/;"	l
b98	./user/grind.asm	/^     b98:	2ca080e7          	jalr	714(ra) # e5e <exit>$/;"	l
b98	./user/sh.asm	/^     b98:	0141                	addi	sp,sp,16$/;"	l
b98	./user/usertests.asm	/^     b98:	51458593          	addi	a1,a1,1300 # 60a8 <malloc+0x8fa>$/;"	l
b9a	./user/sh.asm	/^     b9a:	8082                	ret$/;"	l
b9c	./user/grind.asm	/^     b9c:	8526                	mv	a0,s1$/;"	l
b9c	./user/sh.asm	/^     b9c:	1141                	addi	sp,sp,-16$/;"	l
b9c	./user/usertests.asm	/^     b9c:	00004097          	auipc	ra,0x4$/;"	l
b9e	./user/grind.asm	/^     b9e:	00000097          	auipc	ra,0x0$/;"	l
b9e	./user/sh.asm	/^     b9e:	e422                	sd	s0,8(sp)$/;"	l
ba	./user/cat.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	./user/grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	./user/grind.asm	/^      ba:	cd11                	beqz	a0,d6 <go+0x5e>$/;"	l
ba	./user/kill.asm	/^  ba:	87aa                	mv	a5,a0$/;"	l
ba	./user/ln.asm	/^  ba:	9e89                	subw	a3,a3,a0$/;"	l
ba	./user/mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	./user/pingpong.asm	/^  ba:	1141                	addi	sp,sp,-16$/;"	l
ba	./user/rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	./user/sh.asm	/^      ba:	02e7e263          	bltu	a5,a4,de <runcmd+0x36>$/;"	l
ba	./user/sleep.asm	/^  ba:	1141                	addi	sp,sp,-16$/;"	l
ba	./user/stressfs.asm	/^  ba:	81250513          	addi	a0,a0,-2030 # 8c8 <malloc+0x110>$/;"	l
ba	./user/wc.asm	/^  ba:	88a50513          	addi	a0,a0,-1910 # 940 <malloc+0xfe>$/;"	l
ba0	./user/sh.asm	/^     ba0:	0800                	addi	s0,sp,16$/;"	l
ba0	./user/usertests.asm	/^     ba0:	7fc080e7          	jalr	2044(ra) # 5398 <write>$/;"	l
ba2	./user/grind.asm	/^     ba2:	2f0080e7          	jalr	752(ra) # e8e <kill>$/;"	l
ba2	./user/sh.asm	/^     ba2:	00054783          	lbu	a5,0(a0)$/;"	l
ba4	./user/usertests.asm	/^     ba4:	8526                	mv	a0,s1$/;"	l
ba6	./user/grind.asm	/^     ba6:	854a                	mv	a0,s2$/;"	l
ba6	./user/sh.asm	/^     ba6:	cf91                	beqz	a5,bc2 <strlen+0x26>$/;"	l
ba6	./user/usertests.asm	/^     ba6:	00004097          	auipc	ra,0x4$/;"	l
ba8	./user/grind.asm	/^     ba8:	00000097          	auipc	ra,0x0$/;"	l
ba8	./user/sh.asm	/^     ba8:	0505                	addi	a0,a0,1$/;"	l
baa	./user/sh.asm	/^     baa:	87aa                	mv	a5,a0$/;"	l
baa	./user/usertests.asm	/^     baa:	7fa080e7          	jalr	2042(ra) # 53a0 <close>$/;"	l
bac	./user/grind.asm	/^     bac:	2e6080e7          	jalr	742(ra) # e8e <kill>$/;"	l
bac	./user/sh.asm	/^     bac:	4685                	li	a3,1$/;"	l
backcmd	./user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	./user/sh.c	/^struct backcmd {$/;"	s	file:
bad	./kernel/kernel.asm	/^ bad:$/;"	l
badarg	./user/usertests.c	/^badarg(char *s)$/;"	f
badwrite	./user/usertests.c	/^badwrite(char *s)$/;"	f
bae	./user/sh.asm	/^     bae:	9e89                	subw	a3,a3,a0$/;"	l
bae	./user/usertests.asm	/^     bae:	4589                	li	a1,2$/;"	l
balloc	./kernel/fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	./mkfs/mkfs.c	/^balloc(int used)$/;"	f
base	./user/umalloc.c	/^static Header base;$/;"	v	file:
bb0	./user/grind.asm	/^     bb0:	bfc1                	j	b80 <iter+0xc4>$/;"	l
bb0	./user/sh.asm	/^     bb0:	00f6853b          	addw	a0,a3,a5$/;"	l
bb0	./user/usertests.asm	/^     bb0:	00005517          	auipc	a0,0x5$/;"	l
bb2	./user/grind.asm	/^     bb2:	1141                	addi	sp,sp,-16$/;"	l
bb4	./user/grind.asm	/^     bb4:	e406                	sd	ra,8(sp)$/;"	l
bb4	./user/sh.asm	/^     bb4:	0785                	addi	a5,a5,1$/;"	l
bb4	./user/usertests.asm	/^     bb4:	e3050513          	addi	a0,a0,-464 # 59e0 <malloc+0x232>$/;"	l
bb6	./user/grind.asm	/^     bb6:	e022                	sd	s0,0(sp)$/;"	l
bb6	./user/sh.asm	/^     bb6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bb8	./user/grind.asm	/^     bb8:	0800                	addi	s0,sp,16$/;"	l
bb8	./user/usertests.asm	/^     bb8:	00005097          	auipc	ra,0x5$/;"	l
bba	./user/grind.asm	/^     bba:	a811                	j	bce <main+0x1c>$/;"	l
bba	./user/sh.asm	/^     bba:	fb7d                	bnez	a4,bb0 <strlen+0x14>$/;"	l
bbc	./user/grind.asm	/^     bbc:	00000097          	auipc	ra,0x0$/;"	l
bbc	./user/sh.asm	/^     bbc:	6422                	ld	s0,8(sp)$/;"	l
bbc	./user/usertests.asm	/^     bbc:	800080e7          	jalr	-2048(ra) # 53b8 <open>$/;"	l
bbe	./user/sh.asm	/^     bbe:	0141                	addi	sp,sp,16$/;"	l
bc	./user/echo.asm	/^  bc:	fbe5                	bnez	a5,ac <strcmp+0xc>$/;"	l
bc	./user/forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	./user/grind.asm	/^      bc:	00001517          	auipc	a0,0x1$/;"	l
bc	./user/init.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	./user/kill.asm	/^  bc:	4685                	li	a3,1$/;"	l
bc	./user/ln.asm	/^  bc:	00f6853b          	addw	a0,a3,a5$/;"	l
bc	./user/ls.asm	/^  bc:	26813023          	sd	s0,608(sp)$/;"	l
bc	./user/mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	./user/pingpong.asm	/^  bc:	e422                	sd	s0,8(sp)$/;"	l
bc	./user/prime.asm	/^  bc:	3f6080e7          	jalr	1014(ra) # 4ae <dup>$/;"	l
bc	./user/primes.asm	/^  bc:	40a080e7          	jalr	1034(ra) # 4c2 <dup>$/;"	l
bc	./user/rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	./user/sleep.asm	/^  bc:	e422                	sd	s0,8(sp)$/;"	l
bc	./user/usertests.asm	/^      bc:	00005097          	auipc	ra,0x5$/;"	l
bc	./user/zombie.asm	/^  bc:	6422                	ld	s0,8(sp)$/;"	l
bc0	./user/grind.asm	/^     bc0:	f00080e7          	jalr	-256(ra) # abc <iter>$/;"	l
bc0	./user/sh.asm	/^     bc0:	8082                	ret$/;"	l
bc0	./user/usertests.asm	/^     bc0:	84aa                	mv	s1,a0$/;"	l
bc2	./user/sh.asm	/^     bc2:	4501                	li	a0,0$/;"	l
bc2	./user/usertests.asm	/^     bc2:	0c054863          	bltz	a0,c92 <unlinkread+0x12a>$/;"	l
bc4	./user/grind.asm	/^     bc4:	4551                	li	a0,20$/;"	l
bc4	./user/sh.asm	/^     bc4:	bfe5                	j	bbc <strlen+0x20>$/;"	l
bc6	./user/grind.asm	/^     bc6:	00000097          	auipc	ra,0x0$/;"	l
bc6	./user/sh.asm	/^     bc6:	1141                	addi	sp,sp,-16$/;"	l
bc6	./user/usertests.asm	/^     bc6:	00005517          	auipc	a0,0x5$/;"	l
bc8	./user/sh.asm	/^     bc8:	e422                	sd	s0,8(sp)$/;"	l
bca	./user/grind.asm	/^     bca:	328080e7          	jalr	808(ra) # eee <sleep>$/;"	l
bca	./user/sh.asm	/^     bca:	0800                	addi	s0,sp,16$/;"	l
bca	./user/usertests.asm	/^     bca:	e1a50513          	addi	a0,a0,-486 # 59e0 <malloc+0x232>$/;"	l
bcache	./kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon6
bcc	./user/sh.asm	/^     bcc:	ce09                	beqz	a2,be6 <memset+0x20>$/;"	l
bce	./user/grind.asm	/^     bce:	00000097          	auipc	ra,0x0$/;"	l
bce	./user/sh.asm	/^     bce:	87aa                	mv	a5,a0$/;"	l
bce	./user/usertests.asm	/^     bce:	00004097          	auipc	ra,0x4$/;"	l
bcmd	./user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	./user/sh.asm	/^     bd0:	fff6071b          	addiw	a4,a2,-1$/;"	l
bd2	./user/grind.asm	/^     bd2:	288080e7          	jalr	648(ra) # e56 <fork>$/;"	l
bd2	./user/usertests.asm	/^     bd2:	7fa080e7          	jalr	2042(ra) # 53c8 <unlink>$/;"	l
bd4	./user/sh.asm	/^     bd4:	1702                	slli	a4,a4,0x20$/;"	l
bd6	./user/grind.asm	/^     bd6:	d17d                	beqz	a0,bbc <main+0xa>$/;"	l
bd6	./user/sh.asm	/^     bd6:	9301                	srli	a4,a4,0x20$/;"	l
bd6	./user/usertests.asm	/^     bd6:	ed61                	bnez	a0,cae <unlinkread+0x146>$/;"	l
bd8	./user/grind.asm	/^     bd8:	fea056e3          	blez	a0,bc4 <main+0x12>$/;"	l
bd8	./user/sh.asm	/^     bd8:	0705                	addi	a4,a4,1$/;"	l
bd8	./user/usertests.asm	/^     bd8:	20200593          	li	a1,514$/;"	l
bda	./user/sh.asm	/^     bda:	972a                	add	a4,a4,a0$/;"	l
bdc	./user/grind.asm	/^     bdc:	4501                	li	a0,0$/;"	l
bdc	./user/sh.asm	/^     bdc:	00b78023          	sb	a1,0(a5)$/;"	l
bdc	./user/usertests.asm	/^     bdc:	00005517          	auipc	a0,0x5$/;"	l
bde	./user/grind.asm	/^     bde:	00000097          	auipc	ra,0x0$/;"	l
be	./user/cat.asm	/^  be:	31a080e7          	jalr	794(ra) # 3d4 <open>$/;"	l
be	./user/echo.asm	/^  be:	0005c503          	lbu	a0,0(a1)$/;"	l
be	./user/grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	./user/init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	./user/kill.asm	/^  be:	9e89                	subw	a3,a3,a0$/;"	l
be	./user/mkdir.asm	/^  be:	8082                	ret$/;"	l
be	./user/pingpong.asm	/^  be:	0800                	addi	s0,sp,16$/;"	l
be	./user/rm.asm	/^  be:	8082                	ret$/;"	l
be	./user/sh.asm	/^      be:	00056783          	lwu	a5,0(a0)$/;"	l
be	./user/sleep.asm	/^  be:	0800                	addi	s0,sp,16$/;"	l
be	./user/stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	./user/wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	./user/zombie.asm	/^  be:	0141                	addi	sp,sp,16$/;"	l
be0	./user/sh.asm	/^     be0:	0785                	addi	a5,a5,1$/;"	l
be0	./user/usertests.asm	/^     be0:	e0450513          	addi	a0,a0,-508 # 59e0 <malloc+0x232>$/;"	l
be2	./user/grind.asm	/^     be2:	288080e7          	jalr	648(ra) # e66 <wait>$/;"	l
be2	./user/sh.asm	/^     be2:	fee79de3          	bne	a5,a4,bdc <memset+0x16>$/;"	l
be4	./user/usertests.asm	/^     be4:	00004097          	auipc	ra,0x4$/;"	l
be6	./user/grind.asm	/^     be6:	bff9                	j	bc4 <main+0x12>$/;"	l
be6	./user/sh.asm	/^     be6:	6422                	ld	s0,8(sp)$/;"	l
be8	./user/grind.asm	/^     be8:	1141                	addi	sp,sp,-16$/;"	l
be8	./user/sh.asm	/^     be8:	0141                	addi	sp,sp,16$/;"	l
be8	./user/usertests.asm	/^     be8:	7d4080e7          	jalr	2004(ra) # 53b8 <open>$/;"	l
bea	./user/grind.asm	/^     bea:	e422                	sd	s0,8(sp)$/;"	l
bea	./user/sh.asm	/^     bea:	8082                	ret$/;"	l
bec	./user/grind.asm	/^     bec:	0800                	addi	s0,sp,16$/;"	l
bec	./user/sh.asm	/^     bec:	1141                	addi	sp,sp,-16$/;"	l
bec	./user/usertests.asm	/^     bec:	892a                	mv	s2,a0$/;"	l
bee	./user/grind.asm	/^     bee:	87aa                	mv	a5,a0$/;"	l
bee	./user/sh.asm	/^     bee:	e422                	sd	s0,8(sp)$/;"	l
bee	./user/usertests.asm	/^     bee:	460d                	li	a2,3$/;"	l
begin_op	./kernel/log.c	/^begin_op(void)$/;"	f
bf0	./user/grind.asm	/^     bf0:	0585                	addi	a1,a1,1$/;"	l
bf0	./user/sh.asm	/^     bf0:	0800                	addi	s0,sp,16$/;"	l
bf0	./user/usertests.asm	/^     bf0:	00005597          	auipc	a1,0x5$/;"	l
bf2	./user/grind.asm	/^     bf2:	0785                	addi	a5,a5,1$/;"	l
bf2	./user/sh.asm	/^     bf2:	00054783          	lbu	a5,0(a0)$/;"	l
bf4	./user/grind.asm	/^     bf4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
bf4	./user/usertests.asm	/^     bf4:	50058593          	addi	a1,a1,1280 # 60f0 <malloc+0x942>$/;"	l
bf6	./user/sh.asm	/^     bf6:	cb99                	beqz	a5,c0c <strchr+0x20>$/;"	l
bf8	./user/grind.asm	/^     bf8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
bf8	./user/sh.asm	/^     bf8:	00f58763          	beq	a1,a5,c06 <strchr+0x1a>$/;"	l
bf8	./user/usertests.asm	/^     bf8:	00004097          	auipc	ra,0x4$/;"	l
bfc	./user/grind.asm	/^     bfc:	fb75                	bnez	a4,bf0 <strcpy+0x8>$/;"	l
bfc	./user/sh.asm	/^     bfc:	0505                	addi	a0,a0,1$/;"	l
bfc	./user/usertests.asm	/^     bfc:	7a0080e7          	jalr	1952(ra) # 5398 <write>$/;"	l
bfe	./user/grind.asm	/^     bfe:	6422                	ld	s0,8(sp)$/;"	l
bfe	./user/sh.asm	/^     bfe:	00054783          	lbu	a5,0(a0)$/;"	l
bfree	./kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	./kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	./kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	./user/usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	./user/usertests.c	/^bigdir(char *s)$/;"	f
bigfile	./user/usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	./user/usertests.c	/^bigwrite(char *s)$/;"	f
binit	./kernel/bio.c	/^binit(void)$/;"	f
block	./kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	./kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	./kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	./kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bp	./kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	./kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	./kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	./kernel/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	./kernel/kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	./kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	./kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	./kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	./kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	./kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	./user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/pingpong.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/prime.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/primes.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/sleep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	./user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bpin	./kernel/bio.c	/^bpin(struct buf *b) {$/;"	f
bread	./kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f
breakpoint	./gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
brelse	./kernel/bio.c	/^brelse(struct buf *b)$/;"	f
bsstest	./user/usertests.c	/^bsstest(char *s)$/;"	f
buf	./gradelib.py	/^            buf = bytearray()$/;"	v	class:shell_script.setup_call_on_line.context
buf	./kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon6	typeref:struct:__anon6::buf	file:
buf	./kernel/buf.h	/^struct buf {$/;"	s
buf	./kernel/console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon2	file:
buf	./user/cat.c	/^char buf[512];$/;"	v
buf	./user/grep.c	/^char buf[1024];$/;"	v
buf	./user/usertests.c	/^char buf[BUFSZ];$/;"	v
buf	./user/wc.c	/^char buf[512];$/;"	v
bunpin	./kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f
bwrite	./kernel/bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	./kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	./kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	./kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF];$/;"	d
c	./kernel/kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	./user/cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	./user/echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	./user/forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	./user/grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	./user/grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	./user/grind.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	./user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	./user/kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	./user/ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	./user/ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	./user/mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	./user/pingpong.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/pingpong.asm	/^   c:	fcf40fa3          	sb	a5,-33(s0)$/;"	l
c	./user/prime.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/prime.asm	/^   c:	4108                	lw	a0,0(a0)$/;"	l
c	./user/primes.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/primes.asm	/^   c:	4108                	lw	a0,0(a0)$/;"	l
c	./user/rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	./user/sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	./user/sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/sleep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	./user/usertests.asm	/^       c:	4505                	li	a0,1$/;"	l
c	./user/usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	./user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	./user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	./user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	./user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	./user/wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	./user/zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	./user/zombie.asm	/^   c:	290080e7          	jalr	656(ra) # 298 <fork>$/;"	l
c0	./user/forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	./user/grind.asm	/^      c0:	2c450513          	addi	a0,a0,708 # 1380 <malloc+0xec>$/;"	l
c0	./user/kill.asm	/^  c0:	00f6853b          	addw	a0,a3,a5$/;"	l
c0	./user/ln.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	./user/ls.asm	/^  c0:	24913c23          	sd	s1,600(sp)$/;"	l
c0	./user/mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	./user/pingpong.asm	/^  c0:	87aa                	mv	a5,a0$/;"	l
c0	./user/prime.asm	/^  c0:	fe040513          	addi	a0,s0,-32$/;"	l
c0	./user/primes.asm	/^  c0:	fe040513          	addi	a0,s0,-32$/;"	l
c0	./user/rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	./user/sleep.asm	/^  c0:	ce09                	beqz	a2,da <memset+0x20>$/;"	l
c0	./user/usertests.asm	/^      c0:	2e4080e7          	jalr	740(ra) # 53a0 <close>$/;"	l
c0	./user/zombie.asm	/^  c0:	8082                	ret$/;"	l
c00	./user/grind.asm	/^     c00:	0141                	addi	sp,sp,16$/;"	l
c00	./user/usertests.asm	/^     c00:	854a                	mv	a0,s2$/;"	l
c02	./user/grind.asm	/^     c02:	8082                	ret$/;"	l
c02	./user/sh.asm	/^     c02:	fbfd                	bnez	a5,bf8 <strchr+0xc>$/;"	l
c02	./user/usertests.asm	/^     c02:	00004097          	auipc	ra,0x4$/;"	l
c04	./user/grind.asm	/^     c04:	1141                	addi	sp,sp,-16$/;"	l
c04	./user/sh.asm	/^     c04:	4501                	li	a0,0$/;"	l
c06	./user/grind.asm	/^     c06:	e422                	sd	s0,8(sp)$/;"	l
c06	./user/sh.asm	/^     c06:	6422                	ld	s0,8(sp)$/;"	l
c06	./user/usertests.asm	/^     c06:	79e080e7          	jalr	1950(ra) # 53a0 <close>$/;"	l
c08	./user/grind.asm	/^     c08:	0800                	addi	s0,sp,16$/;"	l
c08	./user/sh.asm	/^     c08:	0141                	addi	sp,sp,16$/;"	l
c0a	./user/grind.asm	/^     c0a:	00054783          	lbu	a5,0(a0)$/;"	l
c0a	./user/sh.asm	/^     c0a:	8082                	ret$/;"	l
c0a	./user/usertests.asm	/^     c0a:	660d                	lui	a2,0x3$/;"	l
c0c	./user/sh.asm	/^     c0c:	4501                	li	a0,0$/;"	l
c0c	./user/usertests.asm	/^     c0c:	0000b597          	auipc	a1,0xb$/;"	l
c0e	./user/grind.asm	/^     c0e:	cb91                	beqz	a5,c22 <strcmp+0x1e>$/;"	l
c0e	./user/sh.asm	/^     c0e:	bfe5                	j	c06 <strchr+0x1a>$/;"	l
c10	./user/grind.asm	/^     c10:	0005c703          	lbu	a4,0(a1)$/;"	l
c10	./user/sh.asm	/^     c10:	711d                	addi	sp,sp,-96$/;"	l
c10	./user/usertests.asm	/^     c10:	b2c58593          	addi	a1,a1,-1236 # b738 <buf>$/;"	l
c12	./user/sh.asm	/^     c12:	ec86                	sd	ra,88(sp)$/;"	l
c14	./user/grind.asm	/^     c14:	00f71763          	bne	a4,a5,c22 <strcmp+0x1e>$/;"	l
c14	./user/sh.asm	/^     c14:	e8a2                	sd	s0,80(sp)$/;"	l
c14	./user/usertests.asm	/^     c14:	8526                	mv	a0,s1$/;"	l
c16	./user/sh.asm	/^     c16:	e4a6                	sd	s1,72(sp)$/;"	l
c16	./user/usertests.asm	/^     c16:	00004097          	auipc	ra,0x4$/;"	l
c18	./user/grind.asm	/^     c18:	0505                	addi	a0,a0,1$/;"	l
c18	./user/sh.asm	/^     c18:	e0ca                	sd	s2,64(sp)$/;"	l
c1a	./user/grind.asm	/^     c1a:	0585                	addi	a1,a1,1$/;"	l
c1a	./user/sh.asm	/^     c1a:	fc4e                	sd	s3,56(sp)$/;"	l
c1a	./user/usertests.asm	/^     c1a:	77a080e7          	jalr	1914(ra) # 5390 <read>$/;"	l
c1c	./user/grind.asm	/^     c1c:	00054783          	lbu	a5,0(a0)$/;"	l
c1c	./user/sh.asm	/^     c1c:	f852                	sd	s4,48(sp)$/;"	l
c1e	./user/sh.asm	/^     c1e:	f456                	sd	s5,40(sp)$/;"	l
c1e	./user/usertests.asm	/^     c1e:	4795                	li	a5,5$/;"	l
c2	./user/cat.asm	/^  c2:	84aa                	mv	s1,a0$/;"	l
c2	./user/echo.asm	/^  c2:	40a7853b          	subw	a0,a5,a0$/;"	l
c2	./user/grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	./user/init.asm	/^  c2:	2b0080e7          	jalr	688(ra) # 36e <exit>$/;"	l
c2	./user/ln.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	./user/mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	./user/pingpong.asm	/^  c2:	0585                	addi	a1,a1,1$/;"	l
c2	./user/rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	./user/sh.asm	/^      c2:	078a                	slli	a5,a5,0x2$/;"	l
c2	./user/sleep.asm	/^  c2:	87aa                	mv	a5,a0$/;"	l
c2	./user/stressfs.asm	/^  c2:	63c080e7          	jalr	1596(ra) # 6fa <printf>$/;"	l
c2	./user/wc.asm	/^  c2:	6c6080e7          	jalr	1734(ra) # 784 <printf>$/;"	l
c2	./user/zombie.asm	/^  c2:	1141                	addi	sp,sp,-16$/;"	l
c20	./user/grind.asm	/^     c20:	fbe5                	bnez	a5,c10 <strcmp+0xc>$/;"	l
c20	./user/sh.asm	/^     c20:	f05a                	sd	s6,32(sp)$/;"	l
c20	./user/usertests.asm	/^     c20:	0af51563          	bne	a0,a5,cca <unlinkread+0x162>$/;"	l
c22	./user/grind.asm	/^     c22:	0005c503          	lbu	a0,0(a1)$/;"	l
c22	./user/sh.asm	/^     c22:	ec5e                	sd	s7,24(sp)$/;"	l
c24	./user/sh.asm	/^     c24:	1080                	addi	s0,sp,96$/;"	l
c24	./user/usertests.asm	/^     c24:	0000b717          	auipc	a4,0xb$/;"	l
c26	./user/grind.asm	/^     c26:	40a7853b          	subw	a0,a5,a0$/;"	l
c26	./user/sh.asm	/^     c26:	8baa                	mv	s7,a0$/;"	l
c28	./user/sh.asm	/^     c28:	8a2e                	mv	s4,a1$/;"	l
c28	./user/usertests.asm	/^     c28:	b1474703          	lbu	a4,-1260(a4) # b738 <buf>$/;"	l
c2a	./user/grind.asm	/^     c2a:	6422                	ld	s0,8(sp)$/;"	l
c2a	./user/sh.asm	/^     c2a:	892a                	mv	s2,a0$/;"	l
c2c	./user/grind.asm	/^     c2c:	0141                	addi	sp,sp,16$/;"	l
c2c	./user/sh.asm	/^     c2c:	4481                	li	s1,0$/;"	l
c2c	./user/usertests.asm	/^     c2c:	06800793          	li	a5,104$/;"	l
c2e	./user/grind.asm	/^     c2e:	8082                	ret$/;"	l
c2e	./user/sh.asm	/^     c2e:	4aa9                	li	s5,10$/;"	l
c30	./user/grind.asm	/^     c30:	1141                	addi	sp,sp,-16$/;"	l
c30	./user/sh.asm	/^     c30:	4b35                	li	s6,13$/;"	l
c30	./user/usertests.asm	/^     c30:	0af71b63          	bne	a4,a5,ce6 <unlinkread+0x17e>$/;"	l
c32	./user/grind.asm	/^     c32:	e422                	sd	s0,8(sp)$/;"	l
c32	./user/sh.asm	/^     c32:	89a6                	mv	s3,s1$/;"	l
c34	./user/grind.asm	/^     c34:	0800                	addi	s0,sp,16$/;"	l
c34	./user/sh.asm	/^     c34:	2485                	addiw	s1,s1,1$/;"	l
c34	./user/usertests.asm	/^     c34:	4629                	li	a2,10$/;"	l
c36	./user/grind.asm	/^     c36:	00054783          	lbu	a5,0(a0)$/;"	l
c36	./user/sh.asm	/^     c36:	0344d863          	bge	s1,s4,c66 <gets+0x56>$/;"	l
c36	./user/usertests.asm	/^     c36:	0000b597          	auipc	a1,0xb$/;"	l
c3a	./user/grind.asm	/^     c3a:	cf91                	beqz	a5,c56 <strlen+0x26>$/;"	l
c3a	./user/sh.asm	/^     c3a:	4605                	li	a2,1$/;"	l
c3a	./user/usertests.asm	/^     c3a:	b0258593          	addi	a1,a1,-1278 # b738 <buf>$/;"	l
c3c	./user/grind.asm	/^     c3c:	0505                	addi	a0,a0,1$/;"	l
c3c	./user/sh.asm	/^     c3c:	faf40593          	addi	a1,s0,-81$/;"	l
c3e	./user/grind.asm	/^     c3e:	87aa                	mv	a5,a0$/;"	l
c3e	./user/usertests.asm	/^     c3e:	8526                	mv	a0,s1$/;"	l
c4	./user/cat.asm	/^  c4:	02054d63          	bltz	a0,fe <main+0x74>$/;"	l
c4	./user/forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	./user/grind.asm	/^      c4:	00001097          	auipc	ra,0x1$/;"	l
c4	./user/kill.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	./user/ls.asm	/^  c4:	25213823          	sd	s2,592(sp)$/;"	l
c4	./user/mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	./user/pingpong.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	./user/prime.asm	/^  c4:	00000097          	auipc	ra,0x0$/;"	l
c4	./user/primes.asm	/^  c4:	00000097          	auipc	ra,0x0$/;"	l
c4	./user/rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	./user/sh.asm	/^      c4:	00001717          	auipc	a4,0x1$/;"	l
c4	./user/sleep.asm	/^  c4:	fff6071b          	addiw	a4,a2,-1$/;"	l
c4	./user/usertests.asm	/^      c4:	4581                	li	a1,0$/;"	l
c4	./user/zombie.asm	/^  c4:	e422                	sd	s0,8(sp)$/;"	l
c40	./user/grind.asm	/^     c40:	4685                	li	a3,1$/;"	l
c40	./user/sh.asm	/^     c40:	4501                	li	a0,0$/;"	l
c40	./user/usertests.asm	/^     c40:	00004097          	auipc	ra,0x4$/;"	l
c42	./user/grind.asm	/^     c42:	9e89                	subw	a3,a3,a0$/;"	l
c42	./user/sh.asm	/^     c42:	00000097          	auipc	ra,0x0$/;"	l
c44	./user/grind.asm	/^     c44:	00f6853b          	addw	a0,a3,a5$/;"	l
c44	./user/usertests.asm	/^     c44:	758080e7          	jalr	1880(ra) # 5398 <write>$/;"	l
c46	./user/sh.asm	/^     c46:	1a0080e7          	jalr	416(ra) # de2 <read>$/;"	l
c48	./user/grind.asm	/^     c48:	0785                	addi	a5,a5,1$/;"	l
c48	./user/usertests.asm	/^     c48:	47a9                	li	a5,10$/;"	l
c4a	./user/grind.asm	/^     c4a:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c4a	./user/sh.asm	/^     c4a:	00a05e63          	blez	a0,c66 <gets+0x56>$/;"	l
c4a	./user/usertests.asm	/^     c4a:	0af51c63          	bne	a0,a5,d02 <unlinkread+0x19a>$/;"	l
c4e	./user/grind.asm	/^     c4e:	fb7d                	bnez	a4,c44 <strlen+0x14>$/;"	l
c4e	./user/sh.asm	/^     c4e:	faf44783          	lbu	a5,-81(s0)$/;"	l
c4e	./user/usertests.asm	/^     c4e:	8526                	mv	a0,s1$/;"	l
c50	./user/grind.asm	/^     c50:	6422                	ld	s0,8(sp)$/;"	l
c50	./user/usertests.asm	/^     c50:	00004097          	auipc	ra,0x4$/;"	l
c52	./user/grind.asm	/^     c52:	0141                	addi	sp,sp,16$/;"	l
c52	./user/sh.asm	/^     c52:	00f90023          	sb	a5,0(s2)$/;"	l
c54	./user/grind.asm	/^     c54:	8082                	ret$/;"	l
c54	./user/usertests.asm	/^     c54:	750080e7          	jalr	1872(ra) # 53a0 <close>$/;"	l
c56	./user/grind.asm	/^     c56:	4501                	li	a0,0$/;"	l
c56	./user/sh.asm	/^     c56:	01578763          	beq	a5,s5,c64 <gets+0x54>$/;"	l
c58	./user/grind.asm	/^     c58:	bfe5                	j	c50 <strlen+0x20>$/;"	l
c58	./user/usertests.asm	/^     c58:	00005517          	auipc	a0,0x5$/;"	l
c5a	./user/grind.asm	/^     c5a:	1141                	addi	sp,sp,-16$/;"	l
c5a	./user/sh.asm	/^     c5a:	0905                	addi	s2,s2,1$/;"	l
c5c	./user/grind.asm	/^     c5c:	e422                	sd	s0,8(sp)$/;"	l
c5c	./user/sh.asm	/^     c5c:	fd679be3          	bne	a5,s6,c32 <gets+0x22>$/;"	l
c5c	./user/usertests.asm	/^     c5c:	d8850513          	addi	a0,a0,-632 # 59e0 <malloc+0x232>$/;"	l
c5e	./user/grind.asm	/^     c5e:	0800                	addi	s0,sp,16$/;"	l
c6	./user/echo.asm	/^  c6:	6422                	ld	s0,8(sp)$/;"	l
c6	./user/forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	./user/grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	./user/init.asm	/^  c6:	00001597          	auipc	a1,0x1$/;"	l
c6	./user/kill.asm	/^  c6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c6	./user/ln.asm	/^  c6:	fb7d                	bnez	a4,bc <strlen+0x14>$/;"	l
c6	./user/mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	./user/pingpong.asm	/^  c6:	fff5c703          	lbu	a4,-1(a1)$/;"	l
c6	./user/rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	./user/stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	./user/usertests.asm	/^      c6:	00006517          	auipc	a0,0x6$/;"	l
c6	./user/wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c6	./user/zombie.asm	/^  c6:	0800                	addi	s0,sp,16$/;"	l
c60	./user/grind.asm	/^     c60:	ce09                	beqz	a2,c7a <memset+0x20>$/;"	l
c60	./user/sh.asm	/^     c60:	89a6                	mv	s3,s1$/;"	l
c60	./user/usertests.asm	/^     c60:	00004097          	auipc	ra,0x4$/;"	l
c62	./user/grind.asm	/^     c62:	87aa                	mv	a5,a0$/;"	l
c62	./user/sh.asm	/^     c62:	a011                	j	c66 <gets+0x56>$/;"	l
c64	./user/grind.asm	/^     c64:	fff6071b          	addiw	a4,a2,-1$/;"	l
c64	./user/sh.asm	/^     c64:	89a6                	mv	s3,s1$/;"	l
c64	./user/usertests.asm	/^     c64:	768080e7          	jalr	1896(ra) # 53c8 <unlink>$/;"	l
c66	./user/sh.asm	/^     c66:	99de                	add	s3,s3,s7$/;"	l
c68	./user/grind.asm	/^     c68:	1702                	slli	a4,a4,0x20$/;"	l
c68	./user/sh.asm	/^     c68:	00098023          	sb	zero,0(s3)$/;"	l
c68	./user/usertests.asm	/^     c68:	70a2                	ld	ra,40(sp)$/;"	l
c6a	./user/grind.asm	/^     c6a:	9301                	srli	a4,a4,0x20$/;"	l
c6a	./user/usertests.asm	/^     c6a:	7402                	ld	s0,32(sp)$/;"	l
c6c	./user/grind.asm	/^     c6c:	0705                	addi	a4,a4,1$/;"	l
c6c	./user/sh.asm	/^     c6c:	855e                	mv	a0,s7$/;"	l
c6c	./user/usertests.asm	/^     c6c:	64e2                	ld	s1,24(sp)$/;"	l
c6e	./user/grind.asm	/^     c6e:	972a                	add	a4,a4,a0$/;"	l
c6e	./user/sh.asm	/^     c6e:	60e6                	ld	ra,88(sp)$/;"	l
c6e	./user/usertests.asm	/^     c6e:	6942                	ld	s2,16(sp)$/;"	l
c70	./user/grind.asm	/^     c70:	00b78023          	sb	a1,0(a5)$/;"	l
c70	./user/sh.asm	/^     c70:	6446                	ld	s0,80(sp)$/;"	l
c70	./user/usertests.asm	/^     c70:	69a2                	ld	s3,8(sp)$/;"	l
c72	./user/sh.asm	/^     c72:	64a6                	ld	s1,72(sp)$/;"	l
c72	./user/usertests.asm	/^     c72:	6145                	addi	sp,sp,48$/;"	l
c74	./user/grind.asm	/^     c74:	0785                	addi	a5,a5,1$/;"	l
c74	./user/sh.asm	/^     c74:	6906                	ld	s2,64(sp)$/;"	l
c74	./user/usertests.asm	/^     c74:	8082                	ret$/;"	l
c76	./user/grind.asm	/^     c76:	fee79de3          	bne	a5,a4,c70 <memset+0x16>$/;"	l
c76	./user/sh.asm	/^     c76:	79e2                	ld	s3,56(sp)$/;"	l
c76	./user/usertests.asm	/^     c76:	85ce                	mv	a1,s3$/;"	l
c78	./user/sh.asm	/^     c78:	7a42                	ld	s4,48(sp)$/;"	l
c78	./user/usertests.asm	/^     c78:	00005517          	auipc	a0,0x5$/;"	l
c7a	./user/grind.asm	/^     c7a:	6422                	ld	s0,8(sp)$/;"	l
c7a	./user/sh.asm	/^     c7a:	7aa2                	ld	s5,40(sp)$/;"	l
c7c	./user/grind.asm	/^     c7c:	0141                	addi	sp,sp,16$/;"	l
c7c	./user/sh.asm	/^     c7c:	7b02                	ld	s6,32(sp)$/;"	l
c7c	./user/usertests.asm	/^     c7c:	41050513          	addi	a0,a0,1040 # 6088 <malloc+0x8da>$/;"	l
c7e	./user/grind.asm	/^     c7e:	8082                	ret$/;"	l
c7e	./user/sh.asm	/^     c7e:	6be2                	ld	s7,24(sp)$/;"	l
c8	./user/cat.asm	/^  c8:	00000097          	auipc	ra,0x0$/;"	l
c8	./user/echo.asm	/^  c8:	0141                	addi	sp,sp,16$/;"	l
c8	./user/forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	./user/grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	./user/grind.asm	/^      c8:	112080e7          	jalr	274(ra) # 11d6 <printf>$/;"	l
c8	./user/ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	./user/ls.asm	/^  c8:	25313423          	sd	s3,584(sp)$/;"	l
c8	./user/prime.asm	/^  c8:	f3c080e7          	jalr	-196(ra) # 0 <close_pipe>$/;"	l
c8	./user/primes.asm	/^  c8:	f3c080e7          	jalr	-196(ra) # 0 <close_pipe>$/;"	l
c8	./user/sh.asm	/^      c8:	33470713          	addi	a4,a4,820 # 13f8 <malloc+0x1f8>$/;"	l
c8	./user/sleep.asm	/^  c8:	1702                	slli	a4,a4,0x20$/;"	l
c8	./user/stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	./user/wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	./user/zombie.asm	/^  c8:	00054783          	lbu	a5,0(a0)$/;"	l
c80	./user/grind.asm	/^     c80:	1141                	addi	sp,sp,-16$/;"	l
c80	./user/sh.asm	/^     c80:	6125                	addi	sp,sp,96$/;"	l
c80	./user/usertests.asm	/^     c80:	00005097          	auipc	ra,0x5$/;"	l
c82	./user/grind.asm	/^     c82:	e422                	sd	s0,8(sp)$/;"	l
c82	./user/sh.asm	/^     c82:	8082                	ret$/;"	l
c84	./user/grind.asm	/^     c84:	0800                	addi	s0,sp,16$/;"	l
c84	./user/sh.asm	/^     c84:	1101                	addi	sp,sp,-32$/;"	l
c84	./user/usertests.asm	/^     c84:	a70080e7          	jalr	-1424(ra) # 56f0 <printf>$/;"	l
c86	./user/grind.asm	/^     c86:	00054783          	lbu	a5,0(a0)$/;"	l
c86	./user/sh.asm	/^     c86:	ec06                	sd	ra,24(sp)$/;"	l
c88	./user/sh.asm	/^     c88:	e822                	sd	s0,16(sp)$/;"	l
c88	./user/usertests.asm	/^     c88:	4505                	li	a0,1$/;"	l
c8a	./user/grind.asm	/^     c8a:	cb99                	beqz	a5,ca0 <strchr+0x20>$/;"	l
c8a	./user/sh.asm	/^     c8a:	e426                	sd	s1,8(sp)$/;"	l
c8a	./user/usertests.asm	/^     c8a:	00004097          	auipc	ra,0x4$/;"	l
c8c	./user/grind.asm	/^     c8c:	00f58763          	beq	a1,a5,c9a <strchr+0x1a>$/;"	l
c8c	./user/sh.asm	/^     c8c:	e04a                	sd	s2,0(sp)$/;"	l
c8e	./user/sh.asm	/^     c8e:	1000                	addi	s0,sp,32$/;"	l
c8e	./user/usertests.asm	/^     c8e:	6ee080e7          	jalr	1774(ra) # 5378 <exit>$/;"	l
c90	./user/grind.asm	/^     c90:	0505                	addi	a0,a0,1$/;"	l
c90	./user/sh.asm	/^     c90:	892e                	mv	s2,a1$/;"	l
c92	./user/grind.asm	/^     c92:	00054783          	lbu	a5,0(a0)$/;"	l
c92	./user/sh.asm	/^     c92:	4581                	li	a1,0$/;"	l
c92	./user/usertests.asm	/^     c92:	85ce                	mv	a1,s3$/;"	l
c94	./user/sh.asm	/^     c94:	00000097          	auipc	ra,0x0$/;"	l
c94	./user/usertests.asm	/^     c94:	00005517          	auipc	a0,0x5$/;"	l
c96	./user/grind.asm	/^     c96:	fbfd                	bnez	a5,c8c <strchr+0xc>$/;"	l
c98	./user/grind.asm	/^     c98:	4501                	li	a0,0$/;"	l
c98	./user/sh.asm	/^     c98:	176080e7          	jalr	374(ra) # e0a <open>$/;"	l
c98	./user/usertests.asm	/^     c98:	41c50513          	addi	a0,a0,1052 # 60b0 <malloc+0x902>$/;"	l
c9a	./user/grind.asm	/^     c9a:	6422                	ld	s0,8(sp)$/;"	l
c9c	./user/grind.asm	/^     c9c:	0141                	addi	sp,sp,16$/;"	l
c9c	./user/sh.asm	/^     c9c:	02054563          	bltz	a0,cc6 <stat+0x42>$/;"	l
c9c	./user/usertests.asm	/^     c9c:	00005097          	auipc	ra,0x5$/;"	l
c9e	./user/grind.asm	/^     c9e:	8082                	ret$/;"	l
ca	./user/echo.asm	/^  ca:	8082                	ret$/;"	l
ca	./user/forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	./user/grep.asm	/^  ca:	8082                	ret$/;"	l
ca	./user/init.asm	/^  ca:	85a58593          	addi	a1,a1,-1958 # 920 <argv>$/;"	l
ca	./user/kill.asm	/^  ca:	fb7d                	bnez	a4,c0 <strlen+0x14>$/;"	l
ca	./user/ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	./user/mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	./user/pingpong.asm	/^  ca:	fee78fa3          	sb	a4,-1(a5)$/;"	l
ca	./user/rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	./user/sleep.asm	/^  ca:	9301                	srli	a4,a4,0x20$/;"	l
ca	./user/usertests.asm	/^      ca:	b2a50513          	addi	a0,a0,-1238 # 5bf0 <malloc+0x442>$/;"	l
ca	./user/wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca0	./user/grind.asm	/^     ca0:	4501                	li	a0,0$/;"	l
ca0	./user/sh.asm	/^     ca0:	84aa                	mv	s1,a0$/;"	l
ca0	./user/usertests.asm	/^     ca0:	a54080e7          	jalr	-1452(ra) # 56f0 <printf>$/;"	l
ca2	./user/grind.asm	/^     ca2:	bfe5                	j	c9a <strchr+0x1a>$/;"	l
ca2	./user/sh.asm	/^     ca2:	85ca                	mv	a1,s2$/;"	l
ca4	./user/grind.asm	/^     ca4:	711d                	addi	sp,sp,-96$/;"	l
ca4	./user/sh.asm	/^     ca4:	00000097          	auipc	ra,0x0$/;"	l
ca4	./user/usertests.asm	/^     ca4:	4505                	li	a0,1$/;"	l
ca6	./user/grind.asm	/^     ca6:	ec86                	sd	ra,88(sp)$/;"	l
ca6	./user/usertests.asm	/^     ca6:	00004097          	auipc	ra,0x4$/;"	l
ca8	./user/grind.asm	/^     ca8:	e8a2                	sd	s0,80(sp)$/;"	l
ca8	./user/sh.asm	/^     ca8:	17e080e7          	jalr	382(ra) # e22 <fstat>$/;"	l
caa	./user/grind.asm	/^     caa:	e4a6                	sd	s1,72(sp)$/;"	l
caa	./user/usertests.asm	/^     caa:	6d2080e7          	jalr	1746(ra) # 5378 <exit>$/;"	l
cac	./user/grind.asm	/^     cac:	e0ca                	sd	s2,64(sp)$/;"	l
cac	./user/sh.asm	/^     cac:	892a                	mv	s2,a0$/;"	l
cae	./user/grind.asm	/^     cae:	fc4e                	sd	s3,56(sp)$/;"	l
cae	./user/sh.asm	/^     cae:	8526                	mv	a0,s1$/;"	l
cae	./user/usertests.asm	/^     cae:	85ce                	mv	a1,s3$/;"	l
call_on_line	./gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	./user/cat.c	/^cat(int fd)$/;"	f
cb0	./user/grind.asm	/^     cb0:	f852                	sd	s4,48(sp)$/;"	l
cb0	./user/sh.asm	/^     cb0:	00000097          	auipc	ra,0x0$/;"	l
cb0	./user/usertests.asm	/^     cb0:	00005517          	auipc	a0,0x5$/;"	l
cb2	./user/grind.asm	/^     cb2:	f456                	sd	s5,40(sp)$/;"	l
cb4	./user/grind.asm	/^     cb4:	f05a                	sd	s6,32(sp)$/;"	l
cb4	./user/sh.asm	/^     cb4:	142080e7          	jalr	322(ra) # df2 <close>$/;"	l
cb4	./user/usertests.asm	/^     cb4:	42050513          	addi	a0,a0,1056 # 60d0 <malloc+0x922>$/;"	l
cb6	./user/grind.asm	/^     cb6:	ec5e                	sd	s7,24(sp)$/;"	l
cb8	./user/grind.asm	/^     cb8:	1080                	addi	s0,sp,96$/;"	l
cb8	./user/sh.asm	/^     cb8:	854a                	mv	a0,s2$/;"	l
cb8	./user/usertests.asm	/^     cb8:	00005097          	auipc	ra,0x5$/;"	l
cba	./user/grind.asm	/^     cba:	8baa                	mv	s7,a0$/;"	l
cba	./user/sh.asm	/^     cba:	60e2                	ld	ra,24(sp)$/;"	l
cbc	./user/grind.asm	/^     cbc:	8a2e                	mv	s4,a1$/;"	l
cbc	./user/sh.asm	/^     cbc:	6442                	ld	s0,16(sp)$/;"	l
cbc	./user/usertests.asm	/^     cbc:	a38080e7          	jalr	-1480(ra) # 56f0 <printf>$/;"	l
cbe	./user/grind.asm	/^     cbe:	892a                	mv	s2,a0$/;"	l
cbe	./user/sh.asm	/^     cbe:	64a2                	ld	s1,8(sp)$/;"	l
cbuf	./kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	./user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/cat.asm	/^  cc:	f38080e7          	jalr	-200(ra) # 0 <cat>$/;"	l
cc	./user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/echo.asm	/^  cc:	1141                	addi	sp,sp,-16$/;"	l
cc	./user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	./user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	./user/grind.asm	/^      cc:	4505                	li	a0,1$/;"	l
cc	./user/grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/kill.asm	/^  cc:	6422                	ld	s0,8(sp)$/;"	l
cc	./user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/ln.asm	/^  cc:	8082                	ret$/;"	l
cc	./user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/ls.asm	/^  cc:	25413023          	sd	s4,576(sp)$/;"	l
cc	./user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	./user/pingpong.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/prime.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/prime.asm	/^  cc:	4611                	li	a2,4$/;"	l
cc	./user/primes.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/primes.asm	/^  cc:	4611                	li	a2,4$/;"	l
cc	./user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	./user/sh.asm	/^      cc:	97ba                	add	a5,a5,a4$/;"	l
cc	./user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/sleep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/sleep.asm	/^  cc:	0705                	addi	a4,a4,1$/;"	l
cc	./user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	./user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	./user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	./user/usertests.asm	/^    cc = 1;$/;"	d
cc	./user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	./user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	./user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	./user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	./user/zombie.asm	/^  cc:	cb99                	beqz	a5,e2 <strchr+0x20>$/;"	l
cc0	./user/grind.asm	/^     cc0:	4481                	li	s1,0$/;"	l
cc0	./user/sh.asm	/^     cc0:	6902                	ld	s2,0(sp)$/;"	l
cc0	./user/usertests.asm	/^     cc0:	4505                	li	a0,1$/;"	l
cc2	./user/grind.asm	/^     cc2:	4aa9                	li	s5,10$/;"	l
cc2	./user/sh.asm	/^     cc2:	6105                	addi	sp,sp,32$/;"	l
cc2	./user/usertests.asm	/^     cc2:	00004097          	auipc	ra,0x4$/;"	l
cc4	./user/grind.asm	/^     cc4:	4b35                	li	s6,13$/;"	l
cc4	./user/sh.asm	/^     cc4:	8082                	ret$/;"	l
cc6	./user/grind.asm	/^     cc6:	89a6                	mv	s3,s1$/;"	l
cc6	./user/sh.asm	/^     cc6:	597d                	li	s2,-1$/;"	l
cc6	./user/usertests.asm	/^     cc6:	6b6080e7          	jalr	1718(ra) # 5378 <exit>$/;"	l
cc8	./user/grind.asm	/^     cc8:	2485                	addiw	s1,s1,1$/;"	l
cc8	./user/sh.asm	/^     cc8:	bfc5                	j	cb8 <stat+0x34>$/;"	l
cca	./user/grind.asm	/^     cca:	0344d863          	bge	s1,s4,cfa <gets+0x56>$/;"	l
cca	./user/sh.asm	/^     cca:	1141                	addi	sp,sp,-16$/;"	l
cca	./user/usertests.asm	/^     cca:	85ce                	mv	a1,s3$/;"	l
ccc	./user/sh.asm	/^     ccc:	e422                	sd	s0,8(sp)$/;"	l
ccc	./user/usertests.asm	/^     ccc:	00005517          	auipc	a0,0x5$/;"	l
cce	./user/grind.asm	/^     cce:	4605                	li	a2,1$/;"	l
cce	./user/sh.asm	/^     cce:	0800                	addi	s0,sp,16$/;"	l
cd0	./user/grind.asm	/^     cd0:	faf40593          	addi	a1,s0,-81$/;"	l
cd0	./user/sh.asm	/^     cd0:	00054603          	lbu	a2,0(a0)$/;"	l
cd0	./user/usertests.asm	/^     cd0:	42c50513          	addi	a0,a0,1068 # 60f8 <malloc+0x94a>$/;"	l
cd4	./user/grind.asm	/^     cd4:	4501                	li	a0,0$/;"	l
cd4	./user/sh.asm	/^     cd4:	fd06079b          	addiw	a5,a2,-48$/;"	l
cd4	./user/usertests.asm	/^     cd4:	00005097          	auipc	ra,0x5$/;"	l
cd6	./user/grind.asm	/^     cd6:	00000097          	auipc	ra,0x0$/;"	l
cd8	./user/sh.asm	/^     cd8:	0ff7f793          	andi	a5,a5,255$/;"	l
cd8	./user/usertests.asm	/^     cd8:	a1c080e7          	jalr	-1508(ra) # 56f0 <printf>$/;"	l
cda	./user/grind.asm	/^     cda:	1a0080e7          	jalr	416(ra) # e76 <read>$/;"	l
cdc	./user/sh.asm	/^     cdc:	4725                	li	a4,9$/;"	l
cdc	./user/usertests.asm	/^     cdc:	4505                	li	a0,1$/;"	l
cde	./user/grind.asm	/^     cde:	00a05e63          	blez	a0,cfa <gets+0x56>$/;"	l
cde	./user/sh.asm	/^     cde:	02f76963          	bltu	a4,a5,d10 <atoi+0x46>$/;"	l
cde	./user/usertests.asm	/^     cde:	00004097          	auipc	ra,0x4$/;"	l
ce	./user/echo.asm	/^  ce:	e422                	sd	s0,8(sp)$/;"	l
ce	./user/forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	./user/grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	./user/grind.asm	/^      ce:	00001097          	auipc	ra,0x1$/;"	l
ce	./user/init.asm	/^  ce:	00000517          	auipc	a0,0x0$/;"	l
ce	./user/kill.asm	/^  ce:	0141                	addi	sp,sp,16$/;"	l
ce	./user/ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	./user/mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	./user/pingpong.asm	/^  ce:	fb75                	bnez	a4,c2 <strcpy+0x8>$/;"	l
ce	./user/prime.asm	/^  ce:	fe840593          	addi	a1,s0,-24$/;"	l
ce	./user/primes.asm	/^  ce:	fe840593          	addi	a1,s0,-24$/;"	l
ce	./user/rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	./user/sh.asm	/^      ce:	439c                	lw	a5,0(a5)$/;"	l
ce	./user/sleep.asm	/^  ce:	972a                	add	a4,a4,a0$/;"	l
ce	./user/usertests.asm	/^      ce:	00005097          	auipc	ra,0x5$/;"	l
ce	./user/wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	./user/zombie.asm	/^  ce:	00f58763          	beq	a1,a5,dc <strchr+0x1a>$/;"	l
ce2	./user/grind.asm	/^     ce2:	faf44783          	lbu	a5,-81(s0)$/;"	l
ce2	./user/sh.asm	/^     ce2:	86aa                	mv	a3,a0$/;"	l
ce2	./user/usertests.asm	/^     ce2:	69a080e7          	jalr	1690(ra) # 5378 <exit>$/;"	l
ce4	./user/sh.asm	/^     ce4:	4501                	li	a0,0$/;"	l
ce6	./user/grind.asm	/^     ce6:	00f90023          	sb	a5,0(s2)$/;"	l
ce6	./user/sh.asm	/^     ce6:	45a5                	li	a1,9$/;"	l
ce6	./user/usertests.asm	/^     ce6:	85ce                	mv	a1,s3$/;"	l
ce8	./user/sh.asm	/^     ce8:	0685                	addi	a3,a3,1$/;"	l
ce8	./user/usertests.asm	/^     ce8:	00005517          	auipc	a0,0x5$/;"	l
cea	./user/grind.asm	/^     cea:	01578763          	beq	a5,s5,cf8 <gets+0x54>$/;"	l
cea	./user/sh.asm	/^     cea:	0025179b          	slliw	a5,a0,0x2$/;"	l
cec	./user/usertests.asm	/^     cec:	43050513          	addi	a0,a0,1072 # 6118 <malloc+0x96a>$/;"	l
cee	./user/grind.asm	/^     cee:	0905                	addi	s2,s2,1$/;"	l
cee	./user/sh.asm	/^     cee:	9fa9                	addw	a5,a5,a0$/;"	l
cf0	./user/grind.asm	/^     cf0:	fd679be3          	bne	a5,s6,cc6 <gets+0x22>$/;"	l
cf0	./user/sh.asm	/^     cf0:	0017979b          	slliw	a5,a5,0x1$/;"	l
cf0	./user/usertests.asm	/^     cf0:	00005097          	auipc	ra,0x5$/;"	l
cf4	./user/grind.asm	/^     cf4:	89a6                	mv	s3,s1$/;"	l
cf4	./user/sh.asm	/^     cf4:	9fb1                	addw	a5,a5,a2$/;"	l
cf4	./user/usertests.asm	/^     cf4:	a00080e7          	jalr	-1536(ra) # 56f0 <printf>$/;"	l
cf6	./user/grind.asm	/^     cf6:	a011                	j	cfa <gets+0x56>$/;"	l
cf6	./user/sh.asm	/^     cf6:	fd07851b          	addiw	a0,a5,-48$/;"	l
cf8	./user/grind.asm	/^     cf8:	89a6                	mv	s3,s1$/;"	l
cf8	./user/usertests.asm	/^     cf8:	4505                	li	a0,1$/;"	l
cfa	./user/grind.asm	/^     cfa:	99de                	add	s3,s3,s7$/;"	l
cfa	./user/sh.asm	/^     cfa:	0006c603          	lbu	a2,0(a3)$/;"	l
cfa	./user/usertests.asm	/^     cfa:	00004097          	auipc	ra,0x4$/;"	l
cfc	./user/grind.asm	/^     cfc:	00098023          	sb	zero,0(s3)$/;"	l
cfe	./user/sh.asm	/^     cfe:	fd06071b          	addiw	a4,a2,-48$/;"	l
cfe	./user/usertests.asm	/^     cfe:	67e080e7          	jalr	1662(ra) # 5378 <exit>$/;"	l
ch	./kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	./kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	./user/cat.asm	/^char buf[512];$/;"	l
char	./user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	./user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	./user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	./user/wc.asm	/^char buf[512];$/;"	l
chdir	./user/cat.asm	/^chdir:$/;"	l
chdir	./user/echo.asm	/^chdir:$/;"	l
chdir	./user/forktest.asm	/^chdir:$/;"	l
chdir	./user/grep.asm	/^chdir:$/;"	l
chdir	./user/grind.asm	/^chdir:$/;"	l
chdir	./user/init.asm	/^chdir:$/;"	l
chdir	./user/kill.asm	/^chdir:$/;"	l
chdir	./user/ln.asm	/^chdir:$/;"	l
chdir	./user/ls.asm	/^chdir:$/;"	l
chdir	./user/mkdir.asm	/^chdir:$/;"	l
chdir	./user/pingpong.asm	/^chdir:$/;"	l
chdir	./user/prime.asm	/^chdir:$/;"	l
chdir	./user/primes.asm	/^chdir:$/;"	l
chdir	./user/rm.asm	/^chdir:$/;"	l
chdir	./user/sh.asm	/^chdir:$/;"	l
chdir	./user/sleep.asm	/^chdir:$/;"	l
chdir	./user/stressfs.asm	/^chdir:$/;"	l
chdir	./user/usertests.asm	/^chdir:$/;"	l
chdir	./user/usys.S	/^chdir:$/;"	l
chdir	./user/wc.asm	/^chdir:$/;"	l
chdir	./user/zombie.asm	/^chdir:$/;"	l
check_time	./gradelib.py	/^def check_time():$/;"	f
clockintr	./kernel/trap.c	/^clockintr()$/;"	f
close	./gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	./user/cat.asm	/^close:$/;"	l
close	./user/echo.asm	/^close:$/;"	l
close	./user/forktest.asm	/^close:$/;"	l
close	./user/grep.asm	/^close:$/;"	l
close	./user/grind.asm	/^close:$/;"	l
close	./user/init.asm	/^close:$/;"	l
close	./user/kill.asm	/^close:$/;"	l
close	./user/ln.asm	/^close:$/;"	l
close	./user/ls.asm	/^close:$/;"	l
close	./user/mkdir.asm	/^close:$/;"	l
close	./user/pingpong.asm	/^close:$/;"	l
close	./user/prime.asm	/^close:$/;"	l
close	./user/primes.asm	/^close:$/;"	l
close	./user/rm.asm	/^close:$/;"	l
close	./user/sh.asm	/^close:$/;"	l
close	./user/sleep.asm	/^close:$/;"	l
close	./user/stressfs.asm	/^close:$/;"	l
close	./user/usertests.asm	/^close:$/;"	l
close	./user/usys.S	/^close:$/;"	l
close	./user/wc.asm	/^close:$/;"	l
close	./user/zombie.asm	/^close:$/;"	l
close_pipe	./user/primes.c	/^void close_pipe(int *fd)$/;"	f
cmd	./user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	./user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	./user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	./user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	./user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	./user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	./user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	./user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	./user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	./user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	./user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	./user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	./user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	./user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	./user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	./user/sh.c	/^struct cmd {$/;"	s	file:
color	./gradelib.py	/^def color(name, text):$/;"	f
commit	./kernel/log.c	/^commit()$/;"	f	file:
committing	./kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	./user/usertests.c	/^concreate(char *s)$/;"	f
cons	./kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anon2
consoleinit	./kernel/console.c	/^consoleinit(void)$/;"	f
consoleintr	./kernel/console.c	/^consoleintr(int c)$/;"	f
consoleread	./kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f
consolewrite	./kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f
consputc	./kernel/console.c	/^consputc(int c)$/;"	f
cont	./gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
context	./gradelib.py	/^        class context:$/;"	c	function:shell_script.setup_call_on_line
context	./kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	./kernel/proc.h	/^  struct context context;     \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:cpu::context
context	./kernel/proc.h	/^struct context {$/;"	s
continuous	./user/usertests.asm	/^    continuous = 1;$/;"	d
continuous	./user/usertests.asm	/^    continuous = 2;$/;"	d
copyin	./kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f
copyin	./user/usertests.c	/^copyin(char *s)$/;"	f
copyinstr	./kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f
copyinstr1	./user/usertests.c	/^copyinstr1(char *s)$/;"	f
copyinstr2	./user/usertests.c	/^copyinstr2(char *s)$/;"	f
copyinstr3	./user/usertests.c	/^copyinstr3(char *s)$/;"	f
copyout	./kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f
copyout	./user/usertests.c	/^copyout(char *s)$/;"	f
countfree	./user/usertests.c	/^countfree()$/;"	f
cpu	./kernel/proc.h	/^struct cpu {$/;"	s
cpu	./kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpuid	./kernel/proc.c	/^cpuid()$/;"	f
cpus	./kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
create	./kernel/sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	./user/usertests.c	/^createdelete(char *s)$/;"	f
createtest	./user/usertests.c	/^createtest(char *s)$/;"	f
cwd	./kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	./kernel/kernel.asm	/^  d = dst;$/;"	d
d0	./user/cat.asm	/^  d0:	8526                	mv	a0,s1$/;"	l
d0	./user/echo.asm	/^  d0:	0800                	addi	s0,sp,16$/;"	l
d0	./user/forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	./user/grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	./user/kill.asm	/^  d0:	8082                	ret$/;"	l
d0	./user/ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	./user/ls.asm	/^  d0:	23513c23          	sd	s5,568(sp)$/;"	l
d0	./user/mkdir.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	./user/pingpong.asm	/^  d0:	6422                	ld	s0,8(sp)$/;"	l
d0	./user/rm.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	./user/sh.asm	/^      d0:	97ba                	add	a5,a5,a4$/;"	l
d0	./user/sleep.asm	/^  d0:	00b78023          	sb	a1,0(a5)$/;"	l
d0	./user/stressfs.asm	/^  d0:	2f6080e7          	jalr	758(ra) # 3c2 <open>$/;"	l
d0	./user/wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d00	./user/grind.asm	/^     d00:	855e                	mv	a0,s7$/;"	l
d02	./user/grind.asm	/^     d02:	60e6                	ld	ra,88(sp)$/;"	l
d02	./user/sh.asm	/^     d02:	0ff77713          	andi	a4,a4,255$/;"	l
d02	./user/usertests.asm	/^     d02:	85ce                	mv	a1,s3$/;"	l
d04	./user/grind.asm	/^     d04:	6446                	ld	s0,80(sp)$/;"	l
d04	./user/usertests.asm	/^     d04:	00005517          	auipc	a0,0x5$/;"	l
d06	./user/grind.asm	/^     d06:	64a6                	ld	s1,72(sp)$/;"	l
d06	./user/sh.asm	/^     d06:	fee5f1e3          	bgeu	a1,a4,ce8 <atoi+0x1e>$/;"	l
d08	./user/grind.asm	/^     d08:	6906                	ld	s2,64(sp)$/;"	l
d08	./user/usertests.asm	/^     d08:	43450513          	addi	a0,a0,1076 # 6138 <malloc+0x98a>$/;"	l
d0a	./user/grind.asm	/^     d0a:	79e2                	ld	s3,56(sp)$/;"	l
d0a	./user/sh.asm	/^     d0a:	6422                	ld	s0,8(sp)$/;"	l
d0c	./user/grind.asm	/^     d0c:	7a42                	ld	s4,48(sp)$/;"	l
d0c	./user/sh.asm	/^     d0c:	0141                	addi	sp,sp,16$/;"	l
d0c	./user/usertests.asm	/^     d0c:	00005097          	auipc	ra,0x5$/;"	l
d0e	./user/grind.asm	/^     d0e:	7aa2                	ld	s5,40(sp)$/;"	l
d0e	./user/sh.asm	/^     d0e:	8082                	ret$/;"	l
d10	./user/grind.asm	/^     d10:	7b02                	ld	s6,32(sp)$/;"	l
d10	./user/sh.asm	/^     d10:	4501                	li	a0,0$/;"	l
d10	./user/usertests.asm	/^     d10:	9e4080e7          	jalr	-1564(ra) # 56f0 <printf>$/;"	l
d12	./user/grind.asm	/^     d12:	6be2                	ld	s7,24(sp)$/;"	l
d12	./user/sh.asm	/^     d12:	bfe5                	j	d0a <atoi+0x40>$/;"	l
d14	./user/grind.asm	/^     d14:	6125                	addi	sp,sp,96$/;"	l
d14	./user/sh.asm	/^     d14:	1141                	addi	sp,sp,-16$/;"	l
d14	./user/usertests.asm	/^     d14:	4505                	li	a0,1$/;"	l
d16	./user/grind.asm	/^     d16:	8082                	ret$/;"	l
d16	./user/sh.asm	/^     d16:	e422                	sd	s0,8(sp)$/;"	l
d16	./user/usertests.asm	/^     d16:	00004097          	auipc	ra,0x4$/;"	l
d18	./user/grind.asm	/^     d18:	1101                	addi	sp,sp,-32$/;"	l
d18	./user/sh.asm	/^     d18:	0800                	addi	s0,sp,16$/;"	l
d1a	./user/grind.asm	/^     d1a:	ec06                	sd	ra,24(sp)$/;"	l
d1a	./user/sh.asm	/^     d1a:	02b57663          	bgeu	a0,a1,d46 <memmove+0x32>$/;"	l
d1a	./user/usertests.asm	/^     d1a:	662080e7          	jalr	1634(ra) # 5378 <exit>$/;"	l
d1c	./user/grind.asm	/^     d1c:	e822                	sd	s0,16(sp)$/;"	l
d1e	./user/grind.asm	/^     d1e:	e426                	sd	s1,8(sp)$/;"	l
d1e	./user/sh.asm	/^     d1e:	02c05163          	blez	a2,d40 <memmove+0x2c>$/;"	l
d1e	./user/usertests.asm	/^     d1e:	1101                	addi	sp,sp,-32$/;"	l
d2	./user/cat.asm	/^  d2:	00000097          	auipc	ra,0x0$/;"	l
d2	./user/echo.asm	/^  d2:	00054783          	lbu	a5,0(a0)$/;"	l
d2	./user/grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	./user/grind.asm	/^      d2:	d90080e7          	jalr	-624(ra) # e5e <exit>$/;"	l
d2	./user/init.asm	/^  d2:	7f250513          	addi	a0,a0,2034 # 8c0 <malloc+0x11c>$/;"	l
d2	./user/kill.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	./user/ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	./user/mkdir.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	./user/pingpong.asm	/^  d2:	0141                	addi	sp,sp,16$/;"	l
d2	./user/prime.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	./user/primes.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	./user/rm.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	./user/sh.asm	/^      d2:	8782                	jr	a5$/;"	l
d2	./user/usertests.asm	/^      d2:	2ea080e7          	jalr	746(ra) # 53b8 <open>$/;"	l
d2	./user/wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d2	./user/zombie.asm	/^  d2:	0505                	addi	a0,a0,1$/;"	l
d20	./user/grind.asm	/^     d20:	e04a                	sd	s2,0(sp)$/;"	l
d20	./user/usertests.asm	/^     d20:	ec06                	sd	ra,24(sp)$/;"	l
d22	./user/grind.asm	/^     d22:	1000                	addi	s0,sp,32$/;"	l
d22	./user/sh.asm	/^     d22:	fff6079b          	addiw	a5,a2,-1$/;"	l
d22	./user/usertests.asm	/^     d22:	e822                	sd	s0,16(sp)$/;"	l
d24	./user/grind.asm	/^     d24:	892e                	mv	s2,a1$/;"	l
d24	./user/usertests.asm	/^     d24:	e426                	sd	s1,8(sp)$/;"	l
d26	./user/grind.asm	/^     d26:	4581                	li	a1,0$/;"	l
d26	./user/sh.asm	/^     d26:	1782                	slli	a5,a5,0x20$/;"	l
d26	./user/usertests.asm	/^     d26:	e04a                	sd	s2,0(sp)$/;"	l
d28	./user/grind.asm	/^     d28:	00000097          	auipc	ra,0x0$/;"	l
d28	./user/sh.asm	/^     d28:	9381                	srli	a5,a5,0x20$/;"	l
d28	./user/usertests.asm	/^     d28:	1000                	addi	s0,sp,32$/;"	l
d2a	./user/sh.asm	/^     d2a:	0785                	addi	a5,a5,1$/;"	l
d2a	./user/usertests.asm	/^     d2a:	892a                	mv	s2,a0$/;"	l
d2c	./user/grind.asm	/^     d2c:	176080e7          	jalr	374(ra) # e9e <open>$/;"	l
d2c	./user/sh.asm	/^     d2c:	97aa                	add	a5,a5,a0$/;"	l
d2c	./user/usertests.asm	/^     d2c:	00005517          	auipc	a0,0x5$/;"	l
d2e	./user/sh.asm	/^     d2e:	872a                	mv	a4,a0$/;"	l
d30	./user/grind.asm	/^     d30:	02054563          	bltz	a0,d5a <stat+0x42>$/;"	l
d30	./user/sh.asm	/^     d30:	0585                	addi	a1,a1,1$/;"	l
d30	./user/usertests.asm	/^     d30:	42c50513          	addi	a0,a0,1068 # 6158 <malloc+0x9aa>$/;"	l
d32	./user/sh.asm	/^     d32:	0705                	addi	a4,a4,1$/;"	l
d34	./user/grind.asm	/^     d34:	84aa                	mv	s1,a0$/;"	l
d34	./user/sh.asm	/^     d34:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d34	./user/usertests.asm	/^     d34:	00004097          	auipc	ra,0x4$/;"	l
d36	./user/grind.asm	/^     d36:	85ca                	mv	a1,s2$/;"	l
d38	./user/grind.asm	/^     d38:	00000097          	auipc	ra,0x0$/;"	l
d38	./user/sh.asm	/^     d38:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d38	./user/usertests.asm	/^     d38:	694080e7          	jalr	1684(ra) # 53c8 <unlink>$/;"	l
d3c	./user/grind.asm	/^     d3c:	17e080e7          	jalr	382(ra) # eb6 <fstat>$/;"	l
d3c	./user/sh.asm	/^     d3c:	fee79ae3          	bne	a5,a4,d30 <memmove+0x1c>$/;"	l
d3c	./user/usertests.asm	/^     d3c:	00005517          	auipc	a0,0x5$/;"	l
d4	./user/forktest.asm	/^  d4:	39850513          	addi	a0,a0,920 # 468 <uptime+0x3c>$/;"	l
d4	./user/grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	./user/kill.asm	/^  d4:	bfe5                	j	cc <strlen+0x20>$/;"	l
d4	./user/ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	./user/ls.asm	/^  d4:	1c80                	addi	s0,sp,624$/;"	l
d4	./user/mkdir.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	./user/pingpong.asm	/^  d4:	8082                	ret$/;"	l
d4	./user/prime.asm	/^  d4:	00000097          	auipc	ra,0x0$/;"	l
d4	./user/primes.asm	/^  d4:	00000097          	auipc	ra,0x0$/;"	l
d4	./user/rm.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	./user/sh.asm	/^      d4:	4505                	li	a0,1$/;"	l
d4	./user/sleep.asm	/^  d4:	0785                	addi	a5,a5,1$/;"	l
d4	./user/stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	./user/wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	./user/zombie.asm	/^  d4:	00054783          	lbu	a5,0(a0)$/;"	l
d40	./user/grind.asm	/^     d40:	892a                	mv	s2,a0$/;"	l
d40	./user/sh.asm	/^     d40:	6422                	ld	s0,8(sp)$/;"	l
d40	./user/usertests.asm	/^     d40:	42450513          	addi	a0,a0,1060 # 6160 <malloc+0x9b2>$/;"	l
d42	./user/grind.asm	/^     d42:	8526                	mv	a0,s1$/;"	l
d42	./user/sh.asm	/^     d42:	0141                	addi	sp,sp,16$/;"	l
d44	./user/grind.asm	/^     d44:	00000097          	auipc	ra,0x0$/;"	l
d44	./user/sh.asm	/^     d44:	8082                	ret$/;"	l
d44	./user/usertests.asm	/^     d44:	00004097          	auipc	ra,0x4$/;"	l
d46	./user/sh.asm	/^     d46:	00c50733          	add	a4,a0,a2$/;"	l
d48	./user/grind.asm	/^     d48:	142080e7          	jalr	322(ra) # e86 <close>$/;"	l
d48	./user/usertests.asm	/^     d48:	684080e7          	jalr	1668(ra) # 53c8 <unlink>$/;"	l
d4a	./user/sh.asm	/^     d4a:	95b2                	add	a1,a1,a2$/;"	l
d4c	./user/grind.asm	/^     d4c:	854a                	mv	a0,s2$/;"	l
d4c	./user/sh.asm	/^     d4c:	fec05ae3          	blez	a2,d40 <memmove+0x2c>$/;"	l
d4c	./user/usertests.asm	/^     d4c:	20200593          	li	a1,514$/;"	l
d4e	./user/grind.asm	/^     d4e:	60e2                	ld	ra,24(sp)$/;"	l
d50	./user/grind.asm	/^     d50:	6442                	ld	s0,16(sp)$/;"	l
d50	./user/sh.asm	/^     d50:	fff6079b          	addiw	a5,a2,-1$/;"	l
d50	./user/usertests.asm	/^     d50:	00005517          	auipc	a0,0x5$/;"	l
d52	./user/grind.asm	/^     d52:	64a2                	ld	s1,8(sp)$/;"	l
d54	./user/grind.asm	/^     d54:	6902                	ld	s2,0(sp)$/;"	l
d54	./user/sh.asm	/^     d54:	1782                	slli	a5,a5,0x20$/;"	l
d54	./user/usertests.asm	/^     d54:	40850513          	addi	a0,a0,1032 # 6158 <malloc+0x9aa>$/;"	l
d56	./user/grind.asm	/^     d56:	6105                	addi	sp,sp,32$/;"	l
d56	./user/sh.asm	/^     d56:	9381                	srli	a5,a5,0x20$/;"	l
d58	./user/grind.asm	/^     d58:	8082                	ret$/;"	l
d58	./user/sh.asm	/^     d58:	fff7c793          	not	a5,a5$/;"	l
d58	./user/usertests.asm	/^     d58:	00004097          	auipc	ra,0x4$/;"	l
d5a	./user/grind.asm	/^     d5a:	597d                	li	s2,-1$/;"	l
d5c	./user/grind.asm	/^     d5c:	bfc5                	j	d4c <stat+0x34>$/;"	l
d5c	./user/sh.asm	/^     d5c:	97ba                	add	a5,a5,a4$/;"	l
d5c	./user/usertests.asm	/^     d5c:	660080e7          	jalr	1632(ra) # 53b8 <open>$/;"	l
d5e	./user/grind.asm	/^     d5e:	1141                	addi	sp,sp,-16$/;"	l
d5e	./user/sh.asm	/^     d5e:	15fd                	addi	a1,a1,-1$/;"	l
d6	./user/cat.asm	/^  d6:	2ea080e7          	jalr	746(ra) # 3bc <close>$/;"	l
d6	./user/echo.asm	/^  d6:	cf91                	beqz	a5,f2 <strlen+0x26>$/;"	l
d6	./user/grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	./user/grind.asm	/^      d6:	00001517          	auipc	a0,0x1$/;"	l
d6	./user/init.asm	/^  d6:	00000097          	auipc	ra,0x0$/;"	l
d6	./user/kill.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	./user/ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	./user/ls.asm	/^  d6:	892a                	mv	s2,a0$/;"	l
d6	./user/pingpong.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	./user/sh.asm	/^      d6:	00001097          	auipc	ra,0x1$/;"	l
d6	./user/sleep.asm	/^  d6:	fee79de3          	bne	a5,a4,d0 <memset+0x16>$/;"	l
d6	./user/stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	./user/usertests.asm	/^      d6:	02055563          	bgez	a0,100 <opentest+0x66>$/;"	l
d6	./user/wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d60	./user/grind.asm	/^     d60:	e422                	sd	s0,8(sp)$/;"	l
d60	./user/sh.asm	/^     d60:	177d                	addi	a4,a4,-1$/;"	l
d60	./user/usertests.asm	/^     d60:	10054763          	bltz	a0,e6e <linktest+0x150>$/;"	l
d62	./user/grind.asm	/^     d62:	0800                	addi	s0,sp,16$/;"	l
d62	./user/sh.asm	/^     d62:	0005c683          	lbu	a3,0(a1)$/;"	l
d64	./user/grind.asm	/^     d64:	00054603          	lbu	a2,0(a0)$/;"	l
d64	./user/usertests.asm	/^     d64:	84aa                	mv	s1,a0$/;"	l
d66	./user/sh.asm	/^     d66:	00d70023          	sb	a3,0(a4)$/;"	l
d66	./user/usertests.asm	/^     d66:	4615                	li	a2,5$/;"	l
d68	./user/grind.asm	/^     d68:	fd06079b          	addiw	a5,a2,-48$/;"	l
d68	./user/usertests.asm	/^     d68:	00005597          	auipc	a1,0x5$/;"	l
d6a	./user/sh.asm	/^     d6a:	fee79ae3          	bne	a5,a4,d5e <memmove+0x4a>$/;"	l
d6c	./user/grind.asm	/^     d6c:	0ff7f793          	andi	a5,a5,255$/;"	l
d6c	./user/usertests.asm	/^     d6c:	34058593          	addi	a1,a1,832 # 60a8 <malloc+0x8fa>$/;"	l
d6e	./user/sh.asm	/^     d6e:	bfc9                	j	d40 <memmove+0x2c>$/;"	l
d70	./user/grind.asm	/^     d70:	4725                	li	a4,9$/;"	l
d70	./user/sh.asm	/^     d70:	1141                	addi	sp,sp,-16$/;"	l
d70	./user/usertests.asm	/^     d70:	00004097          	auipc	ra,0x4$/;"	l
d72	./user/grind.asm	/^     d72:	02f76963          	bltu	a4,a5,da4 <atoi+0x46>$/;"	l
d72	./user/sh.asm	/^     d72:	e422                	sd	s0,8(sp)$/;"	l
d74	./user/sh.asm	/^     d74:	0800                	addi	s0,sp,16$/;"	l
d74	./user/usertests.asm	/^     d74:	628080e7          	jalr	1576(ra) # 5398 <write>$/;"	l
d76	./user/grind.asm	/^     d76:	86aa                	mv	a3,a0$/;"	l
d76	./user/sh.asm	/^     d76:	ca05                	beqz	a2,da6 <memcmp+0x36>$/;"	l
d78	./user/grind.asm	/^     d78:	4501                	li	a0,0$/;"	l
d78	./user/sh.asm	/^     d78:	fff6069b          	addiw	a3,a2,-1$/;"	l
d78	./user/usertests.asm	/^     d78:	4795                	li	a5,5$/;"	l
d7a	./user/grind.asm	/^     d7a:	45a5                	li	a1,9$/;"	l
d7a	./user/usertests.asm	/^     d7a:	10f51863          	bne	a0,a5,e8a <linktest+0x16c>$/;"	l
d7c	./user/grind.asm	/^     d7c:	0685                	addi	a3,a3,1$/;"	l
d7c	./user/sh.asm	/^     d7c:	1682                	slli	a3,a3,0x20$/;"	l
d7e	./user/grind.asm	/^     d7e:	0025179b          	slliw	a5,a0,0x2$/;"	l
d7e	./user/sh.asm	/^     d7e:	9281                	srli	a3,a3,0x20$/;"	l
d7e	./user/usertests.asm	/^     d7e:	8526                	mv	a0,s1$/;"	l
d8	./user/echo.asm	/^  d8:	0505                	addi	a0,a0,1$/;"	l
d8	./user/forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	./user/grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	./user/kill.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	./user/ln.asm	/^  d8:	ce09                	beqz	a2,f2 <memset+0x20>$/;"	l
d8	./user/ls.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	./user/mkdir.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	./user/pingpong.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	./user/prime.asm	/^  d8:	37a080e7          	jalr	890(ra) # 44e <read>$/;"	l
d8	./user/primes.asm	/^  d8:	38e080e7          	jalr	910(ra) # 462 <read>$/;"	l
d8	./user/rm.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	./user/stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	./user/wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d8	./user/zombie.asm	/^  d8:	fbfd                	bnez	a5,ce <strchr+0xc>$/;"	l
d80	./user/sh.asm	/^     d80:	0685                	addi	a3,a3,1$/;"	l
d80	./user/usertests.asm	/^     d80:	00004097          	auipc	ra,0x4$/;"	l
d82	./user/grind.asm	/^     d82:	9fa9                	addw	a5,a5,a0$/;"	l
d82	./user/sh.asm	/^     d82:	96aa                	add	a3,a3,a0$/;"	l
d84	./user/grind.asm	/^     d84:	0017979b          	slliw	a5,a5,0x1$/;"	l
d84	./user/sh.asm	/^     d84:	00054783          	lbu	a5,0(a0)$/;"	l
d84	./user/usertests.asm	/^     d84:	620080e7          	jalr	1568(ra) # 53a0 <close>$/;"	l
d88	./user/grind.asm	/^     d88:	9fb1                	addw	a5,a5,a2$/;"	l
d88	./user/sh.asm	/^     d88:	0005c703          	lbu	a4,0(a1)$/;"	l
d88	./user/usertests.asm	/^     d88:	00005597          	auipc	a1,0x5$/;"	l
d8a	./user/grind.asm	/^     d8a:	fd07851b          	addiw	a0,a5,-48$/;"	l
d8c	./user/sh.asm	/^     d8c:	00e79863          	bne	a5,a4,d9c <memcmp+0x2c>$/;"	l
d8c	./user/usertests.asm	/^     d8c:	3d858593          	addi	a1,a1,984 # 6160 <malloc+0x9b2>$/;"	l
d8e	./user/grind.asm	/^     d8e:	0006c603          	lbu	a2,0(a3)$/;"	l
d90	./user/sh.asm	/^     d90:	0505                	addi	a0,a0,1$/;"	l
d90	./user/usertests.asm	/^     d90:	00005517          	auipc	a0,0x5$/;"	l
d92	./user/grind.asm	/^     d92:	fd06071b          	addiw	a4,a2,-48$/;"	l
d92	./user/sh.asm	/^     d92:	0585                	addi	a1,a1,1$/;"	l
d94	./user/sh.asm	/^     d94:	fed518e3          	bne	a0,a3,d84 <memcmp+0x14>$/;"	l
d94	./user/usertests.asm	/^     d94:	3c850513          	addi	a0,a0,968 # 6158 <malloc+0x9aa>$/;"	l
d96	./user/grind.asm	/^     d96:	0ff77713          	andi	a4,a4,255$/;"	l
d98	./user/sh.asm	/^     d98:	4501                	li	a0,0$/;"	l
d98	./user/usertests.asm	/^     d98:	00004097          	auipc	ra,0x4$/;"	l
d9a	./user/grind.asm	/^     d9a:	fee5f1e3          	bgeu	a1,a4,d7c <atoi+0x1e>$/;"	l
d9a	./user/sh.asm	/^     d9a:	a019                	j	da0 <memcmp+0x30>$/;"	l
d9c	./user/sh.asm	/^     d9c:	40e7853b          	subw	a0,a5,a4$/;"	l
d9c	./user/usertests.asm	/^     d9c:	640080e7          	jalr	1600(ra) # 53d8 <link>$/;"	l
d9e	./user/grind.asm	/^     d9e:	6422                	ld	s0,8(sp)$/;"	l
da	./user/cat.asm	/^  da:	0921                	addi	s2,s2,8$/;"	l
da	./user/echo.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	./user/grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	./user/grind.asm	/^      da:	2c250513          	addi	a0,a0,706 # 1398 <malloc+0x104>$/;"	l
da	./user/init.asm	/^  da:	2d0080e7          	jalr	720(ra) # 3a6 <exec>$/;"	l
da	./user/kill.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	./user/ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	./user/ls.asm	/^  da:	00000097          	auipc	ra,0x0$/;"	l
da	./user/mkdir.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	./user/pingpong.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	./user/rm.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	./user/sh.asm	/^      da:	cf4080e7          	jalr	-780(ra) # dca <exit>$/;"	l
da	./user/sleep.asm	/^  da:	6422                	ld	s0,8(sp)$/;"	l
da	./user/usertests.asm	/^      da:	60e2                	ld	ra,24(sp)$/;"	l
da	./user/wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	./user/zombie.asm	/^  da:	4501                	li	a0,0$/;"	l
da0	./user/grind.asm	/^     da0:	0141                	addi	sp,sp,16$/;"	l
da0	./user/sh.asm	/^     da0:	6422                	ld	s0,8(sp)$/;"	l
da0	./user/usertests.asm	/^     da0:	10054363          	bltz	a0,ea6 <linktest+0x188>$/;"	l
da2	./user/grind.asm	/^     da2:	8082                	ret$/;"	l
da2	./user/sh.asm	/^     da2:	0141                	addi	sp,sp,16$/;"	l
da4	./user/grind.asm	/^     da4:	4501                	li	a0,0$/;"	l
da4	./user/sh.asm	/^     da4:	8082                	ret$/;"	l
da4	./user/usertests.asm	/^     da4:	00005517          	auipc	a0,0x5$/;"	l
da6	./user/grind.asm	/^     da6:	bfe5                	j	d9e <atoi+0x40>$/;"	l
da6	./user/sh.asm	/^     da6:	4501                	li	a0,0$/;"	l
da8	./user/grind.asm	/^     da8:	1141                	addi	sp,sp,-16$/;"	l
da8	./user/sh.asm	/^     da8:	bfe5                	j	da0 <memcmp+0x30>$/;"	l
da8	./user/usertests.asm	/^     da8:	3b450513          	addi	a0,a0,948 # 6158 <malloc+0x9aa>$/;"	l
daa	./user/grind.asm	/^     daa:	e422                	sd	s0,8(sp)$/;"	l
daa	./user/sh.asm	/^     daa:	1141                	addi	sp,sp,-16$/;"	l
dac	./user/grind.asm	/^     dac:	0800                	addi	s0,sp,16$/;"	l
dac	./user/sh.asm	/^     dac:	e406                	sd	ra,8(sp)$/;"	l
dac	./user/usertests.asm	/^     dac:	00004097          	auipc	ra,0x4$/;"	l
dae	./user/grind.asm	/^     dae:	02b57663          	bgeu	a0,a1,dda <memmove+0x32>$/;"	l
dae	./user/sh.asm	/^     dae:	e022                	sd	s0,0(sp)$/;"	l
data	./kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	./kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	./kernel/date.h	/^  uint day;$/;"	m	struct:rtcdate
db0	./user/sh.asm	/^     db0:	0800                	addi	s0,sp,16$/;"	l
db0	./user/usertests.asm	/^     db0:	61c080e7          	jalr	1564(ra) # 53c8 <unlink>$/;"	l
db2	./user/grind.asm	/^     db2:	02c05163          	blez	a2,dd4 <memmove+0x2c>$/;"	l
db2	./user/sh.asm	/^     db2:	00000097          	auipc	ra,0x0$/;"	l
db4	./user/usertests.asm	/^     db4:	4581                	li	a1,0$/;"	l
db6	./user/grind.asm	/^     db6:	fff6079b          	addiw	a5,a2,-1$/;"	l
db6	./user/sh.asm	/^     db6:	f62080e7          	jalr	-158(ra) # d14 <memmove>$/;"	l
db6	./user/usertests.asm	/^     db6:	00005517          	auipc	a0,0x5$/;"	l
dba	./user/grind.asm	/^     dba:	1782                	slli	a5,a5,0x20$/;"	l
dba	./user/sh.asm	/^     dba:	60a2                	ld	ra,8(sp)$/;"	l
dba	./user/usertests.asm	/^     dba:	3a250513          	addi	a0,a0,930 # 6158 <malloc+0x9aa>$/;"	l
dbc	./user/grind.asm	/^     dbc:	9381                	srli	a5,a5,0x20$/;"	l
dbc	./user/sh.asm	/^     dbc:	6402                	ld	s0,0(sp)$/;"	l
dbe	./user/grind.asm	/^     dbe:	0785                	addi	a5,a5,1$/;"	l
dbe	./user/sh.asm	/^     dbe:	0141                	addi	sp,sp,16$/;"	l
dbe	./user/usertests.asm	/^     dbe:	00004097          	auipc	ra,0x4$/;"	l
dc	./user/cat.asm	/^  dc:	fd391ce3          	bne	s2,s3,b4 <main+0x2a>$/;"	l
dc	./user/echo.asm	/^  dc:	4685                	li	a3,1$/;"	l
dc	./user/forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	./user/grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	./user/kill.asm	/^  dc:	ce09                	beqz	a2,f6 <memset+0x20>$/;"	l
dc	./user/ln.asm	/^  dc:	fff6071b          	addiw	a4,a2,-1$/;"	l
dc	./user/pingpong.asm	/^  dc:	00054783          	lbu	a5,0(a0)$/;"	l
dc	./user/prime.asm	/^  dc:	02a05263          	blez	a0,100 <prime+0xd6>$/;"	l
dc	./user/primes.asm	/^  dc:	02a05263          	blez	a0,100 <prime+0xd6>$/;"	l
dc	./user/sleep.asm	/^  dc:	0141                	addi	sp,sp,16$/;"	l
dc	./user/stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	./user/usertests.asm	/^      dc:	6442                	ld	s0,16(sp)$/;"	l
dc	./user/wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	./user/zombie.asm	/^  dc:	6422                	ld	s0,8(sp)$/;"	l
dc0	./user/grind.asm	/^     dc0:	97aa                	add	a5,a5,a0$/;"	l
dc0	./user/sh.asm	/^     dc0:	8082                	ret$/;"	l
dc2	./user/grind.asm	/^     dc2:	872a                	mv	a4,a0$/;"	l
dc2	./user/sh.asm	/^     dc2:	4885                	li	a7,1$/;"	l
dc2	./user/usertests.asm	/^     dc2:	5fa080e7          	jalr	1530(ra) # 53b8 <open>$/;"	l
dc4	./user/grind.asm	/^     dc4:	0585                	addi	a1,a1,1$/;"	l
dc4	./user/sh.asm	/^     dc4:	00000073          	ecall$/;"	l
dc6	./user/grind.asm	/^     dc6:	0705                	addi	a4,a4,1$/;"	l
dc6	./user/usertests.asm	/^     dc6:	0e055e63          	bgez	a0,ec2 <linktest+0x1a4>$/;"	l
dc8	./user/grind.asm	/^     dc8:	fff5c683          	lbu	a3,-1(a1)$/;"	l
dc8	./user/sh.asm	/^     dc8:	8082                	ret$/;"	l
dca	./user/sh.asm	/^     dca:	4889                	li	a7,2$/;"	l
dca	./user/usertests.asm	/^     dca:	4581                	li	a1,0$/;"	l
dcc	./user/grind.asm	/^     dcc:	fed70fa3          	sb	a3,-1(a4)$/;"	l
dcc	./user/sh.asm	/^     dcc:	00000073          	ecall$/;"	l
dcc	./user/usertests.asm	/^     dcc:	00005517          	auipc	a0,0x5$/;"	l
dd0	./user/grind.asm	/^     dd0:	fee79ae3          	bne	a5,a4,dc4 <memmove+0x1c>$/;"	l
dd0	./user/sh.asm	/^     dd0:	8082                	ret$/;"	l
dd0	./user/usertests.asm	/^     dd0:	39450513          	addi	a0,a0,916 # 6160 <malloc+0x9b2>$/;"	l
dd2	./user/sh.asm	/^     dd2:	488d                	li	a7,3$/;"	l
dd4	./user/grind.asm	/^     dd4:	6422                	ld	s0,8(sp)$/;"	l
dd4	./user/sh.asm	/^     dd4:	00000073          	ecall$/;"	l
dd4	./user/usertests.asm	/^     dd4:	00004097          	auipc	ra,0x4$/;"	l
dd6	./user/grind.asm	/^     dd6:	0141                	addi	sp,sp,16$/;"	l
dd8	./user/grind.asm	/^     dd8:	8082                	ret$/;"	l
dd8	./user/sh.asm	/^     dd8:	8082                	ret$/;"	l
dd8	./user/usertests.asm	/^     dd8:	5e4080e7          	jalr	1508(ra) # 53b8 <open>$/;"	l
dda	./user/grind.asm	/^     dda:	00c50733          	add	a4,a0,a2$/;"	l
dda	./user/sh.asm	/^     dda:	4891                	li	a7,4$/;"	l
ddc	./user/sh.asm	/^     ddc:	00000073          	ecall$/;"	l
ddc	./user/usertests.asm	/^     ddc:	84aa                	mv	s1,a0$/;"	l
dde	./user/grind.asm	/^     dde:	95b2                	add	a1,a1,a2$/;"	l
dde	./user/usertests.asm	/^     dde:	10054063          	bltz	a0,ede <linktest+0x1c0>$/;"	l
de	./user/echo.asm	/^  de:	9e89                	subw	a3,a3,a0$/;"	l
de	./user/grind.asm	/^      de:	00001097          	auipc	ra,0x1$/;"	l
de	./user/init.asm	/^  de:	00000517          	auipc	a0,0x0$/;"	l
de	./user/kill.asm	/^  de:	87aa                	mv	a5,a0$/;"	l
de	./user/ls.asm	/^  de:	4b0080e7          	jalr	1200(ra) # 58a <open>$/;"	l
de	./user/mkdir.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	./user/rm.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	./user/sh.asm	/^      de:	00001517          	auipc	a0,0x1$/;"	l
de	./user/sleep.asm	/^  de:	8082                	ret$/;"	l
de	./user/usertests.asm	/^      de:	64a2                	ld	s1,8(sp)$/;"	l
de	./user/wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de	./user/zombie.asm	/^  de:	0141                	addi	sp,sp,16$/;"	l
de0	./user/grind.asm	/^     de0:	fec05ae3          	blez	a2,dd4 <memmove+0x2c>$/;"	l
de0	./user/sh.asm	/^     de0:	8082                	ret$/;"	l
de2	./user/sh.asm	/^     de2:	4895                	li	a7,5$/;"	l
de2	./user/usertests.asm	/^     de2:	660d                	lui	a2,0x3$/;"	l
de4	./user/grind.asm	/^     de4:	fff6079b          	addiw	a5,a2,-1$/;"	l
de4	./user/sh.asm	/^     de4:	00000073          	ecall$/;"	l
de4	./user/usertests.asm	/^     de4:	0000b597          	auipc	a1,0xb$/;"	l
de8	./user/grind.asm	/^     de8:	1782                	slli	a5,a5,0x20$/;"	l
de8	./user/sh.asm	/^     de8:	8082                	ret$/;"	l
de8	./user/usertests.asm	/^     de8:	95458593          	addi	a1,a1,-1708 # b738 <buf>$/;"	l
dea	./user/grind.asm	/^     dea:	9381                	srli	a5,a5,0x20$/;"	l
dea	./user/sh.asm	/^     dea:	48c1                	li	a7,16$/;"	l
dec	./user/grind.asm	/^     dec:	fff7c793          	not	a5,a5$/;"	l
dec	./user/sh.asm	/^     dec:	00000073          	ecall$/;"	l
dec	./user/usertests.asm	/^     dec:	00004097          	auipc	ra,0x4$/;"	l
desc	./kernel/virtio_disk.c	/^  struct VRingDesc *desc;$/;"	m	struct:disk	typeref:struct:disk::VRingDesc	file:
dev	./kernel/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	./kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	./kernel/log.c	/^  int dev;$/;"	m	struct:log	file:
dev	./kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devintr	./kernel/trap.c	/^devintr()$/;"	f
devsw	./kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	./kernel/file.h	/^struct devsw {$/;"	s
df0	./user/grind.asm	/^     df0:	97ba                	add	a5,a5,a4$/;"	l
df0	./user/sh.asm	/^     df0:	8082                	ret$/;"	l
df0	./user/usertests.asm	/^     df0:	5a4080e7          	jalr	1444(ra) # 5390 <read>$/;"	l
df2	./user/grind.asm	/^     df2:	15fd                	addi	a1,a1,-1$/;"	l
df2	./user/sh.asm	/^     df2:	48d5                	li	a7,21$/;"	l
df4	./user/grind.asm	/^     df4:	177d                	addi	a4,a4,-1$/;"	l
df4	./user/sh.asm	/^     df4:	00000073          	ecall$/;"	l
df4	./user/usertests.asm	/^     df4:	4795                	li	a5,5$/;"	l
df6	./user/grind.asm	/^     df6:	0005c683          	lbu	a3,0(a1)$/;"	l
df6	./user/usertests.asm	/^     df6:	10f51263          	bne	a0,a5,efa <linktest+0x1dc>$/;"	l
df8	./user/sh.asm	/^     df8:	8082                	ret$/;"	l
dfa	./user/grind.asm	/^     dfa:	00d70023          	sb	a3,0(a4)$/;"	l
dfa	./user/sh.asm	/^     dfa:	4899                	li	a7,6$/;"	l
dfa	./user/usertests.asm	/^     dfa:	8526                	mv	a0,s1$/;"	l
dfc	./user/sh.asm	/^     dfc:	00000073          	ecall$/;"	l
dfc	./user/usertests.asm	/^     dfc:	00004097          	auipc	ra,0x4$/;"	l
dfe	./user/grind.asm	/^     dfe:	fee79ae3          	bne	a5,a4,df2 <memmove+0x4a>$/;"	l
digits	./kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
digits	./user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dinode	./kernel/fs.h	/^struct dinode {$/;"	s
dip	./kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	./kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	./kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	./kernel/fs.h	/^struct dirent {$/;"	s
dirfile	./user/usertests.c	/^dirfile(char *s)$/;"	f
dirlink	./kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	./kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	./user/usertests.c	/^void dirtest(char *s)$/;"	f
disk	./kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf
disk	./kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	./kernel/virtio_disk.c	/^} __attribute__ ((aligned (PGSIZE))) disk;$/;"	v	typeref:struct:disk	file:
do_commit	./kernel/kernel.asm	/^    do_commit = 1;$/;"	d
do_rand	./user/grind.c	/^do_rand(unsigned long *ctx)$/;"	f
dst	./user/cat.asm	/^  dst = vdst;$/;"	d
dst	./user/echo.asm	/^  dst = vdst;$/;"	d
dst	./user/forktest.asm	/^  dst = vdst;$/;"	d
dst	./user/grep.asm	/^  dst = vdst;$/;"	d
dst	./user/grind.asm	/^  dst = vdst;$/;"	d
dst	./user/init.asm	/^  dst = vdst;$/;"	d
dst	./user/kill.asm	/^  dst = vdst;$/;"	d
dst	./user/ln.asm	/^  dst = vdst;$/;"	d
dst	./user/ls.asm	/^  dst = vdst;$/;"	d
dst	./user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	./user/pingpong.asm	/^  dst = vdst;$/;"	d
dst	./user/prime.asm	/^  dst = vdst;$/;"	d
dst	./user/primes.asm	/^  dst = vdst;$/;"	d
dst	./user/rm.asm	/^  dst = vdst;$/;"	d
dst	./user/sh.asm	/^  dst = vdst;$/;"	d
dst	./user/sleep.asm	/^  dst = vdst;$/;"	d
dst	./user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	./user/usertests.asm	/^  dst = vdst;$/;"	d
dst	./user/wc.asm	/^  dst = vdst;$/;"	d
dst	./user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	./kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	./user/cat.asm	/^dup:$/;"	l
dup	./user/echo.asm	/^dup:$/;"	l
dup	./user/forktest.asm	/^dup:$/;"	l
dup	./user/grep.asm	/^dup:$/;"	l
dup	./user/grind.asm	/^dup:$/;"	l
dup	./user/init.asm	/^dup:$/;"	l
dup	./user/kill.asm	/^dup:$/;"	l
dup	./user/ln.asm	/^dup:$/;"	l
dup	./user/ls.asm	/^dup:$/;"	l
dup	./user/mkdir.asm	/^dup:$/;"	l
dup	./user/pingpong.asm	/^dup:$/;"	l
dup	./user/prime.asm	/^dup:$/;"	l
dup	./user/primes.asm	/^dup:$/;"	l
dup	./user/rm.asm	/^dup:$/;"	l
dup	./user/sh.asm	/^dup:$/;"	l
dup	./user/sleep.asm	/^dup:$/;"	l
dup	./user/stressfs.asm	/^dup:$/;"	l
dup	./user/usertests.asm	/^dup:$/;"	l
dup	./user/usys.S	/^dup:$/;"	l
dup	./user/wc.asm	/^dup:$/;"	l
dup	./user/zombie.asm	/^dup:$/;"	l
e	./kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon2	file:
e	./user/cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	./user/echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	./user/grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	./user/init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	./user/kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	./user/ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	./user/mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	./user/prime.asm	/^   e:	00000097          	auipc	ra,0x0$/;"	l
e	./user/primes.asm	/^   e:	00000097          	auipc	ra,0x0$/;"	l
e	./user/rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	./user/sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	./user/sleep.asm	/^   e:	6588                	ld	a0,8(a1)$/;"	l
e	./user/usertests.asm	/^       e:	057e                	slli	a0,a0,0x1f$/;"	l
e	./user/wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	./user/cat.asm	/^  e0:	4501                	li	a0,0$/;"	l
e0	./user/echo.asm	/^  e0:	00f6853b          	addw	a0,a3,a5$/;"	l
e0	./user/forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	./user/grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	./user/kill.asm	/^  e0:	fff6071b          	addiw	a4,a2,-1$/;"	l
e0	./user/ln.asm	/^  e0:	1702                	slli	a4,a4,0x20$/;"	l
e0	./user/mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	./user/pingpong.asm	/^  e0:	cb91                	beqz	a5,f4 <strcmp+0x1e>$/;"	l
e0	./user/prime.asm	/^  e0:	fe842783          	lw	a5,-24(s0)$/;"	l
e0	./user/primes.asm	/^  e0:	fe842783          	lw	a5,-24(s0)$/;"	l
e0	./user/rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	./user/sleep.asm	/^  e0:	1141                	addi	sp,sp,-16$/;"	l
e0	./user/stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	./user/usertests.asm	/^      e0:	6105                	addi	sp,sp,32$/;"	l
e0	./user/wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	./user/zombie.asm	/^  e0:	8082                	ret$/;"	l
e00	./user/sh.asm	/^     e00:	8082                	ret$/;"	l
e00	./user/usertests.asm	/^     e00:	5a4080e7          	jalr	1444(ra) # 53a0 <close>$/;"	l
e02	./user/grind.asm	/^     e02:	bfc9                	j	dd4 <memmove+0x2c>$/;"	l
e02	./user/sh.asm	/^     e02:	489d                	li	a7,7$/;"	l
e04	./user/grind.asm	/^     e04:	1141                	addi	sp,sp,-16$/;"	l
e04	./user/sh.asm	/^     e04:	00000073          	ecall$/;"	l
e04	./user/usertests.asm	/^     e04:	00005597          	auipc	a1,0x5$/;"	l
e06	./user/grind.asm	/^     e06:	e422                	sd	s0,8(sp)$/;"	l
e08	./user/grind.asm	/^     e08:	0800                	addi	s0,sp,16$/;"	l
e08	./user/sh.asm	/^     e08:	8082                	ret$/;"	l
e08	./user/usertests.asm	/^     e08:	35c58593          	addi	a1,a1,860 # 6160 <malloc+0x9b2>$/;"	l
e0a	./user/grind.asm	/^     e0a:	ca05                	beqz	a2,e3a <memcmp+0x36>$/;"	l
e0a	./user/sh.asm	/^     e0a:	48bd                	li	a7,15$/;"	l
e0c	./user/grind.asm	/^     e0c:	fff6069b          	addiw	a3,a2,-1$/;"	l
e0c	./user/sh.asm	/^     e0c:	00000073          	ecall$/;"	l
e0c	./user/usertests.asm	/^     e0c:	852e                	mv	a0,a1$/;"	l
e0e	./user/usertests.asm	/^     e0e:	00004097          	auipc	ra,0x4$/;"	l
e10	./user/grind.asm	/^     e10:	1682                	slli	a3,a3,0x20$/;"	l
e10	./user/sh.asm	/^     e10:	8082                	ret$/;"	l
e12	./user/grind.asm	/^     e12:	9281                	srli	a3,a3,0x20$/;"	l
e12	./user/sh.asm	/^     e12:	48c5                	li	a7,17$/;"	l
e12	./user/usertests.asm	/^     e12:	5ca080e7          	jalr	1482(ra) # 53d8 <link>$/;"	l
e14	./user/grind.asm	/^     e14:	0685                	addi	a3,a3,1$/;"	l
e14	./user/sh.asm	/^     e14:	00000073          	ecall$/;"	l
e16	./user/grind.asm	/^     e16:	96aa                	add	a3,a3,a0$/;"	l
e16	./user/usertests.asm	/^     e16:	10055063          	bgez	a0,f16 <linktest+0x1f8>$/;"	l
e18	./user/grind.asm	/^     e18:	00054783          	lbu	a5,0(a0)$/;"	l
e18	./user/sh.asm	/^     e18:	8082                	ret$/;"	l
e1a	./user/sh.asm	/^     e1a:	48c9                	li	a7,18$/;"	l
e1a	./user/usertests.asm	/^     e1a:	00005517          	auipc	a0,0x5$/;"	l
e1c	./user/grind.asm	/^     e1c:	0005c703          	lbu	a4,0(a1)$/;"	l
e1c	./user/sh.asm	/^     e1c:	00000073          	ecall$/;"	l
e1e	./user/usertests.asm	/^     e1e:	34650513          	addi	a0,a0,838 # 6160 <malloc+0x9b2>$/;"	l
e2	./user/cat.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	./user/forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	./user/grind.asm	/^      e2:	df0080e7          	jalr	-528(ra) # ece <chdir>$/;"	l
e2	./user/init.asm	/^  e2:	7ea50513          	addi	a0,a0,2026 # 8c8 <malloc+0x124>$/;"	l
e2	./user/ln.asm	/^  e2:	9301                	srli	a4,a4,0x20$/;"	l
e2	./user/ls.asm	/^  e2:	06054f63          	bltz	a0,160 <ls+0xac>$/;"	l
e2	./user/mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	./user/pingpong.asm	/^  e2:	0005c703          	lbu	a4,0(a1)$/;"	l
e2	./user/rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	./user/sh.asm	/^      e2:	22250513          	addi	a0,a0,546 # 1300 <malloc+0x100>$/;"	l
e2	./user/sleep.asm	/^  e2:	e422                	sd	s0,8(sp)$/;"	l
e2	./user/stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	./user/usertests.asm	/^      e2:	8082                	ret$/;"	l
e2	./user/wc.asm	/^  e2:	8082                	ret$/;"	l
e2	./user/zombie.asm	/^  e2:	4501                	li	a0,0$/;"	l
e20	./user/grind.asm	/^     e20:	00e79863          	bne	a5,a4,e30 <memcmp+0x2c>$/;"	l
e20	./user/sh.asm	/^     e20:	8082                	ret$/;"	l
e22	./user/sh.asm	/^     e22:	48a1                	li	a7,8$/;"	l
e22	./user/usertests.asm	/^     e22:	00004097          	auipc	ra,0x4$/;"	l
e24	./user/grind.asm	/^     e24:	0505                	addi	a0,a0,1$/;"	l
e24	./user/sh.asm	/^     e24:	00000073          	ecall$/;"	l
e26	./user/grind.asm	/^     e26:	0585                	addi	a1,a1,1$/;"	l
e26	./user/usertests.asm	/^     e26:	5a6080e7          	jalr	1446(ra) # 53c8 <unlink>$/;"	l
e28	./user/grind.asm	/^     e28:	fed518e3          	bne	a0,a3,e18 <memcmp+0x14>$/;"	l
e28	./user/sh.asm	/^     e28:	8082                	ret$/;"	l
e2a	./user/sh.asm	/^     e2a:	48cd                	li	a7,19$/;"	l
e2a	./user/usertests.asm	/^     e2a:	00005597          	auipc	a1,0x5$/;"	l
e2c	./user/grind.asm	/^     e2c:	4501                	li	a0,0$/;"	l
e2c	./user/sh.asm	/^     e2c:	00000073          	ecall$/;"	l
e2e	./user/grind.asm	/^     e2e:	a019                	j	e34 <memcmp+0x30>$/;"	l
e2e	./user/usertests.asm	/^     e2e:	32e58593          	addi	a1,a1,814 # 6158 <malloc+0x9aa>$/;"	l
e30	./user/grind.asm	/^     e30:	40e7853b          	subw	a0,a5,a4$/;"	l
e30	./user/sh.asm	/^     e30:	8082                	ret$/;"	l
e32	./user/sh.asm	/^     e32:	48d1                	li	a7,20$/;"	l
e32	./user/usertests.asm	/^     e32:	00005517          	auipc	a0,0x5$/;"	l
e34	./user/grind.asm	/^     e34:	6422                	ld	s0,8(sp)$/;"	l
e34	./user/sh.asm	/^     e34:	00000073          	ecall$/;"	l
e36	./user/grind.asm	/^     e36:	0141                	addi	sp,sp,16$/;"	l
e36	./user/usertests.asm	/^     e36:	32e50513          	addi	a0,a0,814 # 6160 <malloc+0x9b2>$/;"	l
e38	./user/grind.asm	/^     e38:	8082                	ret$/;"	l
e38	./user/sh.asm	/^     e38:	8082                	ret$/;"	l
e3a	./user/grind.asm	/^     e3a:	4501                	li	a0,0$/;"	l
e3a	./user/sh.asm	/^     e3a:	48a5                	li	a7,9$/;"	l
e3a	./user/usertests.asm	/^     e3a:	00004097          	auipc	ra,0x4$/;"	l
e3c	./user/grind.asm	/^     e3c:	bfe5                	j	e34 <memcmp+0x30>$/;"	l
e3c	./user/sh.asm	/^     e3c:	00000073          	ecall$/;"	l
e3e	./user/grind.asm	/^     e3e:	1141                	addi	sp,sp,-16$/;"	l
e3e	./user/usertests.asm	/^     e3e:	59e080e7          	jalr	1438(ra) # 53d8 <link>$/;"	l
e4	./user/echo.asm	/^  e4:	0785                	addi	a5,a5,1$/;"	l
e4	./user/grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	./user/kill.asm	/^  e4:	1702                	slli	a4,a4,0x20$/;"	l
e4	./user/ln.asm	/^  e4:	0705                	addi	a4,a4,1$/;"	l
e4	./user/mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	./user/prime.asm	/^  e4:	fec42703          	lw	a4,-20(s0)$/;"	l
e4	./user/primes.asm	/^  e4:	fec42703          	lw	a4,-20(s0)$/;"	l
e4	./user/rm.asm	/^  e4:	8082                	ret$/;"	l
e4	./user/sleep.asm	/^  e4:	0800                	addi	s0,sp,16$/;"	l
e4	./user/usertests.asm	/^      e4:	85a6                	mv	a1,s1$/;"	l
e4	./user/wc.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	./user/zombie.asm	/^  e4:	bfe5                	j	dc <strchr+0x1a>$/;"	l
e40	./user/grind.asm	/^     e40:	e406                	sd	ra,8(sp)$/;"	l
e40	./user/sh.asm	/^     e40:	8082                	ret$/;"	l
e42	./user/grind.asm	/^     e42:	e022                	sd	s0,0(sp)$/;"	l
e42	./user/sh.asm	/^     e42:	48a9                	li	a7,10$/;"	l
e42	./user/usertests.asm	/^     e42:	0e055863          	bgez	a0,f32 <linktest+0x214>$/;"	l
e44	./user/grind.asm	/^     e44:	0800                	addi	s0,sp,16$/;"	l
e44	./user/sh.asm	/^     e44:	00000073          	ecall$/;"	l
e46	./user/grind.asm	/^     e46:	00000097          	auipc	ra,0x0$/;"	l
e46	./user/usertests.asm	/^     e46:	00005597          	auipc	a1,0x5$/;"	l
e48	./user/sh.asm	/^     e48:	8082                	ret$/;"	l
e4a	./user/grind.asm	/^     e4a:	f62080e7          	jalr	-158(ra) # da8 <memmove>$/;"	l
e4a	./user/sh.asm	/^     e4a:	48ad                	li	a7,11$/;"	l
e4a	./user/usertests.asm	/^     e4a:	31258593          	addi	a1,a1,786 # 6158 <malloc+0x9aa>$/;"	l
e4c	./user/sh.asm	/^     e4c:	00000073          	ecall$/;"	l
e4e	./user/grind.asm	/^     e4e:	60a2                	ld	ra,8(sp)$/;"	l
e4e	./user/usertests.asm	/^     e4e:	00005517          	auipc	a0,0x5$/;"	l
e50	./user/grind.asm	/^     e50:	6402                	ld	s0,0(sp)$/;"	l
e50	./user/sh.asm	/^     e50:	8082                	ret$/;"	l
e52	./user/grind.asm	/^     e52:	0141                	addi	sp,sp,16$/;"	l
e52	./user/sh.asm	/^     e52:	48b1                	li	a7,12$/;"	l
e52	./user/usertests.asm	/^     e52:	41a50513          	addi	a0,a0,1050 # 6268 <malloc+0xaba>$/;"	l
e54	./user/grind.asm	/^     e54:	8082                	ret$/;"	l
e54	./user/sh.asm	/^     e54:	00000073          	ecall$/;"	l
e56	./user/grind.asm	/^     e56:	4885                	li	a7,1$/;"	l
e56	./user/usertests.asm	/^     e56:	00004097          	auipc	ra,0x4$/;"	l
e58	./user/grind.asm	/^     e58:	00000073          	ecall$/;"	l
e58	./user/sh.asm	/^     e58:	8082                	ret$/;"	l
e5a	./user/sh.asm	/^     e5a:	48b5                	li	a7,13$/;"	l
e5a	./user/usertests.asm	/^     e5a:	582080e7          	jalr	1410(ra) # 53d8 <link>$/;"	l
e5c	./user/grind.asm	/^     e5c:	8082                	ret$/;"	l
e5c	./user/sh.asm	/^     e5c:	00000073          	ecall$/;"	l
e5e	./user/grind.asm	/^     e5e:	4889                	li	a7,2$/;"	l
e5e	./user/usertests.asm	/^     e5e:	0e055863          	bgez	a0,f4e <linktest+0x230>$/;"	l
e6	./user/cat.asm	/^  e6:	2b2080e7          	jalr	690(ra) # 394 <exit>$/;"	l
e6	./user/echo.asm	/^  e6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e6	./user/forktest.asm	/^  e6:	2b2080e7          	jalr	690(ra) # 394 <exit>$/;"	l
e6	./user/grind.asm	/^      e6:	00001997          	auipc	s3,0x1$/;"	l
e6	./user/init.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	./user/kill.asm	/^  e6:	9301                	srli	a4,a4,0x20$/;"	l
e6	./user/ln.asm	/^  e6:	972a                	add	a4,a4,a0$/;"	l
e6	./user/ls.asm	/^  e6:	84aa                	mv	s1,a0$/;"	l
e6	./user/mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	./user/pingpong.asm	/^  e6:	00f71763          	bne	a4,a5,f4 <strcmp+0x1e>$/;"	l
e6	./user/rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	./user/sh.asm	/^      e6:	00000097          	auipc	ra,0x0$/;"	l
e6	./user/sleep.asm	/^  e6:	00054783          	lbu	a5,0(a0)$/;"	l
e6	./user/stressfs.asm	/^  e6:	2b8080e7          	jalr	696(ra) # 39a <read>$/;"	l
e6	./user/usertests.asm	/^      e6:	00006517          	auipc	a0,0x6$/;"	l
e6	./user/zombie.asm	/^  e6:	711d                	addi	sp,sp,-96$/;"	l
e60	./user/grind.asm	/^     e60:	00000073          	ecall$/;"	l
e60	./user/sh.asm	/^     e60:	8082                	ret$/;"	l
e62	./user/sh.asm	/^     e62:	48b9                	li	a7,14$/;"	l
e62	./user/usertests.asm	/^     e62:	60e2                	ld	ra,24(sp)$/;"	l
e64	./user/grind.asm	/^     e64:	8082                	ret$/;"	l
e64	./user/sh.asm	/^     e64:	00000073          	ecall$/;"	l
e64	./user/usertests.asm	/^     e64:	6442                	ld	s0,16(sp)$/;"	l
e66	./user/grind.asm	/^     e66:	488d                	li	a7,3$/;"	l
e66	./user/usertests.asm	/^     e66:	64a2                	ld	s1,8(sp)$/;"	l
e68	./user/grind.asm	/^     e68:	00000073          	ecall$/;"	l
e68	./user/sh.asm	/^     e68:	8082                	ret$/;"	l
e68	./user/usertests.asm	/^     e68:	6902                	ld	s2,0(sp)$/;"	l
e6a	./user/sh.asm	/^     e6a:	1101                	addi	sp,sp,-32$/;"	l
e6a	./user/usertests.asm	/^     e6a:	6105                	addi	sp,sp,32$/;"	l
e6c	./user/grind.asm	/^     e6c:	8082                	ret$/;"	l
e6c	./user/sh.asm	/^     e6c:	ec06                	sd	ra,24(sp)$/;"	l
e6c	./user/usertests.asm	/^     e6c:	8082                	ret$/;"	l
e6e	./user/grind.asm	/^     e6e:	4891                	li	a7,4$/;"	l
e6e	./user/sh.asm	/^     e6e:	e822                	sd	s0,16(sp)$/;"	l
e6e	./user/usertests.asm	/^     e6e:	85ca                	mv	a1,s2$/;"	l
e70	./user/grind.asm	/^     e70:	00000073          	ecall$/;"	l
e70	./user/sh.asm	/^     e70:	1000                	addi	s0,sp,32$/;"	l
e70	./user/usertests.asm	/^     e70:	00005517          	auipc	a0,0x5$/;"	l
e72	./user/sh.asm	/^     e72:	feb407a3          	sb	a1,-17(s0)$/;"	l
e74	./user/grind.asm	/^     e74:	8082                	ret$/;"	l
e74	./user/usertests.asm	/^     e74:	2f850513          	addi	a0,a0,760 # 6168 <malloc+0x9ba>$/;"	l
e76	./user/grind.asm	/^     e76:	4895                	li	a7,5$/;"	l
e76	./user/sh.asm	/^     e76:	4605                	li	a2,1$/;"	l
e78	./user/grind.asm	/^     e78:	00000073          	ecall$/;"	l
e78	./user/sh.asm	/^     e78:	fef40593          	addi	a1,s0,-17$/;"	l
e78	./user/usertests.asm	/^     e78:	00005097          	auipc	ra,0x5$/;"	l
e7c	./user/grind.asm	/^     e7c:	8082                	ret$/;"	l
e7c	./user/sh.asm	/^     e7c:	00000097          	auipc	ra,0x0$/;"	l
e7c	./user/usertests.asm	/^     e7c:	878080e7          	jalr	-1928(ra) # 56f0 <printf>$/;"	l
e7e	./user/grind.asm	/^     e7e:	48c1                	li	a7,16$/;"	l
e8	./user/grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	./user/kill.asm	/^  e8:	0705                	addi	a4,a4,1$/;"	l
e8	./user/ln.asm	/^  e8:	00b78023          	sb	a1,0(a5)$/;"	l
e8	./user/ls.asm	/^  e8:	d9840593          	addi	a1,s0,-616$/;"	l
e8	./user/mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	./user/prime.asm	/^  e8:	02e7e7bb          	remw	a5,a5,a4$/;"	l
e8	./user/primes.asm	/^  e8:	02e7e7bb          	remw	a5,a5,a4$/;"	l
e8	./user/rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	./user/wc.asm	/^  e8:	84c50513          	addi	a0,a0,-1972 # 930 <malloc+0xee>$/;"	l
e8	./user/zombie.asm	/^  e8:	ec86                	sd	ra,88(sp)$/;"	l
e80	./user/grind.asm	/^     e80:	00000073          	ecall$/;"	l
e80	./user/sh.asm	/^     e80:	f6e080e7          	jalr	-146(ra) # dea <write>$/;"	l
e80	./user/usertests.asm	/^     e80:	4505                	li	a0,1$/;"	l
e82	./user/usertests.asm	/^     e82:	00004097          	auipc	ra,0x4$/;"	l
e84	./user/grind.asm	/^     e84:	8082                	ret$/;"	l
e84	./user/sh.asm	/^     e84:	60e2                	ld	ra,24(sp)$/;"	l
e86	./user/grind.asm	/^     e86:	48d5                	li	a7,21$/;"	l
e86	./user/sh.asm	/^     e86:	6442                	ld	s0,16(sp)$/;"	l
e86	./user/usertests.asm	/^     e86:	4f6080e7          	jalr	1270(ra) # 5378 <exit>$/;"	l
e88	./user/grind.asm	/^     e88:	00000073          	ecall$/;"	l
e88	./user/sh.asm	/^     e88:	6105                	addi	sp,sp,32$/;"	l
e8a	./user/sh.asm	/^     e8a:	8082                	ret$/;"	l
e8a	./user/usertests.asm	/^     e8a:	85ca                	mv	a1,s2$/;"	l
e8c	./user/grind.asm	/^     e8c:	8082                	ret$/;"	l
e8c	./user/sh.asm	/^     e8c:	7139                	addi	sp,sp,-64$/;"	l
e8c	./user/usertests.asm	/^     e8c:	00005517          	auipc	a0,0x5$/;"	l
e8e	./user/grind.asm	/^     e8e:	4899                	li	a7,6$/;"	l
e8e	./user/sh.asm	/^     e8e:	fc06                	sd	ra,56(sp)$/;"	l
e90	./user/grind.asm	/^     e90:	00000073          	ecall$/;"	l
e90	./user/sh.asm	/^     e90:	f822                	sd	s0,48(sp)$/;"	l
e90	./user/usertests.asm	/^     e90:	2f450513          	addi	a0,a0,756 # 6180 <malloc+0x9d2>$/;"	l
e92	./user/sh.asm	/^     e92:	f426                	sd	s1,40(sp)$/;"	l
e94	./user/grind.asm	/^     e94:	8082                	ret$/;"	l
e94	./user/sh.asm	/^     e94:	f04a                	sd	s2,32(sp)$/;"	l
e94	./user/usertests.asm	/^     e94:	00005097          	auipc	ra,0x5$/;"	l
e96	./user/grind.asm	/^     e96:	489d                	li	a7,7$/;"	l
e96	./user/sh.asm	/^     e96:	ec4e                	sd	s3,24(sp)$/;"	l
e98	./user/grind.asm	/^     e98:	00000073          	ecall$/;"	l
e98	./user/sh.asm	/^     e98:	0080                	addi	s0,sp,64$/;"	l
e98	./user/usertests.asm	/^     e98:	85c080e7          	jalr	-1956(ra) # 56f0 <printf>$/;"	l
e9a	./user/sh.asm	/^     e9a:	84aa                	mv	s1,a0$/;"	l
e9c	./user/grind.asm	/^     e9c:	8082                	ret$/;"	l
e9c	./user/sh.asm	/^     e9c:	c299                	beqz	a3,ea2 <printint+0x16>$/;"	l
e9c	./user/usertests.asm	/^     e9c:	4505                	li	a0,1$/;"	l
e9e	./user/grind.asm	/^     e9e:	48bd                	li	a7,15$/;"	l
e9e	./user/sh.asm	/^     e9e:	0805c863          	bltz	a1,f2e <printint+0xa2>$/;"	l
e9e	./user/usertests.asm	/^     e9e:	00004097          	auipc	ra,0x4$/;"	l
ea	./user/cat.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	./user/echo.asm	/^  ea:	fb7d                	bnez	a4,e0 <strlen+0x14>$/;"	l
ea	./user/forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	./user/grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	./user/grind.asm	/^      ea:	2c298993          	addi	s3,s3,706 # 13a8 <malloc+0x114>$/;"	l
ea	./user/init.asm	/^  ea:	600080e7          	jalr	1536(ra) # 6e6 <printf>$/;"	l
ea	./user/kill.asm	/^  ea:	972a                	add	a4,a4,a0$/;"	l
ea	./user/mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	./user/pingpong.asm	/^  ea:	0505                	addi	a0,a0,1$/;"	l
ea	./user/rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	./user/sh.asm	/^      ea:	f6e080e7          	jalr	-146(ra) # 54 <panic>$/;"	l
ea	./user/sleep.asm	/^  ea:	cb99                	beqz	a5,100 <strchr+0x20>$/;"	l
ea	./user/stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	./user/usertests.asm	/^      ea:	af250513          	addi	a0,a0,-1294 # 5bd8 <malloc+0x42a>$/;"	l
ea	./user/zombie.asm	/^  ea:	e8a2                	sd	s0,80(sp)$/;"	l
ea0	./user/grind.asm	/^     ea0:	00000073          	ecall$/;"	l
ea2	./user/sh.asm	/^     ea2:	2581                	sext.w	a1,a1$/;"	l
ea2	./user/usertests.asm	/^     ea2:	4da080e7          	jalr	1242(ra) # 5378 <exit>$/;"	l
ea4	./user/grind.asm	/^     ea4:	8082                	ret$/;"	l
ea4	./user/sh.asm	/^     ea4:	4881                	li	a7,0$/;"	l
ea6	./user/grind.asm	/^     ea6:	48c5                	li	a7,17$/;"	l
ea6	./user/sh.asm	/^     ea6:	fc040693          	addi	a3,s0,-64$/;"	l
ea6	./user/usertests.asm	/^     ea6:	85ca                	mv	a1,s2$/;"	l
ea8	./user/grind.asm	/^     ea8:	00000073          	ecall$/;"	l
ea8	./user/usertests.asm	/^     ea8:	00005517          	auipc	a0,0x5$/;"	l
eaa	./user/sh.asm	/^     eaa:	4701                	li	a4,0$/;"	l
eac	./user/grind.asm	/^     eac:	8082                	ret$/;"	l
eac	./user/sh.asm	/^     eac:	2601                	sext.w	a2,a2$/;"	l
eac	./user/usertests.asm	/^     eac:	2f050513          	addi	a0,a0,752 # 6198 <malloc+0x9ea>$/;"	l
eae	./user/grind.asm	/^     eae:	48c9                	li	a7,18$/;"	l
eae	./user/sh.asm	/^     eae:	00000517          	auipc	a0,0x0$/;"	l
eargv	./user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	./user/grind.asm	/^     eb0:	00000073          	ecall$/;"	l
eb0	./user/usertests.asm	/^     eb0:	00005097          	auipc	ra,0x5$/;"	l
eb2	./user/sh.asm	/^     eb2:	58250513          	addi	a0,a0,1410 # 1430 <digits>$/;"	l
eb4	./user/grind.asm	/^     eb4:	8082                	ret$/;"	l
eb4	./user/usertests.asm	/^     eb4:	840080e7          	jalr	-1984(ra) # 56f0 <printf>$/;"	l
eb6	./user/grind.asm	/^     eb6:	48a1                	li	a7,8$/;"	l
eb6	./user/sh.asm	/^     eb6:	883a                	mv	a6,a4$/;"	l
eb8	./user/grind.asm	/^     eb8:	00000073          	ecall$/;"	l
eb8	./user/sh.asm	/^     eb8:	2705                	addiw	a4,a4,1$/;"	l
eb8	./user/usertests.asm	/^     eb8:	4505                	li	a0,1$/;"	l
eba	./user/sh.asm	/^     eba:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
eba	./user/usertests.asm	/^     eba:	00004097          	auipc	ra,0x4$/;"	l
ebc	./user/grind.asm	/^     ebc:	8082                	ret$/;"	l
ebe	./user/grind.asm	/^     ebe:	48cd                	li	a7,19$/;"	l
ebe	./user/sh.asm	/^     ebe:	1782                	slli	a5,a5,0x20$/;"	l
ebe	./user/usertests.asm	/^     ebe:	4be080e7          	jalr	1214(ra) # 5378 <exit>$/;"	l
ec	./user/cat.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	./user/echo.asm	/^  ec:	6422                	ld	s0,8(sp)$/;"	l
ec	./user/grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	./user/kill.asm	/^  ec:	00b78023          	sb	a1,0(a5)$/;"	l
ec	./user/ln.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	./user/ls.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	./user/mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	./user/pingpong.asm	/^  ec:	0585                	addi	a1,a1,1$/;"	l
ec	./user/prime.asm	/^  ec:	d3e5                	beqz	a5,cc <prime+0xa2>$/;"	l
ec	./user/primes.asm	/^  ec:	d3e5                	beqz	a5,cc <prime+0xa2>$/;"	l
ec	./user/rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	./user/sleep.asm	/^  ec:	00f58763          	beq	a1,a5,fa <strchr+0x1a>$/;"	l
ec	./user/stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	./user/wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	./user/zombie.asm	/^  ec:	e4a6                	sd	s1,72(sp)$/;"	l
ec0	./user/grind.asm	/^     ec0:	00000073          	ecall$/;"	l
ec0	./user/sh.asm	/^     ec0:	9381                	srli	a5,a5,0x20$/;"	l
ec2	./user/sh.asm	/^     ec2:	97aa                	add	a5,a5,a0$/;"	l
ec2	./user/usertests.asm	/^     ec2:	85ca                	mv	a1,s2$/;"	l
ec4	./user/grind.asm	/^     ec4:	8082                	ret$/;"	l
ec4	./user/sh.asm	/^     ec4:	0007c783          	lbu	a5,0(a5)$/;"	l
ec4	./user/usertests.asm	/^     ec4:	00005517          	auipc	a0,0x5$/;"	l
ec6	./user/grind.asm	/^     ec6:	48d1                	li	a7,20$/;"	l
ec8	./user/grind.asm	/^     ec8:	00000073          	ecall$/;"	l
ec8	./user/sh.asm	/^     ec8:	00f68023          	sb	a5,0(a3)$/;"	l
ec8	./user/usertests.asm	/^     ec8:	2f450513          	addi	a0,a0,756 # 61b8 <malloc+0xa0a>$/;"	l
ecc	./user/grind.asm	/^     ecc:	8082                	ret$/;"	l
ecc	./user/sh.asm	/^     ecc:	0005879b          	sext.w	a5,a1$/;"	l
ecc	./user/usertests.asm	/^     ecc:	00005097          	auipc	ra,0x5$/;"	l
ece	./user/grind.asm	/^     ece:	48a5                	li	a7,9$/;"	l
ecmd	./user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	./user/grind.asm	/^     ed0:	00000073          	ecall$/;"	l
ed0	./user/sh.asm	/^     ed0:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
ed0	./user/usertests.asm	/^     ed0:	824080e7          	jalr	-2012(ra) # 56f0 <printf>$/;"	l
ed4	./user/grind.asm	/^     ed4:	8082                	ret$/;"	l
ed4	./user/sh.asm	/^     ed4:	0685                	addi	a3,a3,1$/;"	l
ed4	./user/usertests.asm	/^     ed4:	4505                	li	a0,1$/;"	l
ed6	./user/grind.asm	/^     ed6:	48a9                	li	a7,10$/;"	l
ed6	./user/sh.asm	/^     ed6:	fec7f0e3          	bgeu	a5,a2,eb6 <printint+0x2a>$/;"	l
ed6	./user/usertests.asm	/^     ed6:	00004097          	auipc	ra,0x4$/;"	l
ed8	./user/grind.asm	/^     ed8:	00000073          	ecall$/;"	l
eda	./user/sh.asm	/^     eda:	00088b63          	beqz	a7,ef0 <printint+0x64>$/;"	l
eda	./user/usertests.asm	/^     eda:	4a2080e7          	jalr	1186(ra) # 5378 <exit>$/;"	l
edc	./user/grind.asm	/^     edc:	8082                	ret$/;"	l
ede	./user/grind.asm	/^     ede:	48ad                	li	a7,11$/;"	l
ede	./user/sh.asm	/^     ede:	fd040793          	addi	a5,s0,-48$/;"	l
ede	./user/usertests.asm	/^     ede:	85ca                	mv	a1,s2$/;"	l
ee	./user/echo.asm	/^  ee:	0141                	addi	sp,sp,16$/;"	l
ee	./user/forktest.asm	/^  ee:	39650513          	addi	a0,a0,918 # 480 <uptime+0x54>$/;"	l
ee	./user/grind.asm	/^      ee:	c489                	beqz	s1,f8 <go+0x80>$/;"	l
ee	./user/init.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	./user/ln.asm	/^  ee:	fee79de3          	bne	a5,a4,e8 <memset+0x16>$/;"	l
ee	./user/mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	./user/pingpong.asm	/^  ee:	00054783          	lbu	a5,0(a0)$/;"	l
ee	./user/prime.asm	/^  ee:	4611                	li	a2,4$/;"	l
ee	./user/primes.asm	/^  ee:	4611                	li	a2,4$/;"	l
ee	./user/rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	./user/sh.asm	/^      ee:	6508                	ld	a0,8(a0)$/;"	l
ee	./user/stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	./user/usertests.asm	/^      ee:	00005097          	auipc	ra,0x5$/;"	l
ee	./user/zombie.asm	/^  ee:	e0ca                	sd	s2,64(sp)$/;"	l
ee0	./user/grind.asm	/^     ee0:	00000073          	ecall$/;"	l
ee0	./user/usertests.asm	/^     ee0:	00005517          	auipc	a0,0x5$/;"	l
ee2	./user/sh.asm	/^     ee2:	973e                	add	a4,a4,a5$/;"	l
ee4	./user/grind.asm	/^     ee4:	8082                	ret$/;"	l
ee4	./user/sh.asm	/^     ee4:	02d00793          	li	a5,45$/;"	l
ee4	./user/usertests.asm	/^     ee4:	30850513          	addi	a0,a0,776 # 61e8 <malloc+0xa3a>$/;"	l
ee6	./user/grind.asm	/^     ee6:	48b1                	li	a7,12$/;"	l
ee8	./user/grind.asm	/^     ee8:	00000073          	ecall$/;"	l
ee8	./user/sh.asm	/^     ee8:	fef70823          	sb	a5,-16(a4)$/;"	l
ee8	./user/usertests.asm	/^     ee8:	00005097          	auipc	ra,0x5$/;"	l
eec	./user/grind.asm	/^     eec:	8082                	ret$/;"	l
eec	./user/sh.asm	/^     eec:	0028071b          	addiw	a4,a6,2$/;"	l
eec	./user/usertests.asm	/^     eec:	808080e7          	jalr	-2040(ra) # 56f0 <printf>$/;"	l
eee	./user/grind.asm	/^     eee:	48b5                	li	a7,13$/;"	l
ef0	./user/grind.asm	/^     ef0:	00000073          	ecall$/;"	l
ef0	./user/sh.asm	/^     ef0:	02e05863          	blez	a4,f20 <printint+0x94>$/;"	l
ef0	./user/usertests.asm	/^     ef0:	4505                	li	a0,1$/;"	l
ef2	./user/usertests.asm	/^     ef2:	00004097          	auipc	ra,0x4$/;"	l
ef4	./user/grind.asm	/^     ef4:	8082                	ret$/;"	l
ef4	./user/sh.asm	/^     ef4:	fc040793          	addi	a5,s0,-64$/;"	l
ef6	./user/grind.asm	/^     ef6:	48b9                	li	a7,14$/;"	l
ef6	./user/usertests.asm	/^     ef6:	486080e7          	jalr	1158(ra) # 5378 <exit>$/;"	l
ef8	./user/grind.asm	/^     ef8:	00000073          	ecall$/;"	l
ef8	./user/sh.asm	/^     ef8:	00e78933          	add	s2,a5,a4$/;"	l
efa	./user/usertests.asm	/^     efa:	85ca                	mv	a1,s2$/;"	l
efc	./user/grind.asm	/^     efc:	8082                	ret$/;"	l
efc	./user/sh.asm	/^     efc:	fff78993          	addi	s3,a5,-1$/;"	l
efc	./user/usertests.asm	/^     efc:	00005517          	auipc	a0,0x5$/;"	l
efe	./user/grind.asm	/^     efe:	1101                	addi	sp,sp,-32$/;"	l
efile	./user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
ehsize	./kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
either_copyin	./kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f
either_copyout	./kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f
elems	./kernel/virtio.h	/^  struct VRingUsedElem elems[NUM];$/;"	m	struct:UsedArea	typeref:struct:UsedArea::VRingUsedElem
elf	./kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	./kernel/elf.h	/^struct elfhdr {$/;"	s
empty	./kernel/kernel.asm	/^  empty = 0;$/;"	d
end_op	./kernel/log.c	/^end_op(void)$/;"	f
end_part	./gradelib.py	/^def end_part(name):$/;"	f
entry	./kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr
entry	./user/usys.pl	/^sub entry {$/;"	s
epc	./kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe
err	./kernel/kernel.asm	/^ err:$/;"	l
es	./user/sh.asm	/^  es = s + strlen(s);$/;"	d
exec	./kernel/exec.c	/^exec(char *path, char **argv)$/;"	f
exec	./user/cat.asm	/^exec:$/;"	l
exec	./user/echo.asm	/^exec:$/;"	l
exec	./user/forktest.asm	/^exec:$/;"	l
exec	./user/grep.asm	/^exec:$/;"	l
exec	./user/grind.asm	/^exec:$/;"	l
exec	./user/init.asm	/^exec:$/;"	l
exec	./user/kill.asm	/^exec:$/;"	l
exec	./user/ln.asm	/^exec:$/;"	l
exec	./user/ls.asm	/^exec:$/;"	l
exec	./user/mkdir.asm	/^exec:$/;"	l
exec	./user/pingpong.asm	/^exec:$/;"	l
exec	./user/prime.asm	/^exec:$/;"	l
exec	./user/primes.asm	/^exec:$/;"	l
exec	./user/rm.asm	/^exec:$/;"	l
exec	./user/sh.asm	/^exec:$/;"	l
exec	./user/sleep.asm	/^exec:$/;"	l
exec	./user/stressfs.asm	/^exec:$/;"	l
exec	./user/usertests.asm	/^exec:$/;"	l
exec	./user/usys.S	/^exec:$/;"	l
exec	./user/wc.asm	/^exec:$/;"	l
exec	./user/zombie.asm	/^exec:$/;"	l
execcmd	./user/sh.c	/^execcmd(void)$/;"	f
execcmd	./user/sh.c	/^struct execcmd {$/;"	s	file:
execout	./user/usertests.c	/^execout(char *s)$/;"	f
exectest	./user/usertests.c	/^exectest(char *s)$/;"	f
exit	./kernel/proc.c	/^exit(int status)$/;"	f
exit	./user/cat.asm	/^exit:$/;"	l
exit	./user/echo.asm	/^exit:$/;"	l
exit	./user/forktest.asm	/^exit:$/;"	l
exit	./user/grep.asm	/^exit:$/;"	l
exit	./user/grind.asm	/^exit:$/;"	l
exit	./user/init.asm	/^exit:$/;"	l
exit	./user/initcode.S	/^exit:$/;"	l
exit	./user/initcode.asm	/^exit:$/;"	l
exit	./user/kill.asm	/^exit:$/;"	l
exit	./user/ln.asm	/^exit:$/;"	l
exit	./user/ls.asm	/^exit:$/;"	l
exit	./user/mkdir.asm	/^exit:$/;"	l
exit	./user/pingpong.asm	/^exit:$/;"	l
exit	./user/prime.asm	/^exit:$/;"	l
exit	./user/primes.asm	/^exit:$/;"	l
exit	./user/rm.asm	/^exit:$/;"	l
exit	./user/sh.asm	/^exit:$/;"	l
exit	./user/sleep.asm	/^exit:$/;"	l
exit	./user/stressfs.asm	/^exit:$/;"	l
exit	./user/usertests.asm	/^exit:$/;"	l
exit	./user/usys.S	/^exit:$/;"	l
exit	./user/wc.asm	/^exit:$/;"	l
exit	./user/zombie.asm	/^exit:$/;"	l
exitiputtest	./user/usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	./user/usertests.c	/^exitwait(char *s)$/;"	f
extern	./kernel/kernel.asm	/^extern int devintr();$/;"	l
f0	./user/cat.asm	/^  f0:	f14080e7          	jalr	-236(ra) # 0 <cat>$/;"	l
f0	./user/echo.asm	/^  f0:	8082                	ret$/;"	l
f0	./user/grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	./user/grind.asm	/^      f0:	00001997          	auipc	s3,0x1$/;"	l
f0	./user/init.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	./user/kill.asm	/^  f0:	0785                	addi	a5,a5,1$/;"	l
f0	./user/ls.asm	/^  f0:	4b6080e7          	jalr	1206(ra) # 5a2 <fstat>$/;"	l
f0	./user/mkdir.asm	/^  f0:	ce09                	beqz	a2,10a <memset+0x20>$/;"	l
f0	./user/prime.asm	/^  f0:	fe840593          	addi	a1,s0,-24$/;"	l
f0	./user/primes.asm	/^  f0:	fe840593          	addi	a1,s0,-24$/;"	l
f0	./user/rm.asm	/^  f0:	ce09                	beqz	a2,10a <memset+0x20>$/;"	l
f0	./user/sh.asm	/^      f0:	c515                	beqz	a0,11c <runcmd+0x74>$/;"	l
f0	./user/sleep.asm	/^  f0:	0505                	addi	a0,a0,1$/;"	l
f0	./user/stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	./user/wc.asm	/^  f0:	698080e7          	jalr	1688(ra) # 784 <printf>$/;"	l
f0	./user/zombie.asm	/^  f0:	fc4e                	sd	s3,56(sp)$/;"	l
f00	./user/grind.asm	/^     f00:	ec06                	sd	ra,24(sp)$/;"	l
f00	./user/sh.asm	/^     f00:	99ba                	add	s3,s3,a4$/;"	l
f00	./user/usertests.asm	/^     f00:	30450513          	addi	a0,a0,772 # 6200 <malloc+0xa52>$/;"	l
f02	./user/grind.asm	/^     f02:	e822                	sd	s0,16(sp)$/;"	l
f02	./user/sh.asm	/^     f02:	377d                	addiw	a4,a4,-1$/;"	l
f04	./user/grind.asm	/^     f04:	1000                	addi	s0,sp,32$/;"	l
f04	./user/sh.asm	/^     f04:	1702                	slli	a4,a4,0x20$/;"	l
f04	./user/usertests.asm	/^     f04:	00004097          	auipc	ra,0x4$/;"	l
f06	./user/grind.asm	/^     f06:	feb407a3          	sb	a1,-17(s0)$/;"	l
f06	./user/sh.asm	/^     f06:	9301                	srli	a4,a4,0x20$/;"	l
f08	./user/sh.asm	/^     f08:	40e989b3          	sub	s3,s3,a4$/;"	l
f08	./user/usertests.asm	/^     f08:	7ec080e7          	jalr	2028(ra) # 56f0 <printf>$/;"	l
f0a	./user/grind.asm	/^     f0a:	4605                	li	a2,1$/;"	l
f0c	./user/grind.asm	/^     f0c:	fef40593          	addi	a1,s0,-17$/;"	l
f0c	./user/sh.asm	/^     f0c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f0c	./user/usertests.asm	/^     f0c:	4505                	li	a0,1$/;"	l
f0e	./user/usertests.asm	/^     f0e:	00004097          	auipc	ra,0x4$/;"	l
f10	./user/grind.asm	/^     f10:	00000097          	auipc	ra,0x0$/;"	l
f10	./user/sh.asm	/^     f10:	8526                	mv	a0,s1$/;"	l
f12	./user/sh.asm	/^     f12:	00000097          	auipc	ra,0x0$/;"	l
f12	./user/usertests.asm	/^     f12:	46a080e7          	jalr	1130(ra) # 5378 <exit>$/;"	l
f14	./user/grind.asm	/^     f14:	f6e080e7          	jalr	-146(ra) # e7e <write>$/;"	l
f16	./user/sh.asm	/^     f16:	f58080e7          	jalr	-168(ra) # e6a <putc>$/;"	l
f16	./user/usertests.asm	/^     f16:	85ca                	mv	a1,s2$/;"	l
f18	./user/grind.asm	/^     f18:	60e2                	ld	ra,24(sp)$/;"	l
f18	./user/usertests.asm	/^     f18:	00005517          	auipc	a0,0x5$/;"	l
f1a	./user/grind.asm	/^     f1a:	6442                	ld	s0,16(sp)$/;"	l
f1a	./user/sh.asm	/^     f1a:	197d                	addi	s2,s2,-1$/;"	l
f1c	./user/grind.asm	/^     f1c:	6105                	addi	sp,sp,32$/;"	l
f1c	./user/sh.asm	/^     f1c:	ff3918e3          	bne	s2,s3,f0c <printint+0x80>$/;"	l
f1c	./user/usertests.asm	/^     f1c:	30050513          	addi	a0,a0,768 # 6218 <malloc+0xa6a>$/;"	l
f1e	./user/grind.asm	/^     f1e:	8082                	ret$/;"	l
f2	./user/echo.asm	/^  f2:	4501                	li	a0,0$/;"	l
f2	./user/forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	./user/kill.asm	/^  f2:	fee79de3          	bne	a5,a4,ec <memset+0x16>$/;"	l
f2	./user/ln.asm	/^  f2:	6422                	ld	s0,8(sp)$/;"	l
f2	./user/mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	./user/pingpong.asm	/^  f2:	fbe5                	bnez	a5,e2 <strcmp+0xc>$/;"	l
f2	./user/rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	./user/sh.asm	/^      f2:	00848593          	addi	a1,s1,8$/;"	l
f2	./user/sleep.asm	/^  f2:	00054783          	lbu	a5,0(a0)$/;"	l
f2	./user/usertests.asm	/^      f2:	602080e7          	jalr	1538(ra) # 56f0 <printf>$/;"	l
f2	./user/zombie.asm	/^  f2:	f852                	sd	s4,48(sp)$/;"	l
f20	./user/grind.asm	/^     f20:	7139                	addi	sp,sp,-64$/;"	l
f20	./user/sh.asm	/^     f20:	70e2                	ld	ra,56(sp)$/;"	l
f20	./user/usertests.asm	/^     f20:	00004097          	auipc	ra,0x4$/;"	l
f22	./user/grind.asm	/^     f22:	fc06                	sd	ra,56(sp)$/;"	l
f22	./user/sh.asm	/^     f22:	7442                	ld	s0,48(sp)$/;"	l
f24	./user/grind.asm	/^     f24:	f822                	sd	s0,48(sp)$/;"	l
f24	./user/sh.asm	/^     f24:	74a2                	ld	s1,40(sp)$/;"	l
f24	./user/usertests.asm	/^     f24:	7d0080e7          	jalr	2000(ra) # 56f0 <printf>$/;"	l
f26	./user/grind.asm	/^     f26:	f426                	sd	s1,40(sp)$/;"	l
f26	./user/sh.asm	/^     f26:	7902                	ld	s2,32(sp)$/;"	l
f28	./user/grind.asm	/^     f28:	f04a                	sd	s2,32(sp)$/;"	l
f28	./user/sh.asm	/^     f28:	69e2                	ld	s3,24(sp)$/;"	l
f28	./user/usertests.asm	/^     f28:	4505                	li	a0,1$/;"	l
f2a	./user/grind.asm	/^     f2a:	ec4e                	sd	s3,24(sp)$/;"	l
f2a	./user/sh.asm	/^     f2a:	6121                	addi	sp,sp,64$/;"	l
f2a	./user/usertests.asm	/^     f2a:	00004097          	auipc	ra,0x4$/;"	l
f2c	./user/grind.asm	/^     f2c:	0080                	addi	s0,sp,64$/;"	l
f2c	./user/sh.asm	/^     f2c:	8082                	ret$/;"	l
f2e	./user/grind.asm	/^     f2e:	84aa                	mv	s1,a0$/;"	l
f2e	./user/sh.asm	/^     f2e:	40b005bb          	negw	a1,a1$/;"	l
f2e	./user/usertests.asm	/^     f2e:	44e080e7          	jalr	1102(ra) # 5378 <exit>$/;"	l
f30	./user/grind.asm	/^     f30:	c299                	beqz	a3,f36 <printint+0x16>$/;"	l
f32	./user/grind.asm	/^     f32:	0805c863          	bltz	a1,fc2 <printint+0xa2>$/;"	l
f32	./user/sh.asm	/^     f32:	4885                	li	a7,1$/;"	l
f32	./user/usertests.asm	/^     f32:	85ca                	mv	a1,s2$/;"	l
f34	./user/sh.asm	/^     f34:	bf8d                	j	ea6 <printint+0x1a>$/;"	l
f34	./user/usertests.asm	/^     f34:	00005517          	auipc	a0,0x5$/;"	l
f36	./user/grind.asm	/^     f36:	2581                	sext.w	a1,a1$/;"	l
f36	./user/sh.asm	/^     f36:	7119                	addi	sp,sp,-128$/;"	l
f38	./user/grind.asm	/^     f38:	4881                	li	a7,0$/;"	l
f38	./user/sh.asm	/^     f38:	fc86                	sd	ra,120(sp)$/;"	l
f38	./user/usertests.asm	/^     f38:	30c50513          	addi	a0,a0,780 # 6240 <malloc+0xa92>$/;"	l
f3a	./user/grind.asm	/^     f3a:	fc040693          	addi	a3,s0,-64$/;"	l
f3a	./user/sh.asm	/^     f3a:	f8a2                	sd	s0,112(sp)$/;"	l
f3c	./user/sh.asm	/^     f3c:	f4a6                	sd	s1,104(sp)$/;"	l
f3c	./user/usertests.asm	/^     f3c:	00004097          	auipc	ra,0x4$/;"	l
f3e	./user/grind.asm	/^     f3e:	4701                	li	a4,0$/;"	l
f3e	./user/sh.asm	/^     f3e:	f0ca                	sd	s2,96(sp)$/;"	l
f4	./user/cat.asm	/^  f4:	4501                	li	a0,0$/;"	l
f4	./user/echo.asm	/^  f4:	bfe5                	j	ec <strlen+0x20>$/;"	l
f4	./user/grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	./user/grind.asm	/^      f4:	2b098993          	addi	s3,s3,688 # 13a0 <malloc+0x10c>$/;"	l
f4	./user/init.asm	/^  f4:	27e080e7          	jalr	638(ra) # 36e <exit>$/;"	l
f4	./user/ln.asm	/^  f4:	0141                	addi	sp,sp,16$/;"	l
f4	./user/ls.asm	/^  f4:	08054163          	bltz	a0,176 <ls+0xc2>$/;"	l
f4	./user/mkdir.asm	/^  f4:	fff6071b          	addiw	a4,a2,-1$/;"	l
f4	./user/pingpong.asm	/^  f4:	0005c503          	lbu	a0,0(a1)$/;"	l
f4	./user/prime.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	./user/primes.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	./user/rm.asm	/^  f4:	fff6071b          	addiw	a4,a2,-1$/;"	l
f4	./user/stressfs.asm	/^  f4:	2ba080e7          	jalr	698(ra) # 3aa <close>$/;"	l
f4	./user/wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	./user/zombie.asm	/^  f4:	f456                	sd	s5,40(sp)$/;"	l
f40	./user/grind.asm	/^     f40:	2601                	sext.w	a2,a2$/;"	l
f40	./user/sh.asm	/^     f40:	ecce                	sd	s3,88(sp)$/;"	l
f40	./user/usertests.asm	/^     f40:	7b4080e7          	jalr	1972(ra) # 56f0 <printf>$/;"	l
f42	./user/grind.asm	/^     f42:	00000517          	auipc	a0,0x0$/;"	l
f42	./user/sh.asm	/^     f42:	e8d2                	sd	s4,80(sp)$/;"	l
f44	./user/sh.asm	/^     f44:	e4d6                	sd	s5,72(sp)$/;"	l
f44	./user/usertests.asm	/^     f44:	4505                	li	a0,1$/;"	l
f46	./user/grind.asm	/^     f46:	70650513          	addi	a0,a0,1798 # 1648 <digits>$/;"	l
f46	./user/sh.asm	/^     f46:	e0da                	sd	s6,64(sp)$/;"	l
f46	./user/usertests.asm	/^     f46:	00004097          	auipc	ra,0x4$/;"	l
f48	./user/sh.asm	/^     f48:	fc5e                	sd	s7,56(sp)$/;"	l
f4a	./user/grind.asm	/^     f4a:	883a                	mv	a6,a4$/;"	l
f4a	./user/sh.asm	/^     f4a:	f862                	sd	s8,48(sp)$/;"	l
f4a	./user/usertests.asm	/^     f4a:	432080e7          	jalr	1074(ra) # 5378 <exit>$/;"	l
f4c	./user/grind.asm	/^     f4c:	2705                	addiw	a4,a4,1$/;"	l
f4c	./user/sh.asm	/^     f4c:	f466                	sd	s9,40(sp)$/;"	l
f4e	./user/grind.asm	/^     f4e:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
f4e	./user/sh.asm	/^     f4e:	f06a                	sd	s10,32(sp)$/;"	l
f4e	./user/usertests.asm	/^     f4e:	85ca                	mv	a1,s2$/;"	l
f50	./user/sh.asm	/^     f50:	ec6e                	sd	s11,24(sp)$/;"	l
f50	./user/usertests.asm	/^     f50:	00005517          	auipc	a0,0x5$/;"	l
f52	./user/grind.asm	/^     f52:	1782                	slli	a5,a5,0x20$/;"	l
f52	./user/sh.asm	/^     f52:	0100                	addi	s0,sp,128$/;"	l
f54	./user/grind.asm	/^     f54:	9381                	srli	a5,a5,0x20$/;"	l
f54	./user/sh.asm	/^     f54:	0005c903          	lbu	s2,0(a1)$/;"	l
f54	./user/usertests.asm	/^     f54:	32050513          	addi	a0,a0,800 # 6270 <malloc+0xac2>$/;"	l
f56	./user/grind.asm	/^     f56:	97aa                	add	a5,a5,a0$/;"	l
f58	./user/grind.asm	/^     f58:	0007c783          	lbu	a5,0(a5)$/;"	l
f58	./user/sh.asm	/^     f58:	18090f63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f58	./user/usertests.asm	/^     f58:	00004097          	auipc	ra,0x4$/;"	l
f5c	./user/grind.asm	/^     f5c:	00f68023          	sb	a5,0(a3)$/;"	l
f5c	./user/sh.asm	/^     f5c:	8aaa                	mv	s5,a0$/;"	l
f5c	./user/usertests.asm	/^     f5c:	798080e7          	jalr	1944(ra) # 56f0 <printf>$/;"	l
f5e	./user/sh.asm	/^     f5e:	8b32                	mv	s6,a2$/;"	l
f6	./user/cat.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	./user/echo.asm	/^  f6:	1141                	addi	sp,sp,-16$/;"	l
f6	./user/forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	./user/grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	./user/kill.asm	/^  f6:	6422                	ld	s0,8(sp)$/;"	l
f6	./user/ln.asm	/^  f6:	8082                	ret$/;"	l
f6	./user/prime.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	./user/primes.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	./user/sh.asm	/^      f6:	00001097          	auipc	ra,0x1$/;"	l
f6	./user/sleep.asm	/^  f6:	fbfd                	bnez	a5,ec <strchr+0xc>$/;"	l
f6	./user/usertests.asm	/^      f6:	4505                	li	a0,1$/;"	l
f6	./user/wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	./user/zombie.asm	/^  f6:	f05a                	sd	s6,32(sp)$/;"	l
f60	./user/grind.asm	/^     f60:	0005879b          	sext.w	a5,a1$/;"	l
f60	./user/sh.asm	/^     f60:	00158493          	addi	s1,a1,1$/;"	l
f60	./user/usertests.asm	/^     f60:	4505                	li	a0,1$/;"	l
f62	./user/usertests.asm	/^     f62:	00004097          	auipc	ra,0x4$/;"	l
f64	./user/grind.asm	/^     f64:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
f64	./user/sh.asm	/^     f64:	4981                	li	s3,0$/;"	l
f66	./user/sh.asm	/^     f66:	02500a13          	li	s4,37$/;"	l
f66	./user/usertests.asm	/^     f66:	416080e7          	jalr	1046(ra) # 5378 <exit>$/;"	l
f68	./user/grind.asm	/^     f68:	0685                	addi	a3,a3,1$/;"	l
f6a	./user/grind.asm	/^     f6a:	fec7f0e3          	bgeu	a5,a2,f4a <printint+0x2a>$/;"	l
f6a	./user/sh.asm	/^     f6a:	06400c13          	li	s8,100$/;"	l
f6a	./user/usertests.asm	/^     f6a:	715d                	addi	sp,sp,-80$/;"	l
f6c	./user/usertests.asm	/^     f6c:	e486                	sd	ra,72(sp)$/;"	l
f6e	./user/grind.asm	/^     f6e:	00088b63          	beqz	a7,f84 <printint+0x64>$/;"	l
f6e	./user/sh.asm	/^     f6e:	06c00c93          	li	s9,108$/;"	l
f6e	./user/usertests.asm	/^     f6e:	e0a2                	sd	s0,64(sp)$/;"	l
f70	./user/usertests.asm	/^     f70:	fc26                	sd	s1,56(sp)$/;"	l
f72	./user/grind.asm	/^     f72:	fd040793          	addi	a5,s0,-48$/;"	l
f72	./user/sh.asm	/^     f72:	07800d13          	li	s10,120$/;"	l
f72	./user/usertests.asm	/^     f72:	f84a                	sd	s2,48(sp)$/;"	l
f74	./user/usertests.asm	/^     f74:	f44e                	sd	s3,40(sp)$/;"	l
f76	./user/grind.asm	/^     f76:	973e                	add	a4,a4,a5$/;"	l
f76	./user/sh.asm	/^     f76:	07000d93          	li	s11,112$/;"	l
f76	./user/usertests.asm	/^     f76:	f052                	sd	s4,32(sp)$/;"	l
f78	./user/grind.asm	/^     f78:	02d00793          	li	a5,45$/;"	l
f78	./user/usertests.asm	/^     f78:	ec56                	sd	s5,24(sp)$/;"	l
f7a	./user/sh.asm	/^     f7a:	00000b97          	auipc	s7,0x0$/;"	l
f7a	./user/usertests.asm	/^     f7a:	e85a                	sd	s6,16(sp)$/;"	l
f7c	./user/grind.asm	/^     f7c:	fef70823          	sb	a5,-16(a4)$/;"	l
f7c	./user/usertests.asm	/^     f7c:	0880                	addi	s0,sp,80$/;"	l
f7e	./user/sh.asm	/^     f7e:	4b6b8b93          	addi	s7,s7,1206 # 1430 <digits>$/;"	l
f7e	./user/usertests.asm	/^     f7e:	89aa                	mv	s3,a0$/;"	l
f8	./user/echo.asm	/^  f8:	e422                	sd	s0,8(sp)$/;"	l
f8	./user/grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	./user/grind.asm	/^      f8:	4485                	li	s1,1$/;"	l
f8	./user/init.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	./user/kill.asm	/^  f8:	0141                	addi	sp,sp,16$/;"	l
f8	./user/ln.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	./user/ls.asm	/^  f8:	da041783          	lh	a5,-608(s0)$/;"	l
f8	./user/mkdir.asm	/^  f8:	1702                	slli	a4,a4,0x20$/;"	l
f8	./user/pingpong.asm	/^  f8:	40a7853b          	subw	a0,a5,a0$/;"	l
f8	./user/rm.asm	/^  f8:	1702                	slli	a4,a4,0x20$/;"	l
f8	./user/sleep.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	./user/stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	./user/usertests.asm	/^      f8:	00005097          	auipc	ra,0x5$/;"	l
f8	./user/zombie.asm	/^  f8:	ec5e                	sd	s7,24(sp)$/;"	l
f80	./user/grind.asm	/^     f80:	0028071b          	addiw	a4,a6,2$/;"	l
f80	./user/usertests.asm	/^     f80:	00005517          	auipc	a0,0x5$/;"	l
f82	./user/sh.asm	/^     f82:	a839                	j	fa0 <vprintf+0x6a>$/;"	l
f84	./user/grind.asm	/^     f84:	02e05863          	blez	a4,fb4 <printint+0x94>$/;"	l
f84	./user/sh.asm	/^     f84:	85ca                	mv	a1,s2$/;"	l
f84	./user/usertests.asm	/^     f84:	31050513          	addi	a0,a0,784 # 6290 <malloc+0xae2>$/;"	l
f86	./user/sh.asm	/^     f86:	8556                	mv	a0,s5$/;"	l
f88	./user/grind.asm	/^     f88:	fc040793          	addi	a5,s0,-64$/;"	l
f88	./user/sh.asm	/^     f88:	00000097          	auipc	ra,0x0$/;"	l
f88	./user/usertests.asm	/^     f88:	00004097          	auipc	ra,0x4$/;"	l
f8c	./user/grind.asm	/^     f8c:	00e78933          	add	s2,a5,a4$/;"	l
f8c	./user/sh.asm	/^     f8c:	ee2080e7          	jalr	-286(ra) # e6a <putc>$/;"	l
f8c	./user/usertests.asm	/^     f8c:	440080e7          	jalr	1088(ra) # 53c8 <unlink>$/;"	l
f90	./user/grind.asm	/^     f90:	fff78993          	addi	s3,a5,-1$/;"	l
f90	./user/sh.asm	/^     f90:	a019                	j	f96 <vprintf+0x60>$/;"	l
f90	./user/usertests.asm	/^     f90:	20000593          	li	a1,512$/;"	l
f92	./user/sh.asm	/^     f92:	01498f63          	beq	s3,s4,fb0 <vprintf+0x7a>$/;"	l
f94	./user/grind.asm	/^     f94:	99ba                	add	s3,s3,a4$/;"	l
f94	./user/usertests.asm	/^     f94:	00005517          	auipc	a0,0x5$/;"	l
f96	./user/grind.asm	/^     f96:	377d                	addiw	a4,a4,-1$/;"	l
f96	./user/sh.asm	/^     f96:	0485                	addi	s1,s1,1$/;"	l
f98	./user/grind.asm	/^     f98:	1702                	slli	a4,a4,0x20$/;"	l
f98	./user/sh.asm	/^     f98:	fff4c903          	lbu	s2,-1(s1)$/;"	l
f98	./user/usertests.asm	/^     f98:	2fc50513          	addi	a0,a0,764 # 6290 <malloc+0xae2>$/;"	l
f9a	./user/grind.asm	/^     f9a:	9301                	srli	a4,a4,0x20$/;"	l
f9c	./user/grind.asm	/^     f9c:	40e989b3          	sub	s3,s3,a4$/;"	l
f9c	./user/sh.asm	/^     f9c:	14090d63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f9c	./user/usertests.asm	/^     f9c:	00004097          	auipc	ra,0x4$/;"	l
fa	./user/cat.asm	/^  fa:	29e080e7          	jalr	670(ra) # 394 <exit>$/;"	l
fa	./user/echo.asm	/^  fa:	0800                	addi	s0,sp,16$/;"	l
fa	./user/forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	./user/grind.asm	/^      fa:	597d                	li	s2,-1$/;"	l
fa	./user/init.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	./user/kill.asm	/^  fa:	8082                	ret$/;"	l
fa	./user/ln.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	./user/mkdir.asm	/^  fa:	9301                	srli	a4,a4,0x20$/;"	l
fa	./user/prime.asm	/^  fa:	360080e7          	jalr	864(ra) # 456 <write>$/;"	l
fa	./user/primes.asm	/^  fa:	374080e7          	jalr	884(ra) # 46a <write>$/;"	l
fa	./user/rm.asm	/^  fa:	9301                	srli	a4,a4,0x20$/;"	l
fa	./user/sh.asm	/^      fa:	d0c080e7          	jalr	-756(ra) # e02 <exec>$/;"	l
fa	./user/sleep.asm	/^  fa:	6422                	ld	s0,8(sp)$/;"	l
fa	./user/stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	./user/wc.asm	/^  fa:	316080e7          	jalr	790(ra) # 40c <exit>$/;"	l
fa	./user/zombie.asm	/^  fa:	1080                	addi	s0,sp,96$/;"	l
fa0	./user/grind.asm	/^     fa0:	fff94583          	lbu	a1,-1(s2)$/;"	l
fa0	./user/sh.asm	/^     fa0:	0009079b          	sext.w	a5,s2$/;"	l
fa0	./user/usertests.asm	/^     fa0:	41c080e7          	jalr	1052(ra) # 53b8 <open>$/;"	l
fa4	./user/grind.asm	/^     fa4:	8526                	mv	a0,s1$/;"	l
fa4	./user/sh.asm	/^     fa4:	fe0997e3          	bnez	s3,f92 <vprintf+0x5c>$/;"	l
fa4	./user/usertests.asm	/^     fa4:	0c054963          	bltz	a0,1076 <bigdir+0x10c>$/;"	l
fa6	./user/grind.asm	/^     fa6:	00000097          	auipc	ra,0x0$/;"	l
fa8	./user/sh.asm	/^     fa8:	fd479ee3          	bne	a5,s4,f84 <vprintf+0x4e>$/;"	l
fa8	./user/usertests.asm	/^     fa8:	00004097          	auipc	ra,0x4$/;"	l
faa	./user/grind.asm	/^     faa:	f58080e7          	jalr	-168(ra) # efe <putc>$/;"	l
fac	./user/sh.asm	/^     fac:	89be                	mv	s3,a5$/;"	l
fac	./user/usertests.asm	/^     fac:	3f8080e7          	jalr	1016(ra) # 53a0 <close>$/;"	l
fae	./user/grind.asm	/^     fae:	197d                	addi	s2,s2,-1$/;"	l
fae	./user/sh.asm	/^     fae:	b7e5                	j	f96 <vprintf+0x60>$/;"	l
fail	./user/usertests.asm	/^        fail = 1;$/;"	d
fb0	./user/grind.asm	/^     fb0:	ff3918e3          	bne	s2,s3,fa0 <printint+0x80>$/;"	l
fb0	./user/sh.asm	/^     fb0:	05878063          	beq	a5,s8,ff0 <vprintf+0xba>$/;"	l
fb0	./user/usertests.asm	/^     fb0:	4901                	li	s2,0$/;"	l
fb2	./user/usertests.asm	/^     fb2:	07800a93          	li	s5,120$/;"	l
fb4	./user/grind.asm	/^     fb4:	70e2                	ld	ra,56(sp)$/;"	l
fb4	./user/sh.asm	/^     fb4:	05978c63          	beq	a5,s9,100c <vprintf+0xd6>$/;"	l
fb6	./user/grind.asm	/^     fb6:	7442                	ld	s0,48(sp)$/;"	l
fb6	./user/usertests.asm	/^     fb6:	00005a17          	auipc	s4,0x5$/;"	l
fb8	./user/grind.asm	/^     fb8:	74a2                	ld	s1,40(sp)$/;"	l
fb8	./user/sh.asm	/^     fb8:	07a78863          	beq	a5,s10,1028 <vprintf+0xf2>$/;"	l
fba	./user/grind.asm	/^     fba:	7902                	ld	s2,32(sp)$/;"	l
fba	./user/usertests.asm	/^     fba:	2daa0a13          	addi	s4,s4,730 # 6290 <malloc+0xae2>$/;"	l
fbc	./user/grind.asm	/^     fbc:	69e2                	ld	s3,24(sp)$/;"	l
fbc	./user/sh.asm	/^     fbc:	09b78463          	beq	a5,s11,1044 <vprintf+0x10e>$/;"	l
fbe	./user/grind.asm	/^     fbe:	6121                	addi	sp,sp,64$/;"	l
fbe	./user/usertests.asm	/^     fbe:	1f400b13          	li	s6,500$/;"	l
fc	./user/echo.asm	/^  fc:	ce09                	beqz	a2,116 <memset+0x20>$/;"	l
fc	./user/forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	./user/grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	./user/grind.asm	/^      fc:	6a85                	lui	s5,0x1$/;"	l
fc	./user/init.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	./user/kill.asm	/^  fc:	1141                	addi	sp,sp,-16$/;"	l
fc	./user/ln.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	./user/ls.asm	/^  fc:	0007869b          	sext.w	a3,a5$/;"	l
fc	./user/mkdir.asm	/^  fc:	0705                	addi	a4,a4,1$/;"	l
fc	./user/pingpong.asm	/^  fc:	6422                	ld	s0,8(sp)$/;"	l
fc	./user/rm.asm	/^  fc:	0705                	addi	a4,a4,1$/;"	l
fc	./user/sleep.asm	/^  fc:	0141                	addi	sp,sp,16$/;"	l
fc	./user/usertests.asm	/^      fc:	280080e7          	jalr	640(ra) # 5378 <exit>$/;"	l
fc	./user/zombie.asm	/^  fc:	8baa                	mv	s7,a0$/;"	l
fc0	./user/grind.asm	/^     fc0:	8082                	ret$/;"	l
fc0	./user/sh.asm	/^     fc0:	07300713          	li	a4,115$/;"	l
fc2	./user/grind.asm	/^     fc2:	40b005bb          	negw	a1,a1$/;"	l
fc2	./user/usertests.asm	/^     fc2:	fb540823          	sb	s5,-80(s0)$/;"	l
fc4	./user/sh.asm	/^     fc4:	0ce78663          	beq	a5,a4,1090 <vprintf+0x15a>$/;"	l
fc6	./user/grind.asm	/^     fc6:	4885                	li	a7,1$/;"	l
fc6	./user/usertests.asm	/^     fc6:	41f9579b          	sraiw	a5,s2,0x1f$/;"	l
fc8	./user/grind.asm	/^     fc8:	bf8d                	j	f3a <printint+0x1a>$/;"	l
fc8	./user/sh.asm	/^     fc8:	06300713          	li	a4,99$/;"	l
fca	./user/grind.asm	/^     fca:	7119                	addi	sp,sp,-128$/;"	l
fca	./user/usertests.asm	/^     fca:	01a7d71b          	srliw	a4,a5,0x1a$/;"	l
fcc	./user/grind.asm	/^     fcc:	fc86                	sd	ra,120(sp)$/;"	l
fcc	./user/sh.asm	/^     fcc:	0ee78e63          	beq	a5,a4,10c8 <vprintf+0x192>$/;"	l
fce	./user/grind.asm	/^     fce:	f8a2                	sd	s0,112(sp)$/;"	l
fce	./user/usertests.asm	/^     fce:	012707bb          	addw	a5,a4,s2$/;"	l
fd	./user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	./user/grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	./user/grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	./user/grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/pingpong.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/prime.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/primes.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	./user/sleep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	./user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	./user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	./user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	./user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	./user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	./user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	./user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	./user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	./user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	./user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	./kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	./user/grind.asm	/^     fd0:	f4a6                	sd	s1,104(sp)$/;"	l
fd0	./user/sh.asm	/^     fd0:	11478863          	beq	a5,s4,10e0 <vprintf+0x1aa>$/;"	l
fd1	./user/usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	./user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	./user/grind.asm	/^     fd2:	f0ca                	sd	s2,96(sp)$/;"	l
fd2	./user/usertests.asm	/^     fd2:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
fd4	./user/grind.asm	/^     fd4:	ecce                	sd	s3,88(sp)$/;"	l
fd4	./user/sh.asm	/^     fd4:	85d2                	mv	a1,s4$/;"	l
fd6	./user/grind.asm	/^     fd6:	e8d2                	sd	s4,80(sp)$/;"	l
fd6	./user/sh.asm	/^     fd6:	8556                	mv	a0,s5$/;"	l
fd6	./user/usertests.asm	/^     fd6:	0306869b          	addiw	a3,a3,48$/;"	l
fd8	./user/grind.asm	/^     fd8:	e4d6                	sd	s5,72(sp)$/;"	l
fd8	./user/sh.asm	/^     fd8:	00000097          	auipc	ra,0x0$/;"	l
fda	./user/grind.asm	/^     fda:	e0da                	sd	s6,64(sp)$/;"	l
fda	./user/usertests.asm	/^     fda:	fad408a3          	sb	a3,-79(s0)$/;"	l
fdalloc	./kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	./user/grind.asm	/^     fdc:	fc5e                	sd	s7,56(sp)$/;"	l
fdc	./user/sh.asm	/^     fdc:	e92080e7          	jalr	-366(ra) # e6a <putc>$/;"	l
fde	./user/grind.asm	/^     fde:	f862                	sd	s8,48(sp)$/;"	l
fde	./user/usertests.asm	/^     fde:	03f7f793          	andi	a5,a5,63$/;"	l
fe	./user/cat.asm	/^  fe:	00093603          	ld	a2,0(s2)$/;"	l
fe	./user/echo.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	./user/grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	./user/grind.asm	/^      fe:	77ba8a93          	addi	s5,s5,1915 # 177b <buf.1231+0x10b>$/;"	l
fe	./user/init.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	./user/kill.asm	/^  fe:	e422                	sd	s0,8(sp)$/;"	l
fe	./user/ln.asm	/^  fe:	00054783          	lbu	a5,0(a0)$/;"	l
fe	./user/mkdir.asm	/^  fe:	972a                	add	a4,a4,a0$/;"	l
fe	./user/pingpong.asm	/^  fe:	0141                	addi	sp,sp,16$/;"	l
fe	./user/prime.asm	/^  fe:	b7f9                	j	cc <prime+0xa2>$/;"	l
fe	./user/primes.asm	/^  fe:	b7f9                	j	cc <prime+0xa2>$/;"	l
fe	./user/rm.asm	/^  fe:	972a                	add	a4,a4,a0$/;"	l
fe	./user/sh.asm	/^      fe:	6490                	ld	a2,8(s1)$/;"	l
fe	./user/sleep.asm	/^  fe:	8082                	ret$/;"	l
fe	./user/stressfs.asm	/^  fe:	290080e7          	jalr	656(ra) # 38a <wait>$/;"	l
fe	./user/wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	./user/zombie.asm	/^  fe:	8a2e                	mv	s4,a1$/;"	l
fe0	./user/grind.asm	/^     fe0:	f466                	sd	s9,40(sp)$/;"	l
fe0	./user/sh.asm	/^     fe0:	85ca                	mv	a1,s2$/;"	l
fe2	./user/grind.asm	/^     fe2:	f06a                	sd	s10,32(sp)$/;"	l
fe2	./user/sh.asm	/^     fe2:	8556                	mv	a0,s5$/;"	l
fe2	./user/usertests.asm	/^     fe2:	9f99                	subw	a5,a5,a4$/;"	l
fe4	./user/grind.asm	/^     fe4:	ec6e                	sd	s11,24(sp)$/;"	l
fe4	./user/sh.asm	/^     fe4:	00000097          	auipc	ra,0x0$/;"	l
fe4	./user/usertests.asm	/^     fe4:	0307879b          	addiw	a5,a5,48$/;"	l
fe6	./user/grind.asm	/^     fe6:	0100                	addi	s0,sp,128$/;"	l
fe8	./user/grind.asm	/^     fe8:	0005c903          	lbu	s2,0(a1)$/;"	l
fe8	./user/sh.asm	/^     fe8:	e86080e7          	jalr	-378(ra) # e6a <putc>$/;"	l
fe8	./user/usertests.asm	/^     fe8:	faf40923          	sb	a5,-78(s0)$/;"	l
fec	./user/grind.asm	/^     fec:	18090f63          	beqz	s2,118a <vprintf+0x1c0>$/;"	l
fec	./user/sh.asm	/^     fec:	4981                	li	s3,0$/;"	l
fec	./user/usertests.asm	/^     fec:	fa0409a3          	sb	zero,-77(s0)$/;"	l
fee	./user/sh.asm	/^     fee:	b765                	j	f96 <vprintf+0x60>$/;"	l
fetchaddr	./kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f
fetchstr	./kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f
ff	./kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	./user/grind.asm	/^     ff0:	8aaa                	mv	s5,a0$/;"	l
ff0	./user/sh.asm	/^     ff0:	008b0913          	addi	s2,s6,8$/;"	l
ff0	./user/usertests.asm	/^     ff0:	fb040593          	addi	a1,s0,-80$/;"	l
ff2	./user/grind.asm	/^     ff2:	8b32                	mv	s6,a2$/;"	l
ff4	./user/grind.asm	/^     ff4:	00158493          	addi	s1,a1,1$/;"	l
ff4	./user/sh.asm	/^     ff4:	4685                	li	a3,1$/;"	l
ff4	./user/usertests.asm	/^     ff4:	8552                	mv	a0,s4$/;"	l
ff6	./user/sh.asm	/^     ff6:	4629                	li	a2,10$/;"	l
ff6	./user/usertests.asm	/^     ff6:	00004097          	auipc	ra,0x4$/;"	l
ff8	./user/grind.asm	/^     ff8:	4981                	li	s3,0$/;"	l
ff8	./user/sh.asm	/^     ff8:	000b2583          	lw	a1,0(s6)$/;"	l
ffa	./user/grind.asm	/^     ffa:	02500a13          	li	s4,37$/;"	l
ffa	./user/usertests.asm	/^     ffa:	3e2080e7          	jalr	994(ra) # 53d8 <link>$/;"	l
ffc	./user/sh.asm	/^     ffc:	8556                	mv	a0,s5$/;"	l
ffe	./user/grind.asm	/^     ffe:	06400c13          	li	s8,100$/;"	l
ffe	./user/sh.asm	/^     ffe:	00000097          	auipc	ra,0x0$/;"	l
ffe	./user/usertests.asm	/^     ffe:	84aa                	mv	s1,a0$/;"	l
file	./kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon8	typeref:struct:__anon8::file	file:
file	./kernel/file.h	/^struct file {$/;"	s
file	./user/sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	./kernel/file.c	/^filealloc(void)$/;"	f
fileclose	./kernel/file.c	/^fileclose(struct file *f)$/;"	f
filedup	./kernel/file.c	/^filedup(struct file *f)$/;"	f
fileinit	./kernel/file.c	/^fileinit(void)$/;"	f
fileno	./gradelib.py	/^    def fileno(self):$/;"	f
fileno	./gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileread	./kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f
filestat	./kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f
filesz	./kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	./kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f
first	./kernel/kernel.asm	/^    first = 0;$/;"	d
flags	./kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	./kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	./kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	./kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:UsedArea
flags	./kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:VRingDesc
fmtname	./user/ls.c	/^fmtname(char *path)$/;"	f
fname	./user/usertests.asm	/^    fname = names[i];$/;"	d
fname	./user/usertests.asm	/^    fname = names[pi];$/;"	d
fork	./kernel/proc.c	/^fork(void)$/;"	f
fork	./user/cat.asm	/^fork:$/;"	l
fork	./user/echo.asm	/^fork:$/;"	l
fork	./user/forktest.asm	/^fork:$/;"	l
fork	./user/grep.asm	/^fork:$/;"	l
fork	./user/grind.asm	/^fork:$/;"	l
fork	./user/init.asm	/^fork:$/;"	l
fork	./user/kill.asm	/^fork:$/;"	l
fork	./user/ln.asm	/^fork:$/;"	l
fork	./user/ls.asm	/^fork:$/;"	l
fork	./user/mkdir.asm	/^fork:$/;"	l
fork	./user/pingpong.asm	/^fork:$/;"	l
fork	./user/prime.asm	/^fork:$/;"	l
fork	./user/primes.asm	/^fork:$/;"	l
fork	./user/rm.asm	/^fork:$/;"	l
fork	./user/sh.asm	/^fork:$/;"	l
fork	./user/sleep.asm	/^fork:$/;"	l
fork	./user/stressfs.asm	/^fork:$/;"	l
fork	./user/usertests.asm	/^fork:$/;"	l
fork	./user/usys.S	/^fork:$/;"	l
fork	./user/wc.asm	/^fork:$/;"	l
fork	./user/zombie.asm	/^fork:$/;"	l
fork1	./user/sh.c	/^fork1(void)$/;"	f
forkfork	./user/usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	./user/usertests.c	/^forkforkfork(char *s)$/;"	f
forkret	./kernel/proc.c	/^forkret(void)$/;"	f
forktest	./user/forktest.c	/^forktest(void)$/;"	f
forktest	./user/usertests.c	/^forktest(char *s)$/;"	f
found	./kernel/kernel.asm	/^        found = 1;$/;"	d
fourfiles	./user/usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	./user/usertests.c	/^fourteen(char *s)$/;"	f
fprintf	./user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	./kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free	./user/umalloc.c	/^free(void *ap)$/;"	f
free_chain	./kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	file:
free_desc	./kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	file:
freeblock	./mkfs/mkfs.c	/^uint freeblock;$/;"	v
freeinode	./mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	./kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon1	typeref:struct:__anon1::run	file:
freep	./user/cat.asm	/^      freep = prevp;$/;"	d
freep	./user/cat.asm	/^  freep = p;$/;"	d
freep	./user/echo.asm	/^      freep = prevp;$/;"	d
freep	./user/echo.asm	/^  freep = p;$/;"	d
freep	./user/grep.asm	/^      freep = prevp;$/;"	d
freep	./user/grep.asm	/^  freep = p;$/;"	d
freep	./user/grind.asm	/^      freep = prevp;$/;"	d
freep	./user/grind.asm	/^  freep = p;$/;"	d
freep	./user/init.asm	/^      freep = prevp;$/;"	d
freep	./user/init.asm	/^  freep = p;$/;"	d
freep	./user/kill.asm	/^      freep = prevp;$/;"	d
freep	./user/kill.asm	/^  freep = p;$/;"	d
freep	./user/ln.asm	/^      freep = prevp;$/;"	d
freep	./user/ln.asm	/^  freep = p;$/;"	d
freep	./user/ls.asm	/^      freep = prevp;$/;"	d
freep	./user/ls.asm	/^  freep = p;$/;"	d
freep	./user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	./user/mkdir.asm	/^  freep = p;$/;"	d
freep	./user/pingpong.asm	/^      freep = prevp;$/;"	d
freep	./user/pingpong.asm	/^  freep = p;$/;"	d
freep	./user/prime.asm	/^      freep = prevp;$/;"	d
freep	./user/prime.asm	/^  freep = p;$/;"	d
freep	./user/primes.asm	/^      freep = prevp;$/;"	d
freep	./user/primes.asm	/^  freep = p;$/;"	d
freep	./user/rm.asm	/^      freep = prevp;$/;"	d
freep	./user/rm.asm	/^  freep = p;$/;"	d
freep	./user/sh.asm	/^      freep = prevp;$/;"	d
freep	./user/sh.asm	/^  freep = p;$/;"	d
freep	./user/sleep.asm	/^      freep = prevp;$/;"	d
freep	./user/sleep.asm	/^  freep = p;$/;"	d
freep	./user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	./user/stressfs.asm	/^  freep = p;$/;"	d
freep	./user/umalloc.c	/^static Header *freep;$/;"	v	file:
freep	./user/usertests.asm	/^      freep = prevp;$/;"	d
freep	./user/usertests.asm	/^  freep = p;$/;"	d
freep	./user/wc.asm	/^      freep = prevp;$/;"	d
freep	./user/wc.asm	/^  freep = p;$/;"	d
freep	./user/zombie.asm	/^      freep = prevp;$/;"	d
freep	./user/zombie.asm	/^  freep = p;$/;"	d
freeproc	./kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	file:
freerange	./kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f
freewalk	./kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f
fsfd	./mkfs/mkfs.c	/^int fsfd;$/;"	v
fsfull	./user/usertests.c	/^fsfull()$/;"	f
fsinit	./kernel/fs.c	/^fsinit(int dev) {$/;"	f
fstat	./user/cat.asm	/^fstat:$/;"	l
fstat	./user/echo.asm	/^fstat:$/;"	l
fstat	./user/forktest.asm	/^fstat:$/;"	l
fstat	./user/grep.asm	/^fstat:$/;"	l
fstat	./user/grind.asm	/^fstat:$/;"	l
fstat	./user/init.asm	/^fstat:$/;"	l
fstat	./user/kill.asm	/^fstat:$/;"	l
fstat	./user/ln.asm	/^fstat:$/;"	l
fstat	./user/ls.asm	/^fstat:$/;"	l
fstat	./user/mkdir.asm	/^fstat:$/;"	l
fstat	./user/pingpong.asm	/^fstat:$/;"	l
fstat	./user/prime.asm	/^fstat:$/;"	l
fstat	./user/primes.asm	/^fstat:$/;"	l
fstat	./user/rm.asm	/^fstat:$/;"	l
fstat	./user/sh.asm	/^fstat:$/;"	l
fstat	./user/sleep.asm	/^fstat:$/;"	l
fstat	./user/stressfs.asm	/^fstat:$/;"	l
fstat	./user/usertests.asm	/^fstat:$/;"	l
fstat	./user/usys.S	/^fstat:$/;"	l
fstat	./user/wc.asm	/^fstat:$/;"	l
fstat	./user/zombie.asm	/^fstat:$/;"	l
ftable	./kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anon8
func	./user/b.c	/^void func(int *input, int num){$/;"	f
get_current_test	./gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	./gradelib.py	/^    def get_gdb_port():$/;"	f
getcmd	./user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	./user/cat.asm	/^getpid:$/;"	l
getpid	./user/echo.asm	/^getpid:$/;"	l
getpid	./user/forktest.asm	/^getpid:$/;"	l
getpid	./user/grep.asm	/^getpid:$/;"	l
getpid	./user/grind.asm	/^getpid:$/;"	l
getpid	./user/init.asm	/^getpid:$/;"	l
getpid	./user/kill.asm	/^getpid:$/;"	l
getpid	./user/ln.asm	/^getpid:$/;"	l
getpid	./user/ls.asm	/^getpid:$/;"	l
getpid	./user/mkdir.asm	/^getpid:$/;"	l
getpid	./user/pingpong.asm	/^getpid:$/;"	l
getpid	./user/prime.asm	/^getpid:$/;"	l
getpid	./user/primes.asm	/^getpid:$/;"	l
getpid	./user/rm.asm	/^getpid:$/;"	l
getpid	./user/sh.asm	/^getpid:$/;"	l
getpid	./user/sleep.asm	/^getpid:$/;"	l
getpid	./user/stressfs.asm	/^getpid:$/;"	l
getpid	./user/usertests.asm	/^getpid:$/;"	l
getpid	./user/usys.S	/^getpid:$/;"	l
getpid	./user/wc.asm	/^getpid:$/;"	l
getpid	./user/zombie.asm	/^getpid:$/;"	l
gets	./user/ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	./user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
go	./user/grind.c	/^go(int which_child)$/;"	f
gp	./kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe
grep	./user/grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	./kernel/proc.c	/^growproc(int n)$/;"	f
handle_output	./gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_output	./gradelib.py	/^        def handle_output(output):$/;"	f	function:shell_script.setup_call_on_line
handle_read	./gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	./gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
havekids	./kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	./kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	./kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon6	typeref:struct:__anon6::buf	file:
header	./user/umalloc.c	/^union header {$/;"	u	file:
hi	./user/grind.asm	/^    hi = x \/ 127773;$/;"	d
holding	./kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f
holdingsleep	./kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	./kernel/date.h	/^  uint hour;$/;"	m	struct:rtcdate
i	./kernel/kernel.asm	/^      i = disk.desc[i].next;$/;"	d
i	./kernel/kernel.asm	/^  i = 0;$/;"	d
i	./user/cat.asm	/^  i = 0;$/;"	d
i	./user/echo.asm	/^  i = 0;$/;"	d
i	./user/grep.asm	/^  i = 0;$/;"	d
i	./user/grind.asm	/^  i = 0;$/;"	d
i	./user/init.asm	/^  i = 0;$/;"	d
i	./user/kill.asm	/^  i = 0;$/;"	d
i	./user/ln.asm	/^  i = 0;$/;"	d
i	./user/ls.asm	/^  i = 0;$/;"	d
i	./user/mkdir.asm	/^  i = 0;$/;"	d
i	./user/pingpong.asm	/^  i = 0;$/;"	d
i	./user/prime.asm	/^  i = 0;$/;"	d
i	./user/primes.asm	/^  i = 0;$/;"	d
i	./user/rm.asm	/^  i = 0;$/;"	d
i	./user/sh.asm	/^  i = 0;$/;"	d
i	./user/sleep.asm	/^  i = 0;$/;"	d
i	./user/stressfs.asm	/^  i = 0;$/;"	d
i	./user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	./user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	./user/usertests.asm	/^  i = 0;$/;"	d
i	./user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	./user/wc.asm	/^  i = 0;$/;"	d
i	./user/zombie.asm	/^  i = 0;$/;"	d
ialloc	./kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	./mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	./mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	./kernel/fs.c	/^} icache;$/;"	v	typeref:struct:__anon5
id	./kernel/virtio.h	/^  uint16 id;$/;"	m	struct:UsedArea
id	./kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:VRingUsedElem
idup	./kernel/fs.c	/^idup(struct inode *ip)$/;"	f
iget	./kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
iinit	./kernel/fs.c	/^iinit()$/;"	f
ilock	./kernel/fs.c	/^ilock(struct inode *ip)$/;"	f
info	./kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon3	file:
init	./user/initcode.S	/^init:$/;"	l
initcode	./kernel/proc.c	/^uchar initcode[] = {$/;"	v
initlock	./kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	./kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f
initproc	./kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	./kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc
initsleeplock	./kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
ino	./kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	./kernel/file.h	/^struct inode {$/;"	s
inode	./kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon5	typeref:struct:__anon5::inode	file:
inodestart	./kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
install_trans	./kernel/log.c	/^install_trans(void)$/;"	f	file:
int	./kernel/kernel.asm	/^int$/;"	l
int	./user/cat.asm	/^int$/;"	l
int	./user/echo.asm	/^int$/;"	l
int	./user/forktest.asm	/^int$/;"	l
int	./user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	./user/grep.asm	/^int$/;"	l
int	./user/grind.asm	/^int$/;"	l
int	./user/init.asm	/^int$/;"	l
int	./user/kill.asm	/^int$/;"	l
int	./user/ln.asm	/^int$/;"	l
int	./user/ls.asm	/^int$/;"	l
int	./user/mkdir.asm	/^int$/;"	l
int	./user/pingpong.asm	/^int main()$/;"	l
int	./user/pingpong.asm	/^int$/;"	l
int	./user/prime.asm	/^int$/;"	l
int	./user/primes.asm	/^int$/;"	l
int	./user/rm.asm	/^int$/;"	l
int	./user/sh.asm	/^int$/;"	l
int	./user/sleep.asm	/^int main(int argc,char *argv[])$/;"	l
int	./user/sleep.asm	/^int$/;"	l
int	./user/stressfs.asm	/^int$/;"	l
int	./user/usertests.asm	/^int$/;"	l
int	./user/wc.asm	/^int$/;"	l
int	./user/zombie.asm	/^int$/;"	l
intena	./kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	./kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu
intr_get	./kernel/riscv.h	/^intr_get()$/;"	f
intr_off	./kernel/riscv.h	/^intr_off()$/;"	f
intr_on	./kernel/riscv.h	/^intr_on()$/;"	f
inum	./kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	./kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	./kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inword	./user/wc.asm	/^        inword = 0;$/;"	d
inword	./user/wc.asm	/^        inword = 1;$/;"	d
inword	./user/wc.asm	/^  inword = 0;$/;"	d
ip	./kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:file::inode
ip	./kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	./kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	./kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	./kernel/kernel.asm	/^    ip = next;$/;"	d
ip	./kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	./kernel/fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	./user/usertests.c	/^iputtest(char *s)$/;"	f
iref	./user/usertests.c	/^iref(char *s)$/;"	f
isdirempty	./kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
iter	./user/grind.c	/^iter()$/;"	f
itrunc	./kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f
iunlock	./kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	./kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	./kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f
justone	./user/usertests.asm	/^    justone = argv[1];$/;"	d
kalloc	./kernel/kalloc.c	/^kalloc(void)$/;"	f
kernel_hartid	./kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe
kernel_pagetable	./kernel/kernel.asm	/^  kernel_pagetable = (pagetable_t) kalloc();$/;"	d
kernel_pagetable	./kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v
kernel_satp	./kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe
kernel_sp	./kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe
kernel_trap	./kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe
kerneltrap	./kernel/trap.c	/^kerneltrap()$/;"	f
kernelvec	./kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	./user/usertests.c	/^kernmem(char *s)$/;"	f
kfree	./kernel/kalloc.c	/^kfree(void *pa)$/;"	f
kill	./gradelib.py	/^    def kill(self):$/;"	f
kill	./kernel/proc.c	/^kill(int pid)$/;"	f
kill	./user/cat.asm	/^kill:$/;"	l
kill	./user/echo.asm	/^kill:$/;"	l
kill	./user/forktest.asm	/^kill:$/;"	l
kill	./user/grep.asm	/^kill:$/;"	l
kill	./user/grind.asm	/^kill:$/;"	l
kill	./user/init.asm	/^kill:$/;"	l
kill	./user/kill.asm	/^kill:$/;"	l
kill	./user/ln.asm	/^kill:$/;"	l
kill	./user/ls.asm	/^kill:$/;"	l
kill	./user/mkdir.asm	/^kill:$/;"	l
kill	./user/pingpong.asm	/^kill:$/;"	l
kill	./user/prime.asm	/^kill:$/;"	l
kill	./user/primes.asm	/^kill:$/;"	l
kill	./user/rm.asm	/^kill:$/;"	l
kill	./user/sh.asm	/^kill:$/;"	l
kill	./user/sleep.asm	/^kill:$/;"	l
kill	./user/stressfs.asm	/^kill:$/;"	l
kill	./user/usertests.asm	/^kill:$/;"	l
kill	./user/usys.S	/^kill:$/;"	l
kill	./user/wc.asm	/^kill:$/;"	l
kill	./user/zombie.asm	/^kill:$/;"	l
killed	./kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit	./kernel/kalloc.c	/^kinit()$/;"	f
kmem	./kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon1
kstack	./kernel/proc.h	/^  uint64 kstack;               \/\/ Virtual address of kernel stack$/;"	m	struct:proc
kvminit	./kernel/vm.c	/^kvminit()$/;"	f
kvminithart	./kernel/vm.c	/^kvminithart()$/;"	f
kvmmap	./kernel/vm.c	/^kvmmap(uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f
kvmpa	./kernel/vm.c	/^kvmpa(uint64 va)$/;"	f
l	./user/wc.asm	/^  l = w = c = 0;$/;"	d
last	./kernel/kernel.asm	/^      last = s+1;$/;"	d
last	./kernel/kernel.asm	/^  last = PGROUNDDOWN(va + size - 1);$/;"	d
left	./user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	./user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	./kernel/kernel.asm	/^  len = path - s;$/;"	d
len	./kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingDesc
len	./kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingUsedElem
len	./user/prime.asm	/^	len = read(0,&n,sizeof(int));$/;"	d
len	./user/primes.asm	/^	len = read(0,&n,sizeof(int));$/;"	d
lh	./kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
link	./user/cat.asm	/^link:$/;"	l
link	./user/echo.asm	/^link:$/;"	l
link	./user/forktest.asm	/^link:$/;"	l
link	./user/grep.asm	/^link:$/;"	l
link	./user/grind.asm	/^link:$/;"	l
link	./user/init.asm	/^link:$/;"	l
link	./user/kill.asm	/^link:$/;"	l
link	./user/ln.asm	/^link:$/;"	l
link	./user/ls.asm	/^link:$/;"	l
link	./user/mkdir.asm	/^link:$/;"	l
link	./user/pingpong.asm	/^link:$/;"	l
link	./user/prime.asm	/^link:$/;"	l
link	./user/primes.asm	/^link:$/;"	l
link	./user/rm.asm	/^link:$/;"	l
link	./user/sh.asm	/^link:$/;"	l
link	./user/sleep.asm	/^link:$/;"	l
link	./user/stressfs.asm	/^link:$/;"	l
link	./user/usertests.asm	/^link:$/;"	l
link	./user/usys.S	/^link:$/;"	l
link	./user/wc.asm	/^link:$/;"	l
link	./user/zombie.asm	/^link:$/;"	l
linktest	./user/usertests.c	/^linktest(char *s)$/;"	f
linkunlink	./user/usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	./user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	./user/sh.c	/^struct listcmd {$/;"	s	file:
lk	./kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
lo	./user/grind.asm	/^    lo = x % 127773;$/;"	d
loadseg	./kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	file:
lock	./kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	./kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	./kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	./kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anon8	typeref:struct:__anon8::spinlock	file:
lock	./kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	./kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	./kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
lock	./kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	./kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	./kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	./kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:proc::spinlock
locked	./kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	./kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	./kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	./kernel/printf.c	/^  int locking;$/;"	m	struct:__anon4	file:
log	./kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	./kernel/log.c	/^struct log {$/;"	s	file:
log_write	./kernel/log.c	/^log_write(struct buf *b)$/;"	f
logheader	./kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	./kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	./user/ls.c	/^ls(char *path)$/;"	f
m	./kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	./kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	./kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	./user/grep.asm	/^  m = 0;$/;"	d
m1	./user/usertests.asm	/^      m1 = m2;$/;"	d
m1	./user/usertests.asm	/^    m1 = 0;$/;"	d
m1	./user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	./user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	./kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	./kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
magic	./kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock
main	./a.c	/^int main()$/;"	f
main	./kernel/main.c	/^main()$/;"	f
main	./mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	./user/a.c	/^int main()$/;"	f
main	./user/b.c	/^int main(){$/;"	f
main	./user/cat.c	/^main(int argc, char *argv[])$/;"	f
main	./user/echo.c	/^main(int argc, char *argv[])$/;"	f
main	./user/find.c	/^int main()$/;"	f
main	./user/forktest.c	/^main(void)$/;"	f
main	./user/grep.c	/^main(int argc, char *argv[])$/;"	f
main	./user/grind.c	/^main()$/;"	f
main	./user/init.c	/^main(void)$/;"	f
main	./user/kill.c	/^main(int argc, char **argv)$/;"	f
main	./user/ln.c	/^main(int argc, char *argv[])$/;"	f
main	./user/ls.c	/^main(int argc, char *argv[])$/;"	f
main	./user/mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	./user/pingpong.c	/^int main()$/;"	f
main	./user/primes.c	/^int main()$/;"	f
main	./user/rm.c	/^main(int argc, char *argv[])$/;"	f
main	./user/sh.c	/^main(void)$/;"	f
main	./user/sleep.c	/^int main(int argc,char *argv[])$/;"	f
main	./user/stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	./user/usertests.c	/^main(int argc, char *argv[])$/;"	f
main	./user/wc.c	/^main(int argc, char *argv[])$/;"	f
main	./user/zombie.c	/^main(void)$/;"	f
major	./kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file
major	./kernel/file.h	/^  short major;$/;"	m	struct:inode
major	./kernel/file.h	12;"	d
major	./kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode
make	./gradelib.py	/^def make(*target):$/;"	f
malloc	./user/umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	./kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f
match	./gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match	./user/grep.c	/^match(char *re, char *text)$/;"	f
matchhere	./user/grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	./user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
maybe_unlink	./gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mem	./kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	./kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	./user/usertests.c	/^mem(char *s)$/;"	f
memcmp	./kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcmp	./user/ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f
memcpy	./kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memcpy	./user/ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	./kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	./user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	./kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	./user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	./kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
min	./kernel/fs.c	24;"	d	file:
min	./mkfs/mkfs.c	261;"	d	file:
minor	./kernel/file.h	/^  short minor;$/;"	m	struct:inode
minor	./kernel/file.h	13;"	d
minor	./kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode
minute	./kernel/date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkdev	./kernel/file.h	14;"	d
mkdir	./user/cat.asm	/^mkdir:$/;"	l
mkdir	./user/echo.asm	/^mkdir:$/;"	l
mkdir	./user/forktest.asm	/^mkdir:$/;"	l
mkdir	./user/grep.asm	/^mkdir:$/;"	l
mkdir	./user/grind.asm	/^mkdir:$/;"	l
mkdir	./user/init.asm	/^mkdir:$/;"	l
mkdir	./user/kill.asm	/^mkdir:$/;"	l
mkdir	./user/ln.asm	/^mkdir:$/;"	l
mkdir	./user/ls.asm	/^mkdir:$/;"	l
mkdir	./user/mkdir.asm	/^mkdir:$/;"	l
mkdir	./user/pingpong.asm	/^mkdir:$/;"	l
mkdir	./user/prime.asm	/^mkdir:$/;"	l
mkdir	./user/primes.asm	/^mkdir:$/;"	l
mkdir	./user/rm.asm	/^mkdir:$/;"	l
mkdir	./user/sh.asm	/^mkdir:$/;"	l
mkdir	./user/sleep.asm	/^mkdir:$/;"	l
mkdir	./user/stressfs.asm	/^mkdir:$/;"	l
mkdir	./user/usertests.asm	/^mkdir:$/;"	l
mkdir	./user/usys.S	/^mkdir:$/;"	l
mkdir	./user/wc.asm	/^mkdir:$/;"	l
mkdir	./user/zombie.asm	/^mkdir:$/;"	l
mknod	./user/cat.asm	/^mknod:$/;"	l
mknod	./user/echo.asm	/^mknod:$/;"	l
mknod	./user/forktest.asm	/^mknod:$/;"	l
mknod	./user/grep.asm	/^mknod:$/;"	l
mknod	./user/grind.asm	/^mknod:$/;"	l
mknod	./user/init.asm	/^mknod:$/;"	l
mknod	./user/kill.asm	/^mknod:$/;"	l
mknod	./user/ln.asm	/^mknod:$/;"	l
mknod	./user/ls.asm	/^mknod:$/;"	l
mknod	./user/mkdir.asm	/^mknod:$/;"	l
mknod	./user/pingpong.asm	/^mknod:$/;"	l
mknod	./user/prime.asm	/^mknod:$/;"	l
mknod	./user/primes.asm	/^mknod:$/;"	l
mknod	./user/rm.asm	/^mknod:$/;"	l
mknod	./user/sh.asm	/^mknod:$/;"	l
mknod	./user/sleep.asm	/^mknod:$/;"	l
mknod	./user/stressfs.asm	/^mknod:$/;"	l
mknod	./user/usertests.asm	/^mknod:$/;"	l
mknod	./user/usys.S	/^mknod:$/;"	l
mknod	./user/wc.asm	/^mknod:$/;"	l
mknod	./user/zombie.asm	/^mknod:$/;"	l
mode	./user/sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	./kernel/date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	./user/umalloc.c	/^morecore(uint nu)$/;"	f	file:
mscratch0	./kernel/start.c	/^uint64 mscratch0[NCPU * 32];$/;"	v
mycpu	./kernel/proc.c	/^mycpu(void) {$/;"	f
myproc	./kernel/proc.c	/^myproc(void) {$/;"	f
n	./gradelib.py	/^            n = 0$/;"	v	class:shell_script.setup_call_on_line.context
n	./kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	./kernel/kernel.asm	/^      n = len;$/;"	d
n	./kernel/kernel.asm	/^      n = max;$/;"	d
n	./kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	./kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	./kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	./kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	./kernel/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	./user/cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/cat.asm	/^  n = 0;$/;"	d
n	./user/echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/echo.asm	/^  n = 0;$/;"	d
n	./user/forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/forktest.asm	/^  n = 0;$/;"	d
n	./user/grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/grep.asm	/^  n = 0;$/;"	d
n	./user/grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/grind.asm	/^  n = 0;$/;"	d
n	./user/init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/init.asm	/^  n = 0;$/;"	d
n	./user/kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/kill.asm	/^  n = 0;$/;"	d
n	./user/ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/ln.asm	/^  n = 0;$/;"	d
n	./user/ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/ls.asm	/^  n = 0;$/;"	d
n	./user/mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/mkdir.asm	/^  n = 0;$/;"	d
n	./user/pingpong.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/pingpong.asm	/^  n = 0;$/;"	d
n	./user/prime.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/prime.asm	/^  n = 0;$/;"	d
n	./user/primes.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/primes.asm	/^  n = 0;$/;"	d
n	./user/rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/rm.asm	/^  n = 0;$/;"	d
n	./user/sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/sh.asm	/^  n = 0;$/;"	d
n	./user/sleep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/sleep.asm	/^  n = 0;$/;"	d
n	./user/stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/stressfs.asm	/^  n = 0;$/;"	d
n	./user/usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	./user/usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	./user/usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	./user/usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	./user/usertests.asm	/^  n = 0;$/;"	d
n	./user/usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	./user/usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	./user/wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/wc.asm	/^  n = 0;$/;"	d
n	./user/zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	./user/zombie.asm	/^  n = 0;$/;"	d
n1	./kernel/kernel.asm	/^        n1 = max;$/;"	d
name	./kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	./kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	./kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	./kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	./user/usertests.c	/^char name[3];$/;"	v
namecmp	./kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	./kernel/fs.c	/^namei(char *path)$/;"	f
nameiparent	./kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	./kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	./mkfs/mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	./kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	./mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	./user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	./user/cat.asm	/^    neg = 1;$/;"	d
neg	./user/cat.asm	/^  neg = 0;$/;"	d
neg	./user/echo.asm	/^    neg = 1;$/;"	d
neg	./user/echo.asm	/^  neg = 0;$/;"	d
neg	./user/grep.asm	/^    neg = 1;$/;"	d
neg	./user/grep.asm	/^  neg = 0;$/;"	d
neg	./user/grind.asm	/^    neg = 1;$/;"	d
neg	./user/grind.asm	/^  neg = 0;$/;"	d
neg	./user/init.asm	/^    neg = 1;$/;"	d
neg	./user/init.asm	/^  neg = 0;$/;"	d
neg	./user/kill.asm	/^    neg = 1;$/;"	d
neg	./user/kill.asm	/^  neg = 0;$/;"	d
neg	./user/ln.asm	/^    neg = 1;$/;"	d
neg	./user/ln.asm	/^  neg = 0;$/;"	d
neg	./user/ls.asm	/^    neg = 1;$/;"	d
neg	./user/ls.asm	/^  neg = 0;$/;"	d
neg	./user/mkdir.asm	/^    neg = 1;$/;"	d
neg	./user/mkdir.asm	/^  neg = 0;$/;"	d
neg	./user/pingpong.asm	/^    neg = 1;$/;"	d
neg	./user/pingpong.asm	/^  neg = 0;$/;"	d
neg	./user/prime.asm	/^    neg = 1;$/;"	d
neg	./user/prime.asm	/^  neg = 0;$/;"	d
neg	./user/primes.asm	/^    neg = 1;$/;"	d
neg	./user/primes.asm	/^  neg = 0;$/;"	d
neg	./user/rm.asm	/^    neg = 1;$/;"	d
neg	./user/rm.asm	/^  neg = 0;$/;"	d
neg	./user/sh.asm	/^    neg = 1;$/;"	d
neg	./user/sh.asm	/^  neg = 0;$/;"	d
neg	./user/sleep.asm	/^    neg = 1;$/;"	d
neg	./user/sleep.asm	/^  neg = 0;$/;"	d
neg	./user/stressfs.asm	/^    neg = 1;$/;"	d
neg	./user/stressfs.asm	/^  neg = 0;$/;"	d
neg	./user/usertests.asm	/^    neg = 1;$/;"	d
neg	./user/usertests.asm	/^  neg = 0;$/;"	d
neg	./user/wc.asm	/^    neg = 1;$/;"	d
neg	./user/wc.asm	/^  neg = 0;$/;"	d
neg	./user/zombie.asm	/^    neg = 1;$/;"	d
neg	./user/zombie.asm	/^  neg = 0;$/;"	d
next	./kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	./kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
next	./kernel/virtio.h	/^  uint16 next;$/;"	m	struct:VRingDesc
nextpid	./kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	./kernel/proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	./mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	./kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	./kernel/file.h	/^  short nlink;$/;"	m	struct:inode
nlink	./kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	./kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	./kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	./mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	./mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
noff	./kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu
nread	./kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nulterminate	./user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	./kernel/kernel.asm	/^  num = p->trapframe->a7;$/;"	d
nunits	./user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/pingpong.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/prime.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/primes.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/sleep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	./user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	./kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
off	./kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	./kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file
ofile	./kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	./user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	./kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	./kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	./user/cat.asm	/^open:$/;"	l
open	./user/echo.asm	/^open:$/;"	l
open	./user/forktest.asm	/^open:$/;"	l
open	./user/grep.asm	/^open:$/;"	l
open	./user/grind.asm	/^open:$/;"	l
open	./user/init.asm	/^open:$/;"	l
open	./user/kill.asm	/^open:$/;"	l
open	./user/ln.asm	/^open:$/;"	l
open	./user/ls.asm	/^open:$/;"	l
open	./user/mkdir.asm	/^open:$/;"	l
open	./user/pingpong.asm	/^open:$/;"	l
open	./user/prime.asm	/^open:$/;"	l
open	./user/primes.asm	/^open:$/;"	l
open	./user/rm.asm	/^open:$/;"	l
open	./user/sh.asm	/^open:$/;"	l
open	./user/sleep.asm	/^open:$/;"	l
open	./user/stressfs.asm	/^open:$/;"	l
open	./user/usertests.asm	/^open:$/;"	l
open	./user/usys.S	/^open:$/;"	l
open	./user/wc.asm	/^open:$/;"	l
open	./user/zombie.asm	/^open:$/;"	l
openiputtest	./user/usertests.c	/^openiputtest(char *s)$/;"	f
opentest	./user/usertests.c	/^opentest(char *s)$/;"	f
os	./kernel/kernel.asm	/^  os = s;$/;"	d
os	./user/cat.asm	/^  os = s;$/;"	d
os	./user/echo.asm	/^  os = s;$/;"	d
os	./user/forktest.asm	/^  os = s;$/;"	d
os	./user/grep.asm	/^  os = s;$/;"	d
os	./user/grind.asm	/^  os = s;$/;"	d
os	./user/init.asm	/^  os = s;$/;"	d
os	./user/kill.asm	/^  os = s;$/;"	d
os	./user/ln.asm	/^  os = s;$/;"	d
os	./user/ls.asm	/^  os = s;$/;"	d
os	./user/mkdir.asm	/^  os = s;$/;"	d
os	./user/pingpong.asm	/^  os = s;$/;"	d
os	./user/prime.asm	/^  os = s;$/;"	d
os	./user/primes.asm	/^  os = s;$/;"	d
os	./user/rm.asm	/^  os = s;$/;"	d
os	./user/sh.asm	/^  os = s;$/;"	d
os	./user/sleep.asm	/^  os = s;$/;"	d
os	./user/stressfs.asm	/^  os = s;$/;"	d
os	./user/usertests.asm	/^  os = s;$/;"	d
os	./user/wc.asm	/^  os = s;$/;"	d
os	./user/zombie.asm	/^  os = s;$/;"	d
outstanding	./kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
p	./kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	./kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	./kernel/kernel.asm	/^  p = myproc();$/;"	d
p	./user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/grep.asm	/^      p = q+1;$/;"	d
p	./user/grep.asm	/^    p = buf;$/;"	d
p	./user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	./user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/pingpong.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/prime.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/primes.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/sleep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	./user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	./user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	./kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	./kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	./kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	./kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	./kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
pages	./kernel/virtio_disk.c	/^  char pages[2*PGSIZE];$/;"	m	struct:disk	file:
pagetable	./kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	./kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	./kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	./kernel/proc.h	/^  pagetable_t pagetable;       \/\/ User page table$/;"	m	struct:proc
pagetable_t	./kernel/kernel.asm	/^pagetable_t$/;"	l
pagetable_t	./kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t
panic	./kernel/printf.c	/^panic(char *s)$/;"	f
panic	./user/sh.c	/^panic(char *s)$/;"	f
panicked	./kernel/kernel.asm	/^  panicked = 1; \/\/ freeze uart output from other CPUs$/;"	d
panicked	./kernel/printf.c	/^volatile int panicked = 0;$/;"	v
parent	./kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	./user/sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	./user/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	./user/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	./user/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	./user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	./user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	./user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	./kernel/types.h	/^typedef uint64 pde_t;$/;"	t
peek	./user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgbug	./user/usertests.c	/^pgbug(char *s)$/;"	f
phentsize	./kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	./kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	./kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr
pi	./kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	./kernel/kernel.asm	/^          pid = np->pid;$/;"	d
pid	./kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	./kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	./kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	./kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	./user/forktest.asm	/^    pid = fork();$/;"	d
pid	./user/init.asm	/^    pid = fork();$/;"	d
pid	./user/sh.asm	/^  pid = fork();$/;"	d
pid	./user/usertests.asm	/^    pid = fork();$/;"	d
pid	./user/usertests.asm	/^  pid = fork();$/;"	d
pid1	./user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	./user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	./user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	./kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
pipe	./kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:file::pipe
pipe	./kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	./user/cat.asm	/^pipe:$/;"	l
pipe	./user/echo.asm	/^pipe:$/;"	l
pipe	./user/forktest.asm	/^pipe:$/;"	l
pipe	./user/grep.asm	/^pipe:$/;"	l
pipe	./user/grind.asm	/^pipe:$/;"	l
pipe	./user/init.asm	/^pipe:$/;"	l
pipe	./user/kill.asm	/^pipe:$/;"	l
pipe	./user/ln.asm	/^pipe:$/;"	l
pipe	./user/ls.asm	/^pipe:$/;"	l
pipe	./user/mkdir.asm	/^pipe:$/;"	l
pipe	./user/pingpong.asm	/^pipe:$/;"	l
pipe	./user/prime.asm	/^pipe:$/;"	l
pipe	./user/primes.asm	/^pipe:$/;"	l
pipe	./user/rm.asm	/^pipe:$/;"	l
pipe	./user/sh.asm	/^pipe:$/;"	l
pipe	./user/sleep.asm	/^pipe:$/;"	l
pipe	./user/stressfs.asm	/^pipe:$/;"	l
pipe	./user/usertests.asm	/^pipe:$/;"	l
pipe	./user/usys.S	/^pipe:$/;"	l
pipe	./user/wc.asm	/^pipe:$/;"	l
pipe	./user/zombie.asm	/^pipe:$/;"	l
pipe1	./user/usertests.c	/^pipe1(char *s)$/;"	f
pipealloc	./kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	./kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f
pipecmd	./user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	./user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	./kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f
pipewrite	./kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f
plic_claim	./kernel/plic.c	/^plic_claim(void)$/;"	f
plic_complete	./kernel/plic.c	/^plic_complete(int irq)$/;"	f
plicinit	./kernel/plic.c	/^plicinit(void)$/;"	f
plicinithart	./kernel/plic.c	/^plicinithart(void)$/;"	f
pop_off	./kernel/spinlock.c	/^pop_off(void)$/;"	f
post_make	./gradelib.py	/^def post_make():$/;"	f
pr	./kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anon4	file:
pre_make	./gradelib.py	/^def pre_make():$/;"	f
preempt	./user/usertests.c	/^preempt(char *s)$/;"	f
prev	./kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
prime	./user/primes.c	/^void prime(){$/;"	f
print	./user/forktest.c	/^print(const char *s)$/;"	f
printf	./kernel/printf.c	/^printf(char *fmt, ...)$/;"	f
printf	./user/printf.c	/^printf(const char *fmt, ...)$/;"	f
printfinit	./kernel/printf.c	/^printfinit(void)$/;"	f
printint	./kernel/printf.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	./user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	./kernel/printf.c	/^printptr(uint64 x)$/;"	f	file:
printptr	./user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
proc	./kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc
proc	./kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	./kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	./kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f
proc_pagetable	./kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f
procdump	./kernel/proc.c	/^procdump(void)$/;"	f
procinit	./kernel/proc.c	/^procinit(void)$/;"	f
procstate	./kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	./kernel/elf.h	/^struct proghdr {$/;"	s
pte	./kernel/kernel.asm	/^  pte = walk(kernel_pagetable, va, 0);$/;"	d
pte	./kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	./kernel/kernel.asm	/^pte_t *$/;"	l
pte_t	./kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t
ptr	./user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon9	typeref:union:header::__anon9::header	file:
push_off	./kernel/spinlock.c	/^push_off(void)$/;"	f
putc	./user/printf.c	/^putc(int fd, char c)$/;"	f	file:
r	./grade-lab-util	/^r = Runner(save("xv6.out"))$/;"	v
r	./kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon2	file:
r	./kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	./kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	./kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	./kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	./kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	./kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	./user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/grind.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/pingpong.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/prime.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/primes.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/sleep.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	./user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_mcounteren	./kernel/riscv.h	/^r_mcounteren()$/;"	f
r_medeleg	./kernel/riscv.h	/^r_medeleg()$/;"	f
r_mhartid	./kernel/riscv.h	/^r_mhartid()$/;"	f
r_mideleg	./kernel/riscv.h	/^r_mideleg()$/;"	f
r_mie	./kernel/riscv.h	/^r_mie()$/;"	f
r_mstatus	./kernel/riscv.h	/^r_mstatus()$/;"	f
r_ra	./kernel/riscv.h	/^r_ra()$/;"	f
r_satp	./kernel/riscv.h	/^r_satp()$/;"	f
r_scause	./kernel/riscv.h	/^r_scause()$/;"	f
r_sepc	./kernel/riscv.h	/^r_sepc()$/;"	f
r_sie	./kernel/riscv.h	/^r_sie()$/;"	f
r_sip	./kernel/riscv.h	/^r_sip()$/;"	f
r_sp	./kernel/riscv.h	/^r_sp()$/;"	f
r_sstatus	./kernel/riscv.h	/^r_sstatus()$/;"	f
r_stval	./kernel/riscv.h	/^r_stval()$/;"	f
r_stvec	./kernel/riscv.h	/^r_stvec()$/;"	f
r_time	./kernel/riscv.h	/^r_time()$/;"	f
r_tp	./kernel/riscv.h	/^r_tp()$/;"	f
ra	./kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe
ra	./kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context
ramdiskinit	./kernel/ramdisk.c	/^ramdiskinit(void)$/;"	f
ramdiskrw	./kernel/ramdisk.c	/^ramdiskrw(struct buf *b)$/;"	f
rand	./user/grind.c	/^rand(void)$/;"	f
rand	./user/usertests.c	/^rand()$/;"	f
rand_next	./user/grind.asm	/^    rand_next = 31;$/;"	d
rand_next	./user/grind.asm	/^    rand_next = 7177;$/;"	d
rand_next	./user/grind.c	/^unsigned long rand_next = 1;$/;"	v
random_str	./gradelib.py	/^def random_str(n=8):$/;"	f
randstate	./user/usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	./user/usertests.c	/^unsigned long randstate = 1;$/;"	v
rcmd	./user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	./kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw
read	./user/cat.asm	/^read:$/;"	l
read	./user/echo.asm	/^read:$/;"	l
read	./user/forktest.asm	/^read:$/;"	l
read	./user/grep.asm	/^read:$/;"	l
read	./user/grind.asm	/^read:$/;"	l
read	./user/init.asm	/^read:$/;"	l
read	./user/kill.asm	/^read:$/;"	l
read	./user/ln.asm	/^read:$/;"	l
read	./user/ls.asm	/^read:$/;"	l
read	./user/mkdir.asm	/^read:$/;"	l
read	./user/pingpong.asm	/^read:$/;"	l
read	./user/prime.asm	/^read:$/;"	l
read	./user/primes.asm	/^read:$/;"	l
read	./user/rm.asm	/^read:$/;"	l
read	./user/sh.asm	/^read:$/;"	l
read	./user/sleep.asm	/^read:$/;"	l
read	./user/stressfs.asm	/^read:$/;"	l
read	./user/usertests.asm	/^read:$/;"	l
read	./user/usys.S	/^read:$/;"	l
read	./user/wc.asm	/^read:$/;"	l
read	./user/zombie.asm	/^read:$/;"	l
read_head	./kernel/log.c	/^read_head(void)$/;"	f	file:
readable	./kernel/file.h	/^  char readable;$/;"	m	struct:file
readi	./kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f
readopen	./kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	./kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	file:
recover_from_log	./kernel/log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	./user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	./user/sh.c	/^struct redircmd {$/;"	s	file:
ref	./kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	./kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	./kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf
register_test	./gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
release	./kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	./kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reparent	./kernel/proc.c	/^reparent(struct proc *p)$/;"	f
reparent	./user/usertests.c	/^reparent(char *s)$/;"	f
reparent2	./user/usertests.c	/^reparent2(char *s)$/;"	f
reset_fs	./gradelib.py	/^def reset_fs():$/;"	f
ret	./kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	./kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	./kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	./user/sh.asm	/^      ret = '+';$/;"	d
ret	./user/sh.asm	/^    ret = 'a';$/;"	d
ret	./user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	./user/sh.asm	/^  ret = *s;$/;"	d
ret	./user/sh.asm	/^  ret = execcmd();$/;"	d
ret	./user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	./user/usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	./user/usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	./user/usertests.asm	/^  ret = link(b, b);$/;"	d
right	./user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	./user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	./mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rmdot	./user/usertests.c	/^rmdot(char *s)$/;"	f
rsect	./mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rtcdate	./kernel/date.h	/^struct rtcdate {$/;"	s
run	./kernel/kalloc.c	/^struct run {$/;"	s	file:
run	./user/usertests.c	/^run(void f(char *), char *s) {$/;"	f
run_qemu	./gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	./gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	./gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	./gradelib.py	/^def run_tests():$/;"	f
runcmd	./user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	./kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	./kernel/kernel.asm	/^  s = src;$/;"	d
s	./user/cat.asm	/^          s = "(null)";$/;"	d
s	./user/cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/echo.asm	/^          s = "(null)";$/;"	d
s	./user/echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/grep.asm	/^          s = "(null)";$/;"	d
s	./user/grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/grind.asm	/^          s = "(null)";$/;"	d
s	./user/grind.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/init.asm	/^          s = "(null)";$/;"	d
s	./user/init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/kill.asm	/^          s = "(null)";$/;"	d
s	./user/kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/ln.asm	/^          s = "(null)";$/;"	d
s	./user/ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/ls.asm	/^          s = "(null)";$/;"	d
s	./user/ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/mkdir.asm	/^          s = "(null)";$/;"	d
s	./user/mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/pingpong.asm	/^          s = "(null)";$/;"	d
s	./user/pingpong.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/prime.asm	/^          s = "(null)";$/;"	d
s	./user/prime.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/primes.asm	/^          s = "(null)";$/;"	d
s	./user/primes.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/rm.asm	/^          s = "(null)";$/;"	d
s	./user/rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/sh.asm	/^          s = "(null)";$/;"	d
s	./user/sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/sh.asm	/^  s = *ps;$/;"	d
s	./user/sleep.asm	/^          s = "(null)";$/;"	d
s	./user/sleep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/stressfs.asm	/^          s = "(null)";$/;"	d
s	./user/stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon9	file:
s	./user/usertests.asm	/^          s = "(null)";$/;"	d
s	./user/usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/wc.asm	/^          s = "(null)";$/;"	d
s	./user/wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	./user/zombie.asm	/^          s = "(null)";$/;"	d
s	./user/zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s0	./kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe
s0	./kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context
s1	./kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	./kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe
s1	./kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context
s10	./kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe
s10	./kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context
s11	./kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe
s11	./kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context
s2	./kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	./kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe
s2	./kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context
s3	./kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe
s3	./kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context
s4	./kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe
s4	./kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context
s5	./kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe
s5	./kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context
s6	./kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe
s6	./kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context
s7	./kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe
s7	./kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context
s8	./kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe
s8	./kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context
s9	./kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe
s9	./kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context
safestrcpy	./kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
save	./gradelib.py	/^def save(path):$/;"	f
save_on_finish	./gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sb	./kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	./mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	./user/cat.asm	/^sbrk:$/;"	l
sbrk	./user/echo.asm	/^sbrk:$/;"	l
sbrk	./user/forktest.asm	/^sbrk:$/;"	l
sbrk	./user/grep.asm	/^sbrk:$/;"	l
sbrk	./user/grind.asm	/^sbrk:$/;"	l
sbrk	./user/init.asm	/^sbrk:$/;"	l
sbrk	./user/kill.asm	/^sbrk:$/;"	l
sbrk	./user/ln.asm	/^sbrk:$/;"	l
sbrk	./user/ls.asm	/^sbrk:$/;"	l
sbrk	./user/mkdir.asm	/^sbrk:$/;"	l
sbrk	./user/pingpong.asm	/^sbrk:$/;"	l
sbrk	./user/prime.asm	/^sbrk:$/;"	l
sbrk	./user/primes.asm	/^sbrk:$/;"	l
sbrk	./user/rm.asm	/^sbrk:$/;"	l
sbrk	./user/sh.asm	/^sbrk:$/;"	l
sbrk	./user/sleep.asm	/^sbrk:$/;"	l
sbrk	./user/stressfs.asm	/^sbrk:$/;"	l
sbrk	./user/usertests.asm	/^sbrk:$/;"	l
sbrk	./user/usys.S	/^sbrk:$/;"	l
sbrk	./user/wc.asm	/^sbrk:$/;"	l
sbrk	./user/zombie.asm	/^sbrk:$/;"	l
sbrkarg	./user/usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	./user/usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	./user/usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	./user/usertests.c	/^sbrkfail(char *s)$/;"	f
sbrkmuch	./user/usertests.c	/^sbrkmuch(char *s)$/;"	f
sched	./kernel/proc.c	/^sched(void)$/;"	f
scheduler	./kernel/proc.c	/^scheduler(void)$/;"	f
second	./kernel/date.h	/^  uint second;$/;"	m	struct:rtcdate
setup_breakpoint	./gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	./gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_call_on_line	./gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:shell_script
setup_save	./gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfence_vma	./kernel/riscv.h	/^sfence_vma()$/;"	f
sharedfd	./user/usertests.c	/^sharedfd(char *s)$/;"	f
shell_script	./gradelib.py	/^def shell_script(script, terminate_match=None):$/;"	f
shentsize	./kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shnum	./kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	./kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr
show_command	./gradelib.py	/^def show_command(cmd):$/;"	f
show_part	./gradelib.py	/^    def show_part():$/;"	f	function:end_part
shstrndx	./kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
size	./kernel/file.h	/^  uint size;$/;"	m	struct:inode
size	./kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	./kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	./kernel/log.c	/^  int size;$/;"	m	struct:log	file:
size	./kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat
size	./user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon9	file:
skipelem	./kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	./kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleep	./user/cat.asm	/^sleep:$/;"	l
sleep	./user/echo.asm	/^sleep:$/;"	l
sleep	./user/forktest.asm	/^sleep:$/;"	l
sleep	./user/grep.asm	/^sleep:$/;"	l
sleep	./user/grind.asm	/^sleep:$/;"	l
sleep	./user/init.asm	/^sleep:$/;"	l
sleep	./user/kill.asm	/^sleep:$/;"	l
sleep	./user/ln.asm	/^sleep:$/;"	l
sleep	./user/ls.asm	/^sleep:$/;"	l
sleep	./user/mkdir.asm	/^sleep:$/;"	l
sleep	./user/pingpong.asm	/^sleep:$/;"	l
sleep	./user/prime.asm	/^sleep:$/;"	l
sleep	./user/primes.asm	/^sleep:$/;"	l
sleep	./user/rm.asm	/^sleep:$/;"	l
sleep	./user/sh.asm	/^sleep:$/;"	l
sleep	./user/sleep.asm	/^sleep:$/;"	l
sleep	./user/stressfs.asm	/^sleep:$/;"	l
sleep	./user/usertests.asm	/^sleep:$/;"	l
sleep	./user/usys.S	/^sleep:$/;"	l
sleep	./user/wc.asm	/^sleep:$/;"	l
sleep	./user/zombie.asm	/^sleep:$/;"	l
sleeplock	./kernel/sleeplock.h	/^struct sleeplock {$/;"	s
sp	./kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	./kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe
sp	./kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context
spin	./kernel/entry.S	/^spin:$/;"	l
spinlock	./kernel/spinlock.h	/^struct spinlock {$/;"	s
src	./user/cat.asm	/^  src = vsrc;$/;"	d
src	./user/echo.asm	/^  src = vsrc;$/;"	d
src	./user/forktest.asm	/^  src = vsrc;$/;"	d
src	./user/grep.asm	/^  src = vsrc;$/;"	d
src	./user/grind.asm	/^  src = vsrc;$/;"	d
src	./user/init.asm	/^  src = vsrc;$/;"	d
src	./user/kill.asm	/^  src = vsrc;$/;"	d
src	./user/ln.asm	/^  src = vsrc;$/;"	d
src	./user/ls.asm	/^  src = vsrc;$/;"	d
src	./user/mkdir.asm	/^  src = vsrc;$/;"	d
src	./user/pingpong.asm	/^  src = vsrc;$/;"	d
src	./user/prime.asm	/^  src = vsrc;$/;"	d
src	./user/primes.asm	/^  src = vsrc;$/;"	d
src	./user/rm.asm	/^  src = vsrc;$/;"	d
src	./user/sh.asm	/^  src = vsrc;$/;"	d
src	./user/sleep.asm	/^  src = vsrc;$/;"	d
src	./user/stressfs.asm	/^  src = vsrc;$/;"	d
src	./user/usertests.asm	/^  src = vsrc;$/;"	d
src	./user/wc.asm	/^  src = vsrc;$/;"	d
src	./user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	./kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	./kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v
stackbase	./kernel/kernel.asm	/^  stackbase = sp - PGSIZE;$/;"	d
stacktest	./user/usertests.c	/^stacktest(char *s)$/;"	f
start	./kernel/log.c	/^  int start;$/;"	m	struct:log	file:
start	./kernel/start.c	/^start()$/;"	f
start	./user/initcode.S	/^start:$/;"	l
start	./user/initcode.asm	/^start:$/;"	l
started	./kernel/kernel.asm	/^    started = 1;$/;"	d
started	./kernel/main.c	/^volatile static int started = 0;$/;"	v	file:
stat	./kernel/stat.h	/^struct stat {$/;"	s
stat	./mkfs/mkfs.c	8;"	d	file:
stat	./user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
state	./kernel/kernel.asm	/^      state = "???";$/;"	d
state	./kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	./kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	./user/cat.asm	/^        state = '%';$/;"	d
state	./user/cat.asm	/^      state = 0;$/;"	d
state	./user/cat.asm	/^  state = 0;$/;"	d
state	./user/echo.asm	/^        state = '%';$/;"	d
state	./user/echo.asm	/^      state = 0;$/;"	d
state	./user/echo.asm	/^  state = 0;$/;"	d
state	./user/grep.asm	/^        state = '%';$/;"	d
state	./user/grep.asm	/^      state = 0;$/;"	d
state	./user/grep.asm	/^  state = 0;$/;"	d
state	./user/grind.asm	/^        state = '%';$/;"	d
state	./user/grind.asm	/^      state = 0;$/;"	d
state	./user/grind.asm	/^  state = 0;$/;"	d
state	./user/init.asm	/^        state = '%';$/;"	d
state	./user/init.asm	/^      state = 0;$/;"	d
state	./user/init.asm	/^  state = 0;$/;"	d
state	./user/kill.asm	/^        state = '%';$/;"	d
state	./user/kill.asm	/^      state = 0;$/;"	d
state	./user/kill.asm	/^  state = 0;$/;"	d
state	./user/ln.asm	/^        state = '%';$/;"	d
state	./user/ln.asm	/^      state = 0;$/;"	d
state	./user/ln.asm	/^  state = 0;$/;"	d
state	./user/ls.asm	/^        state = '%';$/;"	d
state	./user/ls.asm	/^      state = 0;$/;"	d
state	./user/ls.asm	/^  state = 0;$/;"	d
state	./user/mkdir.asm	/^        state = '%';$/;"	d
state	./user/mkdir.asm	/^      state = 0;$/;"	d
state	./user/mkdir.asm	/^  state = 0;$/;"	d
state	./user/pingpong.asm	/^        state = '%';$/;"	d
state	./user/pingpong.asm	/^      state = 0;$/;"	d
state	./user/pingpong.asm	/^  state = 0;$/;"	d
state	./user/prime.asm	/^        state = '%';$/;"	d
state	./user/prime.asm	/^      state = 0;$/;"	d
state	./user/prime.asm	/^  state = 0;$/;"	d
state	./user/primes.asm	/^        state = '%';$/;"	d
state	./user/primes.asm	/^      state = 0;$/;"	d
state	./user/primes.asm	/^  state = 0;$/;"	d
state	./user/rm.asm	/^        state = '%';$/;"	d
state	./user/rm.asm	/^      state = 0;$/;"	d
state	./user/rm.asm	/^  state = 0;$/;"	d
state	./user/sh.asm	/^        state = '%';$/;"	d
state	./user/sh.asm	/^      state = 0;$/;"	d
state	./user/sh.asm	/^  state = 0;$/;"	d
state	./user/sleep.asm	/^        state = '%';$/;"	d
state	./user/sleep.asm	/^      state = 0;$/;"	d
state	./user/sleep.asm	/^  state = 0;$/;"	d
state	./user/stressfs.asm	/^        state = '%';$/;"	d
state	./user/stressfs.asm	/^      state = 0;$/;"	d
state	./user/stressfs.asm	/^  state = 0;$/;"	d
state	./user/usertests.asm	/^        state = '%';$/;"	d
state	./user/usertests.asm	/^      state = 0;$/;"	d
state	./user/usertests.asm	/^  state = 0;$/;"	d
state	./user/wc.asm	/^        state = '%';$/;"	d
state	./user/wc.asm	/^      state = 0;$/;"	d
state	./user/wc.asm	/^  state = 0;$/;"	d
state	./user/zombie.asm	/^        state = '%';$/;"	d
state	./user/zombie.asm	/^      state = 0;$/;"	d
state	./user/zombie.asm	/^  state = 0;$/;"	d
stati	./kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	./kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	./kernel/kernel.asm	/^static inline uint64$/;"	l
static	./kernel/kernel.asm	/^static inline void $/;"	l
static	./kernel/kernel.asm	/^static inline void$/;"	l
static	./kernel/kernel.asm	/^static int loadseg(pde_t *pgdir, uint64 addr, struct inode *ip, uint offset, uint sz);$/;"	l
static	./kernel/kernel.asm	/^static int$/;"	l
static	./kernel/kernel.asm	/^static struct inode*$/;"	t
static	./kernel/kernel.asm	/^static uint$/;"	l
static	./kernel/kernel.asm	/^static uint64$/;"	l
static	./kernel/kernel.asm	/^static void$/;"	l
static	./user/cat.asm	/^static Header *freep;$/;"	l
static	./user/cat.asm	/^static Header base;$/;"	l
static	./user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/cat.asm	/^static void$/;"	l
static	./user/echo.asm	/^static Header *freep;$/;"	l
static	./user/echo.asm	/^static Header base;$/;"	l
static	./user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/echo.asm	/^static void$/;"	l
static	./user/grep.asm	/^static Header *freep;$/;"	l
static	./user/grep.asm	/^static Header base;$/;"	l
static	./user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/grep.asm	/^static void$/;"	l
static	./user/grind.asm	/^static Header *freep;$/;"	l
static	./user/grind.asm	/^static Header base;$/;"	l
static	./user/grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/grind.asm	/^static void$/;"	l
static	./user/init.asm	/^static Header *freep;$/;"	l
static	./user/init.asm	/^static Header base;$/;"	l
static	./user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/init.asm	/^static void$/;"	l
static	./user/kill.asm	/^static Header *freep;$/;"	l
static	./user/kill.asm	/^static Header base;$/;"	l
static	./user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/kill.asm	/^static void$/;"	l
static	./user/ln.asm	/^static Header *freep;$/;"	l
static	./user/ln.asm	/^static Header base;$/;"	l
static	./user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/ln.asm	/^static void$/;"	l
static	./user/ls.asm	/^static Header *freep;$/;"	l
static	./user/ls.asm	/^static Header base;$/;"	l
static	./user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/ls.asm	/^static void$/;"	l
static	./user/mkdir.asm	/^static Header *freep;$/;"	l
static	./user/mkdir.asm	/^static Header base;$/;"	l
static	./user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/mkdir.asm	/^static void$/;"	l
static	./user/pingpong.asm	/^static Header *freep;$/;"	l
static	./user/pingpong.asm	/^static Header base;$/;"	l
static	./user/pingpong.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/pingpong.asm	/^static void$/;"	l
static	./user/prime.asm	/^static Header *freep;$/;"	l
static	./user/prime.asm	/^static Header base;$/;"	l
static	./user/prime.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/prime.asm	/^static void$/;"	l
static	./user/primes.asm	/^static Header *freep;$/;"	l
static	./user/primes.asm	/^static Header base;$/;"	l
static	./user/primes.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/primes.asm	/^static void$/;"	l
static	./user/rm.asm	/^static Header *freep;$/;"	l
static	./user/rm.asm	/^static Header base;$/;"	l
static	./user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/rm.asm	/^static void$/;"	l
static	./user/sh.asm	/^static Header *freep;$/;"	l
static	./user/sh.asm	/^static Header base;$/;"	l
static	./user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/sh.asm	/^static void$/;"	l
static	./user/sleep.asm	/^static Header *freep;$/;"	l
static	./user/sleep.asm	/^static Header base;$/;"	l
static	./user/sleep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/sleep.asm	/^static void$/;"	l
static	./user/stressfs.asm	/^static Header *freep;$/;"	l
static	./user/stressfs.asm	/^static Header base;$/;"	l
static	./user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/stressfs.asm	/^static void$/;"	l
static	./user/usertests.asm	/^static Header *freep;$/;"	l
static	./user/usertests.asm	/^static Header base;$/;"	l
static	./user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/usertests.asm	/^static inline uint64$/;"	l
static	./user/usertests.asm	/^static void$/;"	l
static	./user/wc.asm	/^static Header *freep;$/;"	l
static	./user/wc.asm	/^static Header base;$/;"	l
static	./user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/wc.asm	/^static void$/;"	l
static	./user/zombie.asm	/^static Header *freep;$/;"	l
static	./user/zombie.asm	/^static Header base;$/;"	l
static	./user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	./user/zombie.asm	/^static void$/;"	l
static_assert	./mkfs/mkfs.c	15;"	d	file:
status	./kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon3	file:
stop	./gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	./gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	./gradelib.py	/^def stop_on_line(regexp):$/;"	f
strchr	./user/ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	./user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	./user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	./kernel/string.c	/^strlen(const char *s)$/;"	f
strlen	./user/ulib.c	/^strlen(const char *s)$/;"	f
strncmp	./kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	./kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	./kernel/kernel.asm	/^  struct proc *original_parent = p->parent;$/;"	l
struct	./kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	./kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	./kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	./kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	./user/usertests.c	/^subdir(char *s)$/;"	f
superblock	./kernel/fs.h	/^struct superblock {$/;"	s
swtch	./kernel/swtch.S	/^swtch:$/;"	l
symbols	./user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	./kernel/sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	./kernel/sysfile.c	/^sys_close(void)$/;"	f
sys_dup	./kernel/sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	./kernel/sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	./kernel/sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	./kernel/sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	./kernel/sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	./kernel/sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	./kernel/sysproc.c	/^sys_kill(void)$/;"	f
sys_link	./kernel/sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	./kernel/sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	./kernel/sysfile.c	/^sys_mknod(void)$/;"	f
sys_open	./kernel/sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	./kernel/sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	./kernel/sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	./kernel/sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	./kernel/sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	./kernel/sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	./kernel/sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	./kernel/sysproc.c	/^sys_wait(void)$/;"	f
sys_write	./kernel/sysfile.c	/^sys_write(void)$/;"	f
syscall	./kernel/syscall.c	/^syscall(void)$/;"	f
syscalls	./kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	file:
sz	./kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	./kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	./kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	./kernel/kernel.asm	/^  sz = sz1;$/;"	d
sz	./kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t0	./kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe
t1	./kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe
t2	./kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe
t3	./kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe
t4	./kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe
t5	./kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe
t6	./kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe
target	./kernel/kernel.asm	/^  target = n;$/;"	d
test	./gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_find_curdir	./grade-lab-util	/^def test_find_curdir():$/;"	f
test_find_recursive	./grade-lab-util	/^def test_find_recursive():$/;"	f
test_pingpong	./grade-lab-util	/^def test_pingpong():$/;"	f
test_primes	./grade-lab-util	/^def test_primes():$/;"	f
test_sleep	./grade-lab-util	/^def test_sleep():$/;"	f
test_sleep_no_args	./grade-lab-util	/^def test_sleep_no_args():$/;"	f
test_time	./grade-lab-util	/^def test_time():$/;"	f
test_xargs	./grade-lab-util	/^def test_xargs():$/;"	f
ticks	./kernel/trap.c	/^uint ticks;$/;"	v
ticks0	./kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	./kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timerinit	./kernel/start.c	/^timerinit()$/;"	f
timervec	./kernel/kernelvec.S	/^timervec:$/;"	l
tok	./user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	./user/usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
total	./user/usertests.asm	/^    total = 0;$/;"	d
total	./user/usertests.asm	/^  total = 0;$/;"	d
tp	./kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe
trampoline	./kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	./kernel/proc.h	/^  struct trapframe *trapframe; \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:proc::trapframe
trapframe	./kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	./kernel/trap.c	/^trapinit(void)$/;"	f
trapinithart	./kernel/trap.c	/^trapinithart(void)$/;"	f
truncate1	./user/usertests.c	/^truncate1(char *s)$/;"	f
truncate2	./user/usertests.c	/^truncate2(char *s)$/;"	f
truncate3	./user/usertests.c	/^truncate3(char *s)$/;"	f
twochildren	./user/usertests.c	/^twochildren(char *s)$/;"	f
type	./kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	./kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	./kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anon7
type	./kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	./kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	./kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
type	./user/sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	./user/sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	./user/sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	./user/sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	./user/sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	./user/sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uart_tx_buf	./kernel/uart.c	/^char uart_tx_buf[UART_TX_BUF_SIZE];$/;"	v
uart_tx_lock	./kernel/uart.c	/^struct spinlock uart_tx_lock;$/;"	v	typeref:struct:spinlock
uart_tx_r	./kernel/kernel.asm	/^    uart_tx_r = (uart_tx_r + 1) % UART_TX_BUF_SIZE;$/;"	d
uart_tx_r	./kernel/uart.c	/^int uart_tx_r; \/\/ read next from uart_tx_buf[uar_tx_r++]$/;"	v
uart_tx_w	./kernel/kernel.asm	/^      uart_tx_w = (uart_tx_w + 1) % UART_TX_BUF_SIZE;$/;"	d
uart_tx_w	./kernel/uart.c	/^int uart_tx_w; \/\/ write next to uart_tx_buf[uart_tx_w++]$/;"	v
uartgetc	./kernel/uart.c	/^uartgetc(void)$/;"	f
uartinit	./kernel/uart.c	/^uartinit(void)$/;"	f
uartintr	./kernel/uart.c	/^uartintr(void)$/;"	f
uartputc	./kernel/uart.c	/^uartputc(int c)$/;"	f
uartputc_sync	./kernel/uart.c	/^uartputc_sync(int c)$/;"	f
uartstart	./kernel/uart.c	/^uartstart()$/;"	f
uchar	./kernel/types.h	/^typedef unsigned char  uchar;$/;"	t
uint	./kernel/types.h	/^typedef unsigned int   uint;$/;"	t
uint	./user/cat.asm	/^uint$/;"	l
uint	./user/echo.asm	/^uint$/;"	l
uint	./user/forktest.asm	/^uint$/;"	l
uint	./user/grep.asm	/^uint$/;"	l
uint	./user/grind.asm	/^uint$/;"	l
uint	./user/init.asm	/^uint$/;"	l
uint	./user/kill.asm	/^uint$/;"	l
uint	./user/ln.asm	/^uint$/;"	l
uint	./user/ls.asm	/^uint$/;"	l
uint	./user/mkdir.asm	/^uint$/;"	l
uint	./user/pingpong.asm	/^uint$/;"	l
uint	./user/prime.asm	/^uint$/;"	l
uint	./user/primes.asm	/^uint$/;"	l
uint	./user/rm.asm	/^uint$/;"	l
uint	./user/sh.asm	/^uint$/;"	l
uint	./user/sleep.asm	/^uint$/;"	l
uint	./user/stressfs.asm	/^uint$/;"	l
uint	./user/usertests.asm	/^uint$/;"	l
uint	./user/wc.asm	/^uint$/;"	l
uint	./user/zombie.asm	/^uint$/;"	l
uint16	./kernel/types.h	/^typedef unsigned short uint16;$/;"	t
uint32	./kernel/types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	./kernel/kernel.asm	/^uint64$/;"	l
uint64	./kernel/types.h	/^typedef unsigned long uint64;$/;"	t
uint8	./kernel/types.h	/^typedef unsigned char uint8;$/;"	t
uninit	./user/usertests.c	/^char uninit[10000];$/;"	v
unlink	./user/cat.asm	/^unlink:$/;"	l
unlink	./user/echo.asm	/^unlink:$/;"	l
unlink	./user/forktest.asm	/^unlink:$/;"	l
unlink	./user/grep.asm	/^unlink:$/;"	l
unlink	./user/grind.asm	/^unlink:$/;"	l
unlink	./user/init.asm	/^unlink:$/;"	l
unlink	./user/kill.asm	/^unlink:$/;"	l
unlink	./user/ln.asm	/^unlink:$/;"	l
unlink	./user/ls.asm	/^unlink:$/;"	l
unlink	./user/mkdir.asm	/^unlink:$/;"	l
unlink	./user/pingpong.asm	/^unlink:$/;"	l
unlink	./user/prime.asm	/^unlink:$/;"	l
unlink	./user/primes.asm	/^unlink:$/;"	l
unlink	./user/rm.asm	/^unlink:$/;"	l
unlink	./user/sh.asm	/^unlink:$/;"	l
unlink	./user/sleep.asm	/^unlink:$/;"	l
unlink	./user/stressfs.asm	/^unlink:$/;"	l
unlink	./user/usertests.asm	/^unlink:$/;"	l
unlink	./user/usys.S	/^unlink:$/;"	l
unlink	./user/wc.asm	/^unlink:$/;"	l
unlink	./user/zombie.asm	/^unlink:$/;"	l
unlinkread	./user/usertests.c	/^unlinkread(char *s)$/;"	f
unsigned	./user/grind.asm	/^unsigned long rand_next = 1;$/;"	l
uptime	./user/cat.asm	/^uptime:$/;"	l
uptime	./user/echo.asm	/^uptime:$/;"	l
uptime	./user/forktest.asm	/^uptime:$/;"	l
uptime	./user/grep.asm	/^uptime:$/;"	l
uptime	./user/grind.asm	/^uptime:$/;"	l
uptime	./user/init.asm	/^uptime:$/;"	l
uptime	./user/kill.asm	/^uptime:$/;"	l
uptime	./user/ln.asm	/^uptime:$/;"	l
uptime	./user/ls.asm	/^uptime:$/;"	l
uptime	./user/mkdir.asm	/^uptime:$/;"	l
uptime	./user/pingpong.asm	/^uptime:$/;"	l
uptime	./user/prime.asm	/^uptime:$/;"	l
uptime	./user/primes.asm	/^uptime:$/;"	l
uptime	./user/rm.asm	/^uptime:$/;"	l
uptime	./user/sh.asm	/^uptime:$/;"	l
uptime	./user/sleep.asm	/^uptime:$/;"	l
uptime	./user/stressfs.asm	/^uptime:$/;"	l
uptime	./user/usertests.asm	/^uptime:$/;"	l
uptime	./user/usys.S	/^uptime:$/;"	l
uptime	./user/wc.asm	/^uptime:$/;"	l
uptime	./user/zombie.asm	/^uptime:$/;"	l
used	./kernel/virtio_disk.c	/^  struct UsedArea *used;$/;"	m	struct:disk	typeref:struct:disk::UsedArea	file:
used_idx	./kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
user_test	./gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
userinit	./kernel/proc.c	/^userinit(void)$/;"	f
userret	./kernel/trampoline.S	/^userret:$/;"	l
usertrap	./kernel/trap.c	/^usertrap(void)$/;"	f
usertrapret	./kernel/trap.c	/^usertrapret(void)$/;"	f
uservec	./kernel/trampoline.S	/^uservec:    $/;"	l
ushort	./kernel/types.h	/^typedef unsigned short ushort;$/;"	t
uvmalloc	./kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmclear	./kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f
uvmcopy	./kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f
uvmcreate	./kernel/vm.c	/^uvmcreate()$/;"	f
uvmdealloc	./kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmfree	./kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f
uvminit	./kernel/vm.c	/^uvminit(pagetable_t pagetable, uchar *src, uint sz)$/;"	f
uvmunmap	./kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)$/;"	f
va0	./kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	./kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	./kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
valid	./kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf
valid	./kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode
validatetest	./user/usertests.c	/^validatetest(char *s)$/;"	f
vdisk_lock	./kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:disk::spinlock	file:
version	./kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr
virtio_disk_init	./kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f
virtio_disk_intr	./kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f
virtio_disk_rw	./kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f
void	./kernel/kernel.asm	/^void *$/;"	l
void	./kernel/kernel.asm	/^void uartstart();$/;"	l
void	./kernel/kernel.asm	/^void$/;"	l
void	./user/cat.asm	/^void *$/;"	l
void	./user/cat.asm	/^void$/;"	l
void	./user/echo.asm	/^void *$/;"	l
void	./user/echo.asm	/^void$/;"	l
void	./user/forktest.asm	/^void *$/;"	l
void	./user/forktest.asm	/^void$/;"	l
void	./user/grep.asm	/^void *$/;"	l
void	./user/grep.asm	/^void$/;"	l
void	./user/grind.asm	/^void *$/;"	l
void	./user/grind.asm	/^void$/;"	l
void	./user/init.asm	/^void *$/;"	l
void	./user/init.asm	/^void$/;"	l
void	./user/kill.asm	/^void *$/;"	l
void	./user/kill.asm	/^void$/;"	l
void	./user/ln.asm	/^void *$/;"	l
void	./user/ln.asm	/^void$/;"	l
void	./user/ls.asm	/^void *$/;"	l
void	./user/ls.asm	/^void$/;"	l
void	./user/mkdir.asm	/^void *$/;"	l
void	./user/mkdir.asm	/^void$/;"	l
void	./user/pingpong.asm	/^void *$/;"	l
void	./user/pingpong.asm	/^void$/;"	l
void	./user/prime.asm	/^void *$/;"	l
void	./user/prime.asm	/^void close_pipe(int *fd)$/;"	l
void	./user/prime.asm	/^void prime(){$/;"	l
void	./user/prime.asm	/^void$/;"	l
void	./user/primes.asm	/^void *$/;"	l
void	./user/primes.asm	/^void close_pipe(int *fd)$/;"	l
void	./user/primes.asm	/^void prime(){$/;"	l
void	./user/primes.asm	/^void$/;"	l
void	./user/rm.asm	/^void *$/;"	l
void	./user/rm.asm	/^void$/;"	l
void	./user/sh.asm	/^void *$/;"	l
void	./user/sh.asm	/^void$/;"	l
void	./user/sleep.asm	/^void *$/;"	l
void	./user/sleep.asm	/^void$/;"	l
void	./user/stressfs.asm	/^void *$/;"	l
void	./user/stressfs.asm	/^void$/;"	l
void	./user/usertests.asm	/^void *$/;"	l
void	./user/usertests.asm	/^void$/;"	l
void	./user/wc.asm	/^void *$/;"	l
void	./user/wc.asm	/^void$/;"	l
void	./user/zombie.asm	/^void *$/;"	l
void	./user/zombie.asm	/^void$/;"	l
volatile	./kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
vprintf	./user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
w	./kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon2	file:
w_mcounteren	./kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f
w_medeleg	./kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f
w_mepc	./kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f
w_mideleg	./kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f
w_mie	./kernel/riscv.h	/^w_mie(uint64 x)$/;"	f
w_mscratch	./kernel/riscv.h	/^w_mscratch(uint64 x)$/;"	f
w_mstatus	./kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f
w_mtvec	./kernel/riscv.h	/^w_mtvec(uint64 x)$/;"	f
w_satp	./kernel/riscv.h	/^w_satp(uint64 x)$/;"	f
w_sepc	./kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f
w_sie	./kernel/riscv.h	/^w_sie(uint64 x)$/;"	f
w_sip	./kernel/riscv.h	/^w_sip(uint64 x)$/;"	f
w_sscratch	./kernel/riscv.h	/^w_sscratch(uint64 x)$/;"	f
w_sstatus	./kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f
w_stvec	./kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f
w_tp	./kernel/riscv.h	/^w_tp(uint64 x)$/;"	f
wait	./gradelib.py	/^    def wait(self):$/;"	f
wait	./kernel/proc.c	/^wait(uint64 addr)$/;"	f
wait	./user/cat.asm	/^wait:$/;"	l
wait	./user/echo.asm	/^wait:$/;"	l
wait	./user/forktest.asm	/^wait:$/;"	l
wait	./user/grep.asm	/^wait:$/;"	l
wait	./user/grind.asm	/^wait:$/;"	l
wait	./user/init.asm	/^wait:$/;"	l
wait	./user/kill.asm	/^wait:$/;"	l
wait	./user/ln.asm	/^wait:$/;"	l
wait	./user/ls.asm	/^wait:$/;"	l
wait	./user/mkdir.asm	/^wait:$/;"	l
wait	./user/pingpong.asm	/^wait:$/;"	l
wait	./user/prime.asm	/^wait:$/;"	l
wait	./user/primes.asm	/^wait:$/;"	l
wait	./user/rm.asm	/^wait:$/;"	l
wait	./user/sh.asm	/^wait:$/;"	l
wait	./user/sleep.asm	/^wait:$/;"	l
wait	./user/stressfs.asm	/^wait:$/;"	l
wait	./user/usertests.asm	/^wait:$/;"	l
wait	./user/usys.S	/^wait:$/;"	l
wait	./user/wc.asm	/^wait:$/;"	l
wait	./user/zombie.asm	/^wait:$/;"	l
wakeup	./kernel/proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	./kernel/proc.c	/^wakeup1(struct proc *p)$/;"	f	file:
walk	./kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f
walkaddr	./kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f
wc	./user/wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	./user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	./mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
wpid	./user/init.asm	/^      wpid = wait((int *) 0);$/;"	d
writable	./kernel/file.h	/^  char writable;$/;"	m	struct:file
write	./gradelib.py	/^    def write(self, buf):$/;"	f
write	./kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw
write	./user/cat.asm	/^write:$/;"	l
write	./user/echo.asm	/^write:$/;"	l
write	./user/forktest.asm	/^write:$/;"	l
write	./user/grep.asm	/^write:$/;"	l
write	./user/grind.asm	/^write:$/;"	l
write	./user/init.asm	/^write:$/;"	l
write	./user/kill.asm	/^write:$/;"	l
write	./user/ln.asm	/^write:$/;"	l
write	./user/ls.asm	/^write:$/;"	l
write	./user/mkdir.asm	/^write:$/;"	l
write	./user/pingpong.asm	/^write:$/;"	l
write	./user/prime.asm	/^write:$/;"	l
write	./user/primes.asm	/^write:$/;"	l
write	./user/rm.asm	/^write:$/;"	l
write	./user/sh.asm	/^write:$/;"	l
write	./user/sleep.asm	/^write:$/;"	l
write	./user/stressfs.asm	/^write:$/;"	l
write	./user/usertests.asm	/^write:$/;"	l
write	./user/usys.S	/^write:$/;"	l
write	./user/wc.asm	/^write:$/;"	l
write	./user/zombie.asm	/^write:$/;"	l
write_head	./kernel/log.c	/^write_head(void)$/;"	f	file:
write_log	./kernel/log.c	/^write_log(void)$/;"	f	file:
writebig	./user/usertests.c	/^writebig(char *s)$/;"	f
writei	./kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f
writeopen	./kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	./user/usertests.c	/^writetest(char *s)$/;"	f
wsect	./mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	./kernel/kernel.asm	/^    x = -xx;$/;"	d
x	./kernel/kernel.asm	/^    x = xx;$/;"	d
x	./user/cat.asm	/^    x = -xx;$/;"	d
x	./user/cat.asm	/^    x = xx;$/;"	d
x	./user/echo.asm	/^    x = -xx;$/;"	d
x	./user/echo.asm	/^    x = xx;$/;"	d
x	./user/grep.asm	/^    x = -xx;$/;"	d
x	./user/grep.asm	/^    x = xx;$/;"	d
x	./user/grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	./user/grind.asm	/^    x = -xx;$/;"	d
x	./user/grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	./user/grind.asm	/^    x = xx;$/;"	d
x	./user/init.asm	/^    x = -xx;$/;"	d
x	./user/init.asm	/^    x = xx;$/;"	d
x	./user/kill.asm	/^    x = -xx;$/;"	d
x	./user/kill.asm	/^    x = xx;$/;"	d
x	./user/ln.asm	/^    x = -xx;$/;"	d
x	./user/ln.asm	/^    x = xx;$/;"	d
x	./user/ls.asm	/^    x = -xx;$/;"	d
x	./user/ls.asm	/^    x = xx;$/;"	d
x	./user/mkdir.asm	/^    x = -xx;$/;"	d
x	./user/mkdir.asm	/^    x = xx;$/;"	d
x	./user/pingpong.asm	/^    x = -xx;$/;"	d
x	./user/pingpong.asm	/^    x = xx;$/;"	d
x	./user/prime.asm	/^    x = -xx;$/;"	d
x	./user/prime.asm	/^    x = xx;$/;"	d
x	./user/primes.asm	/^    x = -xx;$/;"	d
x	./user/primes.asm	/^    x = xx;$/;"	d
x	./user/rm.asm	/^    x = -xx;$/;"	d
x	./user/rm.asm	/^    x = xx;$/;"	d
x	./user/sh.asm	/^    x = -xx;$/;"	d
x	./user/sh.asm	/^    x = xx;$/;"	d
x	./user/sleep.asm	/^    x = -xx;$/;"	d
x	./user/sleep.asm	/^    x = xx;$/;"	d
x	./user/stressfs.asm	/^    x = -xx;$/;"	d
x	./user/stressfs.asm	/^    x = xx;$/;"	d
x	./user/umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	./user/usertests.asm	/^    x = -xx;$/;"	d
x	./user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	./user/usertests.asm	/^    x = xx;$/;"	d
x	./user/wc.asm	/^    x = -xx;$/;"	d
x	./user/wc.asm	/^    x = xx;$/;"	d
x	./user/zombie.asm	/^    x = -xx;$/;"	d
x	./user/zombie.asm	/^    x = xx;$/;"	d
xint	./mkfs/mkfs.c	/^xint(uint x)$/;"	f
xshort	./mkfs/mkfs.c	/^xshort(ushort x)$/;"	f
xstate	./kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc
xticks	./kernel/kernel.asm	/^  xticks = ticks;$/;"	d
year	./kernel/date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	./kernel/proc.c	/^yield(void)$/;"	f
zeroes	./mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v
